
/home/bon/Documents/mock-team-black/application_processor/build/max78000.elf:     file format elf32-littlearm


Disassembly of section .text:

1000e000 <__isr_vector>:
1000e000:	20020000 	.word	0x20020000
1000e004:	1000e561 	.word	0x1000e561
1000e008:	1000e3e5 	.word	0x1000e3e5
1000e00c:	1000e59f 	.word	0x1000e59f
1000e010:	1000e5a1 	.word	0x1000e5a1
1000e014:	1000e5a3 	.word	0x1000e5a3
1000e018:	1000e5a5 	.word	0x1000e5a5
	...
1000e02c:	1000e5a7 	.word	0x1000e5a7
1000e030:	1000e5a9 	.word	0x1000e5a9
1000e034:	00000000 	.word	0x00000000
1000e038:	1000e5ab 	.word	0x1000e5ab
1000e03c:	1000e5ad 	.word	0x1000e5ad
1000e040:	1000e5b1 	.word	0x1000e5b1
1000e044:	1000e5b3 	.word	0x1000e5b3
1000e048:	1000e5b5 	.word	0x1000e5b5
1000e04c:	1000e5b7 	.word	0x1000e5b7
1000e050:	1000e5b9 	.word	0x1000e5b9
1000e054:	1000e5bb 	.word	0x1000e5bb
1000e058:	1000e5bd 	.word	0x1000e5bd
1000e05c:	1000e5bf 	.word	0x1000e5bf
1000e060:	1000e5c1 	.word	0x1000e5c1
1000e064:	1000e5c3 	.word	0x1000e5c3
1000e068:	1000e5c5 	.word	0x1000e5c5
1000e06c:	1000e5c7 	.word	0x1000e5c7
1000e070:	1000e5c9 	.word	0x1000e5c9
1000e074:	1000e5cb 	.word	0x1000e5cb
1000e078:	1000e5cd 	.word	0x1000e5cd
1000e07c:	1000e5cf 	.word	0x1000e5cf
1000e080:	1000e5d1 	.word	0x1000e5d1
1000e084:	1000e5d3 	.word	0x1000e5d3
1000e088:	1000e5d5 	.word	0x1000e5d5
1000e08c:	1000e5d7 	.word	0x1000e5d7
1000e090:	1000e5d9 	.word	0x1000e5d9
1000e094:	1000e5db 	.word	0x1000e5db
1000e098:	1000e5dd 	.word	0x1000e5dd
1000e09c:	1000e5df 	.word	0x1000e5df
1000e0a0:	1000e37d 	.word	0x1000e37d
1000e0a4:	1000e385 	.word	0x1000e385
1000e0a8:	1000e5e5 	.word	0x1000e5e5
1000e0ac:	1000e5e7 	.word	0x1000e5e7
1000e0b0:	1000e5e9 	.word	0x1000e5e9
1000e0b4:	1000e5eb 	.word	0x1000e5eb
1000e0b8:	1000e5ed 	.word	0x1000e5ed
1000e0bc:	1000e5ef 	.word	0x1000e5ef
1000e0c0:	1000e5f1 	.word	0x1000e5f1
1000e0c4:	1000e5f3 	.word	0x1000e5f3
1000e0c8:	1000e5f5 	.word	0x1000e5f5
1000e0cc:	1000e5f7 	.word	0x1000e5f7
1000e0d0:	1000e5f9 	.word	0x1000e5f9
1000e0d4:	1000e5fb 	.word	0x1000e5fb
1000e0d8:	1000e5fd 	.word	0x1000e5fd
1000e0dc:	1000e5ff 	.word	0x1000e5ff
1000e0e0:	1000e601 	.word	0x1000e601
1000e0e4:	1000e603 	.word	0x1000e603
1000e0e8:	1000e605 	.word	0x1000e605
1000e0ec:	1000e607 	.word	0x1000e607
1000e0f0:	1000e609 	.word	0x1000e609
1000e0f4:	1000e60b 	.word	0x1000e60b
1000e0f8:	1000e60d 	.word	0x1000e60d
1000e0fc:	1000e60f 	.word	0x1000e60f
1000e100:	1000e611 	.word	0x1000e611
1000e104:	1000e613 	.word	0x1000e613
1000e108:	1000e615 	.word	0x1000e615
1000e10c:	1000e617 	.word	0x1000e617
1000e110:	1000e619 	.word	0x1000e619
1000e114:	1000e61b 	.word	0x1000e61b
1000e118:	1000e61d 	.word	0x1000e61d
1000e11c:	1000e61f 	.word	0x1000e61f
1000e120:	1000e621 	.word	0x1000e621
1000e124:	1000e623 	.word	0x1000e623
1000e128:	1000e625 	.word	0x1000e625
1000e12c:	1000e627 	.word	0x1000e627
1000e130:	1000e629 	.word	0x1000e629
1000e134:	1000e62b 	.word	0x1000e62b
1000e138:	1000e62d 	.word	0x1000e62d
1000e13c:	1000e62f 	.word	0x1000e62f
1000e140:	1000e631 	.word	0x1000e631
1000e144:	1000e633 	.word	0x1000e633
1000e148:	1000e635 	.word	0x1000e635
1000e14c:	1000e637 	.word	0x1000e637
1000e150:	1000e639 	.word	0x1000e639
1000e154:	1000e63b 	.word	0x1000e63b
1000e158:	1000e63d 	.word	0x1000e63d
1000e15c:	1000e63f 	.word	0x1000e63f
1000e160:	1000e641 	.word	0x1000e641
1000e164:	1000e643 	.word	0x1000e643
1000e168:	1000e645 	.word	0x1000e645
1000e16c:	1000e647 	.word	0x1000e647
1000e170:	1000e649 	.word	0x1000e649
1000e174:	1000e64b 	.word	0x1000e64b
1000e178:	1000e64d 	.word	0x1000e64d
1000e17c:	1000e64f 	.word	0x1000e64f
1000e180:	1000e651 	.word	0x1000e651
1000e184:	1000e653 	.word	0x1000e653
1000e188:	1000e655 	.word	0x1000e655
1000e18c:	1000e657 	.word	0x1000e657
1000e190:	1000e659 	.word	0x1000e659
1000e194:	1000e65b 	.word	0x1000e65b
1000e198:	1000e65d 	.word	0x1000e65d
1000e19c:	1000e65f 	.word	0x1000e65f
1000e1a0:	1000e661 	.word	0x1000e661
1000e1a4:	1000e663 	.word	0x1000e663
1000e1a8:	1000e665 	.word	0x1000e665
1000e1ac:	1000e667 	.word	0x1000e667
1000e1b0:	1000e669 	.word	0x1000e669
1000e1b4:	1000e66b 	.word	0x1000e66b
1000e1b8:	1000e66d 	.word	0x1000e66d
1000e1bc:	1000e66f 	.word	0x1000e66f
1000e1c0:	1000e671 	.word	0x1000e671
1000e1c4:	1000e673 	.word	0x1000e673
1000e1c8:	1000e675 	.word	0x1000e675
1000e1cc:	1000e677 	.word	0x1000e677
1000e1d0:	1000e679 	.word	0x1000e679
1000e1d4:	1000e67b 	.word	0x1000e67b
1000e1d8:	1000e67d 	.word	0x1000e67d
1000e1dc:	1000e67f 	.word	0x1000e67f
	...

1000e200 <firmware_startup>:
1000e200:	4800      	ldr	r0, [pc, #0]	@ (1000e204 <firmware_startup+0x4>)
1000e202:	4780      	blx	r0
1000e204:	1000e561 	.word	0x1000e561

1000e208 <deregister_tm_clones>:
1000e208:	4803      	ldr	r0, [pc, #12]	@ (1000e218 <deregister_tm_clones+0x10>)
1000e20a:	4b04      	ldr	r3, [pc, #16]	@ (1000e21c <deregister_tm_clones+0x14>)
1000e20c:	4283      	cmp	r3, r0
1000e20e:	d002      	beq.n	1000e216 <deregister_tm_clones+0xe>
1000e210:	4b03      	ldr	r3, [pc, #12]	@ (1000e220 <deregister_tm_clones+0x18>)
1000e212:	b103      	cbz	r3, 1000e216 <deregister_tm_clones+0xe>
1000e214:	4718      	bx	r3
1000e216:	4770      	bx	lr
1000e218:	200006c4 	.word	0x200006c4
1000e21c:	200006c4 	.word	0x200006c4
1000e220:	00000000 	.word	0x00000000

1000e224 <register_tm_clones>:
1000e224:	4805      	ldr	r0, [pc, #20]	@ (1000e23c <register_tm_clones+0x18>)
1000e226:	4b06      	ldr	r3, [pc, #24]	@ (1000e240 <register_tm_clones+0x1c>)
1000e228:	1a1b      	subs	r3, r3, r0
1000e22a:	0fd9      	lsrs	r1, r3, #31
1000e22c:	eb01 01a3 	add.w	r1, r1, r3, asr #2
1000e230:	1049      	asrs	r1, r1, #1
1000e232:	d002      	beq.n	1000e23a <register_tm_clones+0x16>
1000e234:	4b03      	ldr	r3, [pc, #12]	@ (1000e244 <register_tm_clones+0x20>)
1000e236:	b103      	cbz	r3, 1000e23a <register_tm_clones+0x16>
1000e238:	4718      	bx	r3
1000e23a:	4770      	bx	lr
1000e23c:	200006c4 	.word	0x200006c4
1000e240:	200006c4 	.word	0x200006c4
1000e244:	00000000 	.word	0x00000000

1000e248 <__do_global_dtors_aux>:
1000e248:	b510      	push	{r4, lr}
1000e24a:	4c06      	ldr	r4, [pc, #24]	@ (1000e264 <__do_global_dtors_aux+0x1c>)
1000e24c:	7823      	ldrb	r3, [r4, #0]
1000e24e:	b943      	cbnz	r3, 1000e262 <__do_global_dtors_aux+0x1a>
1000e250:	f7ff ffda 	bl	1000e208 <deregister_tm_clones>
1000e254:	4b04      	ldr	r3, [pc, #16]	@ (1000e268 <__do_global_dtors_aux+0x20>)
1000e256:	b113      	cbz	r3, 1000e25e <__do_global_dtors_aux+0x16>
1000e258:	4804      	ldr	r0, [pc, #16]	@ (1000e26c <__do_global_dtors_aux+0x24>)
1000e25a:	f3af 8000 	nop.w
1000e25e:	2301      	movs	r3, #1
1000e260:	7023      	strb	r3, [r4, #0]
1000e262:	bd10      	pop	{r4, pc}
1000e264:	200006c8 	.word	0x200006c8
1000e268:	00000000 	.word	0x00000000
1000e26c:	10017478 	.word	0x10017478

1000e270 <frame_dummy>:
1000e270:	b508      	push	{r3, lr}
1000e272:	4b05      	ldr	r3, [pc, #20]	@ (1000e288 <frame_dummy+0x18>)
1000e274:	b11b      	cbz	r3, 1000e27e <frame_dummy+0xe>
1000e276:	4905      	ldr	r1, [pc, #20]	@ (1000e28c <frame_dummy+0x1c>)
1000e278:	4805      	ldr	r0, [pc, #20]	@ (1000e290 <frame_dummy+0x20>)
1000e27a:	f3af 8000 	nop.w
1000e27e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
1000e282:	f7ff bfcf 	b.w	1000e224 <register_tm_clones>
1000e286:	bf00      	nop
1000e288:	00000000 	.word	0x00000000
1000e28c:	200006cc 	.word	0x200006cc
1000e290:	10017478 	.word	0x10017478

1000e294 <WriteData>:
#include "i2c_controller.h"

int WriteData(uint8_t recipient, uint8_t *data, size_t length)
{
        // actual data size should not exceed 81 because we stick the recipient on the front
        if (length >= 81)
1000e294:	2a50      	cmp	r2, #80	@ 0x50
1000e296:	d812      	bhi.n	1000e2be <WriteData+0x2a>
{
1000e298:	b510      	push	{r4, lr}
1000e29a:	b088      	sub	sp, #32
1000e29c:	4604      	mov	r4, r0
        // not sure if this is necessary tbh...
        memcpy(message, data, length);

        //NOTE: We should hopefully be able to not use a null bytes since every message will be exactly 81 bytes in length

        mxc_i2c_req_t request = {
1000e29e:	480d      	ldr	r0, [pc, #52]	@ (1000e2d4 <WriteData+0x40>)
1000e2a0:	9000      	str	r0, [sp, #0]
1000e2a2:	2300      	movs	r3, #0
                .rx_len = 0,
                .rx_buf = 0,
                .restart = 0,
                .callback = NULL
        };
        int message_success = MXC_I2C_MasterTransaction(&request);
1000e2a4:	4668      	mov	r0, sp
        mxc_i2c_req_t request = {
1000e2a6:	e9cd 4101 	strd	r4, r1, [sp, #4]
1000e2aa:	e9cd 2303 	strd	r2, r3, [sp, #12]
1000e2ae:	e9cd 3305 	strd	r3, r3, [sp, #20]
1000e2b2:	9307      	str	r3, [sp, #28]
        int message_success = MXC_I2C_MasterTransaction(&request);
1000e2b4:	f000 ff48 	bl	1000f148 <MXC_I2C_MasterTransaction>
        // Maybe a error would indicate a malformed packet???, hopefully that never happens..
        if (message_success != E_SUCCESS)
1000e2b8:	b920      	cbnz	r0, 1000e2c4 <WriteData+0x30>
                printf("[Error] %d\n", message_success);
                return -2;
        }

        return 0;
}
1000e2ba:	b008      	add	sp, #32
1000e2bc:	bd10      	pop	{r4, pc}
                return -1;
1000e2be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e2c2:	4770      	bx	lr
                printf("[Error] %d\n", message_success);
1000e2c4:	4601      	mov	r1, r0
1000e2c6:	4804      	ldr	r0, [pc, #16]	@ (1000e2d8 <WriteData+0x44>)
1000e2c8:	f002 f8cc 	bl	10010464 <printf>
                return -2;
1000e2cc:	f06f 0001 	mvn.w	r0, #1
1000e2d0:	e7f3      	b.n	1000e2ba <WriteData+0x26>
1000e2d2:	bf00      	nop
1000e2d4:	4001e000 	.word	0x4001e000
1000e2d8:	10016f7c 	.word	0x10016f7c

1000e2dc <main>:
//        MXC_I2C_Read(I2C_INT, slave_addr, buffer, length, 0);
//}


int main(void)
{      
1000e2dc:	b510      	push	{r4, lr}
1000e2de:	b082      	sub	sp, #8
        LED_Init();
1000e2e0:	f000 f8ea 	bl	1000e4b8 <LED_Init>

        // LED 3 is blue
        // LED 1 is ?
        // LED 2 is ?
        LED_On(LED3);
1000e2e4:	2002      	movs	r0, #2
1000e2e6:	f000 f907 	bl	1000e4f8 <LED_On>

        // Why do we do this, What does this do
        MXC_ICC_Enable(MXC_ICC0); //it does a thing possibly
1000e2ea:	481f      	ldr	r0, [pc, #124]	@ (1000e368 <main+0x8c>)
1000e2ec:	f001 f9e2 	bl	1000f6b4 <MXC_ICC_Enable>
        // Why are we doing this?!??!
        MXC_SYS_Clock_Select(MXC_SYS_CLOCK_IPO);
1000e2f0:	2004      	movs	r0, #4
1000e2f2:	f000 fbed 	bl	1000ead0 <MXC_SYS_Clock_Select>

        //Initialize I2C
        // interface address, master mode?, slave mode?
        int i2c_success = MXC_I2C_Init(I2C_INTERFACE, 1, 0);
1000e2f6:	481d      	ldr	r0, [pc, #116]	@ (1000e36c <main+0x90>)
1000e2f8:	2200      	movs	r2, #0
1000e2fa:	2101      	movs	r1, #1
1000e2fc:	f000 fec4 	bl	1000f088 <MXC_I2C_Init>
        if (i2c_success != E_SUCCESS )
1000e300:	bb60      	cbnz	r0, 1000e35c <main+0x80>
        {
                printf("I2C failed to initialize.\n[Error] %d\n", i2c_success);
        }

        MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_SPEED);
1000e302:	f242 7110 	movw	r1, #10000	@ 0x2710
1000e306:	4819      	ldr	r0, [pc, #100]	@ (1000e36c <main+0x90>)

        while (1)
        {
                LED_On(LED1);
                LED_Off(LED2);
                MXC_Delay(MXC_DELAY_MSEC(500));
1000e308:	4c19      	ldr	r4, [pc, #100]	@ (1000e370 <main+0x94>)
        MXC_I2C_SetFrequency(I2C_INTERFACE, I2C_SPEED);
1000e30a:	f000 ff07 	bl	1000f11c <MXC_I2C_SetFrequency>
        MXC_I2C_SetTimeout(I2C_INTERFACE, 100);
1000e30e:	4817      	ldr	r0, [pc, #92]	@ (1000e36c <main+0x90>)
1000e310:	2164      	movs	r1, #100	@ 0x64
1000e312:	f000 ff15 	bl	1000f140 <MXC_I2C_SetTimeout>
        uint8_t dataToSend = 0x55;
1000e316:	2355      	movs	r3, #85	@ 0x55
        int write_success = WriteData(I2C_ADDR, &dataToSend, 1);
1000e318:	2201      	movs	r2, #1
1000e31a:	f10d 0107 	add.w	r1, sp, #7
1000e31e:	2050      	movs	r0, #80	@ 0x50
        uint8_t dataToSend = 0x55;
1000e320:	f88d 3007 	strb.w	r3, [sp, #7]
        int write_success = WriteData(I2C_ADDR, &dataToSend, 1);
1000e324:	f7ff ffb6 	bl	1000e294 <WriteData>
1000e328:	4601      	mov	r1, r0
        printf("write success: %d\n", write_success);
1000e32a:	4812      	ldr	r0, [pc, #72]	@ (1000e374 <main+0x98>)
1000e32c:	f002 f89a 	bl	10010464 <printf>
        LED_Off(LED3);
1000e330:	2002      	movs	r0, #2
1000e332:	f000 f8ed 	bl	1000e510 <LED_Off>
                LED_On(LED1);
1000e336:	2000      	movs	r0, #0
1000e338:	f000 f8de 	bl	1000e4f8 <LED_On>
                LED_Off(LED2);
1000e33c:	2001      	movs	r0, #1
1000e33e:	f000 f8e7 	bl	1000e510 <LED_Off>
                MXC_Delay(MXC_DELAY_MSEC(500));
1000e342:	4620      	mov	r0, r4
1000e344:	f000 face 	bl	1000e8e4 <MXC_Delay>
                LED_Off(LED1);
1000e348:	2000      	movs	r0, #0
1000e34a:	f000 f8e1 	bl	1000e510 <LED_Off>
                LED_On(LED2);
1000e34e:	2001      	movs	r0, #1
1000e350:	f000 f8d2 	bl	1000e4f8 <LED_On>
                MXC_Delay(MXC_DELAY_MSEC(500));
1000e354:	4620      	mov	r0, r4
1000e356:	f000 fac5 	bl	1000e8e4 <MXC_Delay>
        while (1)
1000e35a:	e7ec      	b.n	1000e336 <main+0x5a>
1000e35c:	4601      	mov	r1, r0
                printf("I2C failed to initialize.\n[Error] %d\n", i2c_success);
1000e35e:	4806      	ldr	r0, [pc, #24]	@ (1000e378 <main+0x9c>)
1000e360:	f002 f880 	bl	10010464 <printf>
1000e364:	e7cd      	b.n	1000e302 <main+0x26>
1000e366:	bf00      	nop
1000e368:	4002a000 	.word	0x4002a000
1000e36c:	4001e000 	.word	0x4001e000
1000e370:	0007a120 	.word	0x0007a120
1000e374:	10016fb0 	.word	0x10016fb0
1000e378:	10016f88 	.word	0x10016f88

1000e37c <GPIO0_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 0 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO0_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO0));
1000e37c:	2000      	movs	r0, #0
1000e37e:	f000 bde9 	b.w	1000ef54 <MXC_GPIO_Handler>
1000e382:	bf00      	nop

1000e384 <GPIO1_IRQHandler>:
 * NOTE: This weak definition is included to support Push Button 1 interrupts in
 *       case the user does not define this interrupt handler in their application.
 **/
__weak void GPIO1_IRQHandler(void)
{
    MXC_GPIO_Handler(MXC_GPIO_GET_IDX(MXC_GPIO1));
1000e384:	2001      	movs	r0, #1
1000e386:	f000 bde5 	b.w	1000ef54 <MXC_GPIO_Handler>
1000e38a:	bf00      	nop

1000e38c <Board_Init>:
}

/******************************************************************************/
int Board_Init(void)
{
1000e38c:	b510      	push	{r4, lr}
#ifndef __riscv
    int err;

    // Enable GPIO
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000e38e:	2000      	movs	r0, #0
1000e390:	f000 fb02 	bl	1000e998 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000e394:	2001      	movs	r0, #1
1000e396:	f000 faff 	bl	1000e998 <MXC_SYS_ClockEnable>
    MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000e39a:	2040      	movs	r0, #64	@ 0x40
1000e39c:	f000 fafc 	bl	1000e998 <MXC_SYS_ClockEnable>
/******************************************************************************/
int Console_Init(void)
{
    int err;

    if ((err = MXC_UART_Init(ConsoleUart, CONSOLE_BAUD, MXC_UART_IBRO_CLK)) != E_NO_ERROR) {
1000e3a0:	4b0d      	ldr	r3, [pc, #52]	@ (1000e3d8 <Board_Init+0x4c>)
1000e3a2:	2202      	movs	r2, #2
1000e3a4:	6818      	ldr	r0, [r3, #0]
1000e3a6:	f44f 31e1 	mov.w	r1, #115200	@ 0x1c200
1000e3aa:	f001 f9d3 	bl	1000f754 <MXC_UART_Init>
    if ((err = Console_Init()) < E_NO_ERROR) {
1000e3ae:	1e04      	subs	r4, r0, #0
1000e3b0:	db03      	blt.n	1000e3ba <Board_Init+0x2e>
    if ((err = PB_Init()) != E_NO_ERROR) {
1000e3b2:	f000 f8b9 	bl	1000e528 <PB_Init>
1000e3b6:	4604      	mov	r4, r0
1000e3b8:	b108      	cbz	r0, 1000e3be <Board_Init+0x32>
}
1000e3ba:	4620      	mov	r0, r4
1000e3bc:	bd10      	pop	{r4, pc}
    if ((err = LED_Init()) != E_NO_ERROR) {
1000e3be:	f000 f87b 	bl	1000e4b8 <LED_Init>
1000e3c2:	4604      	mov	r4, r0
1000e3c4:	2800      	cmp	r0, #0
1000e3c6:	d1f8      	bne.n	1000e3ba <Board_Init+0x2e>
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000e3c8:	4b04      	ldr	r3, [pc, #16]	@ (1000e3dc <Board_Init+0x50>)
    MXC_Delay(200000);
1000e3ca:	4805      	ldr	r0, [pc, #20]	@ (1000e3e0 <Board_Init+0x54>)
    MXC_SIMO->vrego_c = 0x43; // Set CNN voltage
1000e3cc:	2243      	movs	r2, #67	@ 0x43
1000e3ce:	60da      	str	r2, [r3, #12]
    MXC_Delay(200000);
1000e3d0:	f000 fa88 	bl	1000e8e4 <MXC_Delay>
}
1000e3d4:	4620      	mov	r0, r4
1000e3d6:	bd10      	pop	{r4, pc}
1000e3d8:	20000000 	.word	0x20000000
1000e3dc:	40004400 	.word	0x40004400
1000e3e0:	00030d40 	.word	0x00030d40

1000e3e4 <NMI_Handler>:
}

/******************************************************************************/
void NMI_Handler(void)
{
    __NOP();
1000e3e4:	bf00      	nop
}
1000e3e6:	4770      	bx	lr

1000e3e8 <_close>:
    return -1;
}
int _close(int file)
{
    return -1;
}
1000e3e8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e3ec:	4770      	bx	lr
1000e3ee:	bf00      	nop

1000e3f0 <_isatty>:
int _isatty(int file)
1000e3f0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e3f4:	4770      	bx	lr
1000e3f6:	bf00      	nop

1000e3f8 <_lseek>:
    return -1;
}
int _lseek(int file, off_t offset, int whence)
{
    return -1;
}
1000e3f8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e3fc:	4770      	bx	lr
1000e3fe:	bf00      	nop

1000e400 <_fstat>:
int _fstat(int file, struct stat *st)
{
    return -1;
}
1000e400:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000e404:	4770      	bx	lr
1000e406:	bf00      	nop

1000e408 <_read>:
   fgetc for stdio */
#if defined(__ICCARM__) || defined(__GNUC__)

#if defined(__GNUC__) // GNUC _read function prototype
int _read(int file, char *ptr, int len)
{
1000e408:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    size_t n;
#endif /*  */

    int num = 0; // count of number received.

    switch (file) {
1000e40a:	b9e0      	cbnz	r0, 1000e446 <_read+0x3e>
    case STDIN_FILENO:
        for (n = 0; n < len; n++) {
1000e40c:	2a00      	cmp	r2, #0
1000e40e:	dd19      	ble.n	1000e444 <_read+0x3c>
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000e410:	4d10      	ldr	r5, [pc, #64]	@ (1000e454 <_read+0x4c>)
1000e412:	460e      	mov	r6, r1
1000e414:	188f      	adds	r7, r1, r2
        for (n = 0; n < len; n++) {
1000e416:	460c      	mov	r4, r1
1000e418:	e002      	b.n	1000e420 <_read+0x18>
1000e41a:	42bb      	cmp	r3, r7
1000e41c:	d00f      	beq.n	1000e43e <_read+0x36>
                num++;
                ptr++;

                break;
            } else {
                ptr++;
1000e41e:	461c      	mov	r4, r3
            *ptr = MXC_UART_ReadCharacter(MXC_UARTn); // read a byte.
1000e420:	4628      	mov	r0, r5
1000e422:	f001 fa8f 	bl	1000f944 <MXC_UART_ReadCharacter>
1000e426:	b2c1      	uxtb	r1, r0
1000e428:	7021      	strb	r1, [r4, #0]
            MXC_UART_WriteCharacter(MXC_UARTn, *ptr); // echo the byte.
1000e42a:	4628      	mov	r0, r5
1000e42c:	f001 fa8c 	bl	1000f948 <MXC_UART_WriteCharacter>
            if (*ptr == '\r') { // check for end of line.
1000e430:	7822      	ldrb	r2, [r4, #0]
1000e432:	2a0d      	cmp	r2, #13
                ptr++;
1000e434:	f104 0301 	add.w	r3, r4, #1
            if (*ptr == '\r') { // check for end of line.
1000e438:	d1ef      	bne.n	1000e41a <_read+0x12>
                *ptr = '\n';
1000e43a:	230a      	movs	r3, #10
1000e43c:	7023      	strb	r3, [r4, #0]
                num++;
1000e43e:	f1c6 0601 	rsb	r6, r6, #1
1000e442:	19a0      	adds	r0, r4, r6
        errno = EBADF;
        return -1;
    }

    return num;
}
1000e444:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        errno = EBADF;
1000e446:	f001 fc9f 	bl	1000fd88 <__errno>
1000e44a:	2309      	movs	r3, #9
1000e44c:	6003      	str	r3, [r0, #0]
        return -1;
1000e44e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e452:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e454:	40042000 	.word	0x40042000

1000e458 <_write>:

/* newlib/libc printf() will eventually call write() to get the data to the stdout */
#if defined(__GNUC__)
// GNUC _write function prototype
int _write(int file, char *ptr, int len)
{
1000e458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
int __write(int file, const unsigned char *ptr, size_t len)
{
    size_t n;
#endif /* __GNUC__ */

    switch (file) {
1000e45a:	1e43      	subs	r3, r0, #1
1000e45c:	2b01      	cmp	r3, #1
1000e45e:	d821      	bhi.n	1000e4a4 <_write+0x4c>
    case STDOUT_FILENO:
    case STDERR_FILENO:

        // This function should be as fast as possible
        // So we'll forgo the UART driver for now
        for (n = 0; n < len; n++) {
1000e460:	2a00      	cmp	r2, #0
1000e462:	4617      	mov	r7, r2
1000e464:	dd12      	ble.n	1000e48c <_write+0x34>
1000e466:	1e53      	subs	r3, r2, #1
            if (*ptr == '\n') {
                // Wait until there's room in the FIFO
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e468:	4e12      	ldr	r6, [pc, #72]	@ (1000e4b4 <_write+0x5c>)
1000e46a:	1e4c      	subs	r4, r1, #1
1000e46c:	18cd      	adds	r5, r1, r3
            if (*ptr == '\n') {
1000e46e:	f814 3f01 	ldrb.w	r3, [r4, #1]!
1000e472:	2b0a      	cmp	r3, #10
1000e474:	d00c      	beq.n	1000e490 <_write+0x38>

                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
            }

            // Wait until there's room in the FIFO
            while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e476:	480f      	ldr	r0, [pc, #60]	@ (1000e4b4 <_write+0x5c>)
1000e478:	f001 fa6a 	bl	1000f950 <MXC_UART_GetTXFIFOAvailable>
1000e47c:	2800      	cmp	r0, #0
1000e47e:	d0fa      	beq.n	1000e476 <_write+0x1e>

            MXC_UART_WriteCharacter(MXC_UARTn, *ptr++);
1000e480:	7821      	ldrb	r1, [r4, #0]
1000e482:	4630      	mov	r0, r6
1000e484:	f001 fa60 	bl	1000f948 <MXC_UART_WriteCharacter>
        for (n = 0; n < len; n++) {
1000e488:	42ac      	cmp	r4, r5
1000e48a:	d1f0      	bne.n	1000e46e <_write+0x16>

        break;

    default:
        errno = EBADF;
        return -1;
1000e48c:	4638      	mov	r0, r7
    }

    return len;
}
1000e48e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
                while (MXC_UART_GetTXFIFOAvailable(MXC_UARTn) == 0) {}
1000e490:	4808      	ldr	r0, [pc, #32]	@ (1000e4b4 <_write+0x5c>)
1000e492:	f001 fa5d 	bl	1000f950 <MXC_UART_GetTXFIFOAvailable>
1000e496:	2800      	cmp	r0, #0
1000e498:	d0fa      	beq.n	1000e490 <_write+0x38>
                MXC_UART_WriteCharacter(MXC_UARTn, '\r');
1000e49a:	210d      	movs	r1, #13
1000e49c:	4630      	mov	r0, r6
1000e49e:	f001 fa53 	bl	1000f948 <MXC_UART_WriteCharacter>
1000e4a2:	e7e8      	b.n	1000e476 <_write+0x1e>
        errno = EBADF;
1000e4a4:	f001 fc70 	bl	1000fd88 <__errno>
1000e4a8:	2309      	movs	r3, #9
1000e4aa:	6003      	str	r3, [r0, #0]
        return -1;
1000e4ac:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e4b0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e4b2:	bf00      	nop
1000e4b4:	40042000 	.word	0x40042000

1000e4b8 <LED_Init>:
#include "led.h"
#include "mxc_device.h"

/******************************************************************************/
int LED_Init(void)
{
1000e4b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    /* setup GPIO for the LED */
    for (i = 0; i < num_leds; i++) {
1000e4ba:	4b0d      	ldr	r3, [pc, #52]	@ (1000e4f0 <LED_Init+0x38>)
1000e4bc:	681f      	ldr	r7, [r3, #0]
1000e4be:	b1a7      	cbz	r7, 1000e4ea <LED_Init+0x32>
1000e4c0:	2500      	movs	r5, #0
1000e4c2:	4c0c      	ldr	r4, [pc, #48]	@ (1000e4f4 <LED_Init+0x3c>)
    int retval = E_NO_ERROR;
1000e4c4:	462e      	mov	r6, r5
//******************************************************************************
void LED_Off(unsigned int idx)
{
    MXC_ASSERT(idx < num_leds);
#if (LED_ON == 0)
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e4c6:	e9d4 0100 	ldrd	r0, r1, [r4]
1000e4ca:	f000 fd15 	bl	1000eef8 <MXC_GPIO_OutSet>
        if (MXC_GPIO_Config(&led_pin[i]) != E_NO_ERROR) {
1000e4ce:	4620      	mov	r0, r4
1000e4d0:	f000 fc0c 	bl	1000ecec <MXC_GPIO_Config>
    for (i = 0; i < num_leds; i++) {
1000e4d4:	3501      	adds	r5, #1
            retval = E_UNKNOWN;
1000e4d6:	2800      	cmp	r0, #0
1000e4d8:	bf18      	it	ne
1000e4da:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_leds; i++) {
1000e4de:	42bd      	cmp	r5, r7
1000e4e0:	f104 040c 	add.w	r4, r4, #12
1000e4e4:	d1ef      	bne.n	1000e4c6 <LED_Init+0xe>
}
1000e4e6:	4630      	mov	r0, r6
1000e4e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000e4ea:	463e      	mov	r6, r7
}
1000e4ec:	4630      	mov	r0, r6
1000e4ee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e4f0:	10016fc4 	.word	0x10016fc4
1000e4f4:	10016fc8 	.word	0x10016fc8

1000e4f8 <LED_On>:
    MXC_GPIO_OutClr(led_pin[idx].port, led_pin[idx].mask);
1000e4f8:	4b04      	ldr	r3, [pc, #16]	@ (1000e50c <LED_On+0x14>)
1000e4fa:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1000e4fe:	eb03 0280 	add.w	r2, r3, r0, lsl #2
1000e502:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
1000e506:	6851      	ldr	r1, [r2, #4]
1000e508:	f000 bd0c 	b.w	1000ef24 <MXC_GPIO_OutClr>
1000e50c:	10016fc8 	.word	0x10016fc8

1000e510 <LED_Off>:
    MXC_GPIO_OutSet(led_pin[idx].port, led_pin[idx].mask);
1000e510:	4b04      	ldr	r3, [pc, #16]	@ (1000e524 <LED_Off+0x14>)
1000e512:	eb00 0040 	add.w	r0, r0, r0, lsl #1
1000e516:	eb03 0280 	add.w	r2, r3, r0, lsl #2
1000e51a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
1000e51e:	6851      	ldr	r1, [r2, #4]
1000e520:	f000 bcea 	b.w	1000eef8 <MXC_GPIO_OutSet>
1000e524:	10016fc8 	.word	0x10016fc8

1000e528 <PB_Init>:
#include "mxc_assert.h"
#include "pb.h"

/******************************************************************************/
int PB_Init(void)
{
1000e528:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int retval = E_NO_ERROR;
    unsigned int i;

    // Enable pushbutton inputs
    for (i = 0; i < num_pbs; i++) {
1000e52a:	4b0b      	ldr	r3, [pc, #44]	@ (1000e558 <PB_Init+0x30>)
1000e52c:	681f      	ldr	r7, [r3, #0]
1000e52e:	b187      	cbz	r7, 1000e552 <PB_Init+0x2a>
1000e530:	2400      	movs	r4, #0
1000e532:	4d0a      	ldr	r5, [pc, #40]	@ (1000e55c <PB_Init+0x34>)
    int retval = E_NO_ERROR;
1000e534:	4626      	mov	r6, r4
        if (MXC_GPIO_Config(&pb_pin[i]) != E_NO_ERROR) {
1000e536:	4628      	mov	r0, r5
1000e538:	f000 fbd8 	bl	1000ecec <MXC_GPIO_Config>
    for (i = 0; i < num_pbs; i++) {
1000e53c:	3401      	adds	r4, #1
            retval = E_UNKNOWN;
1000e53e:	2800      	cmp	r0, #0
1000e540:	bf18      	it	ne
1000e542:	f06f 0607 	mvnne.w	r6, #7
    for (i = 0; i < num_pbs; i++) {
1000e546:	42bc      	cmp	r4, r7
1000e548:	f105 050c 	add.w	r5, r5, #12
1000e54c:	d1f3      	bne.n	1000e536 <PB_Init+0xe>
        }
    }

    return retval;
}
1000e54e:	4630      	mov	r0, r6
1000e550:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    int retval = E_NO_ERROR;
1000e552:	463e      	mov	r6, r7
}
1000e554:	4630      	mov	r0, r6
1000e556:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e558:	10016fec 	.word	0x10016fec
1000e55c:	10016ff0 	.word	0x10016ff0

1000e560 <Reset_Handler>:
1000e560:	4847      	ldr	r0, [pc, #284]	@ (1000e680 <LPCMP_IRQHandler+0x2>)
1000e562:	4685      	mov	sp, r0
1000e564:	4847      	ldr	r0, [pc, #284]	@ (1000e684 <LPCMP_IRQHandler+0x6>)
1000e566:	4780      	blx	r0
1000e568:	b980      	cbnz	r0, 1000e58c <.SKIPRAMINIT>
1000e56a:	4947      	ldr	r1, [pc, #284]	@ (1000e688 <LPCMP_IRQHandler+0xa>)
1000e56c:	4a47      	ldr	r2, [pc, #284]	@ (1000e68c <LPCMP_IRQHandler+0xe>)
1000e56e:	4b48      	ldr	r3, [pc, #288]	@ (1000e690 <LPCMP_IRQHandler+0x12>)
1000e570:	1a9b      	subs	r3, r3, r2
1000e572:	dd03      	ble.n	1000e57c <Reset_Handler+0x1c>
1000e574:	3b04      	subs	r3, #4
1000e576:	58c8      	ldr	r0, [r1, r3]
1000e578:	50d0      	str	r0, [r2, r3]
1000e57a:	dcfb      	bgt.n	1000e574 <Reset_Handler+0x14>
1000e57c:	4945      	ldr	r1, [pc, #276]	@ (1000e694 <LPCMP_IRQHandler+0x16>)
1000e57e:	4a46      	ldr	r2, [pc, #280]	@ (1000e698 <LPCMP_IRQHandler+0x1a>)
1000e580:	2000      	movs	r0, #0
1000e582:	4291      	cmp	r1, r2
1000e584:	bfbc      	itt	lt
1000e586:	f841 0b04 	strlt.w	r0, [r1], #4
1000e58a:	e7fa      	blt.n	1000e582 <Reset_Handler+0x22>

1000e58c <.SKIPRAMINIT>:
1000e58c:	4843      	ldr	r0, [pc, #268]	@ (1000e69c <LPCMP_IRQHandler+0x1e>)
1000e58e:	4780      	blx	r0
1000e590:	4843      	ldr	r0, [pc, #268]	@ (1000e6a0 <LPCMP_IRQHandler+0x22>)
1000e592:	4780      	blx	r0
1000e594:	4843      	ldr	r0, [pc, #268]	@ (1000e6a4 <LPCMP_IRQHandler+0x26>)
1000e596:	4780      	blx	r0

1000e598 <.SPIN>:
1000e598:	f7ff fffe 	bl	1000e598 <.SPIN>
1000e59c:	e7fe      	b.n	1000e59c <.SPIN+0x4>

1000e59e <HardFault_Handler>:
1000e59e:	e7fe      	b.n	1000e59e <HardFault_Handler>

1000e5a0 <MemManage_Handler>:
1000e5a0:	e7fe      	b.n	1000e5a0 <MemManage_Handler>

1000e5a2 <BusFault_Handler>:
1000e5a2:	e7fe      	b.n	1000e5a2 <BusFault_Handler>

1000e5a4 <UsageFault_Handler>:
1000e5a4:	e7fe      	b.n	1000e5a4 <UsageFault_Handler>

1000e5a6 <SVC_Handler>:
1000e5a6:	e7fe      	b.n	1000e5a6 <SVC_Handler>

1000e5a8 <DebugMon_Handler>:
1000e5a8:	e7fe      	b.n	1000e5a8 <DebugMon_Handler>

1000e5aa <PendSV_Handler>:
1000e5aa:	e7fe      	b.n	1000e5aa <PendSV_Handler>

1000e5ac <SysTick_Handler>:
1000e5ac:	e7fe      	b.n	1000e5ac <SysTick_Handler>

1000e5ae <Default_Handler>:
1000e5ae:	e7fe      	b.n	1000e5ae <Default_Handler>

1000e5b0 <PF_IRQHandler>:
1000e5b0:	e7fe      	b.n	1000e5b0 <PF_IRQHandler>

1000e5b2 <WDT0_IRQHandler>:
1000e5b2:	e7fe      	b.n	1000e5b2 <WDT0_IRQHandler>

1000e5b4 <RSV02_IRQHandler>:
1000e5b4:	e7fe      	b.n	1000e5b4 <RSV02_IRQHandler>

1000e5b6 <RTC_IRQHandler>:
1000e5b6:	e7fe      	b.n	1000e5b6 <RTC_IRQHandler>

1000e5b8 <TRNG_IRQHandler>:
1000e5b8:	e7fe      	b.n	1000e5b8 <TRNG_IRQHandler>

1000e5ba <TMR0_IRQHandler>:
1000e5ba:	e7fe      	b.n	1000e5ba <TMR0_IRQHandler>

1000e5bc <TMR1_IRQHandler>:
1000e5bc:	e7fe      	b.n	1000e5bc <TMR1_IRQHandler>

1000e5be <TMR2_IRQHandler>:
1000e5be:	e7fe      	b.n	1000e5be <TMR2_IRQHandler>

1000e5c0 <TMR3_IRQHandler>:
1000e5c0:	e7fe      	b.n	1000e5c0 <TMR3_IRQHandler>

1000e5c2 <TMR4_IRQHandler>:
1000e5c2:	e7fe      	b.n	1000e5c2 <TMR4_IRQHandler>

1000e5c4 <TMR5_IRQHandler>:
1000e5c4:	e7fe      	b.n	1000e5c4 <TMR5_IRQHandler>

1000e5c6 <RSV11_IRQHandler>:
1000e5c6:	e7fe      	b.n	1000e5c6 <RSV11_IRQHandler>

1000e5c8 <RSV12_IRQHandler>:
1000e5c8:	e7fe      	b.n	1000e5c8 <RSV12_IRQHandler>

1000e5ca <I2C0_IRQHandler>:
1000e5ca:	e7fe      	b.n	1000e5ca <I2C0_IRQHandler>

1000e5cc <UART0_IRQHandler>:
1000e5cc:	e7fe      	b.n	1000e5cc <UART0_IRQHandler>

1000e5ce <UART1_IRQHandler>:
1000e5ce:	e7fe      	b.n	1000e5ce <UART1_IRQHandler>

1000e5d0 <SPI1_IRQHandler>:
1000e5d0:	e7fe      	b.n	1000e5d0 <SPI1_IRQHandler>

1000e5d2 <RSV17_IRQHandler>:
1000e5d2:	e7fe      	b.n	1000e5d2 <RSV17_IRQHandler>

1000e5d4 <RSV18_IRQHandler>:
1000e5d4:	e7fe      	b.n	1000e5d4 <RSV18_IRQHandler>

1000e5d6 <RSV19_IRQHandler>:
1000e5d6:	e7fe      	b.n	1000e5d6 <RSV19_IRQHandler>

1000e5d8 <ADC_IRQHandler>:
1000e5d8:	e7fe      	b.n	1000e5d8 <ADC_IRQHandler>

1000e5da <RSV21_IRQHandler>:
1000e5da:	e7fe      	b.n	1000e5da <RSV21_IRQHandler>

1000e5dc <RSV22_IRQHandler>:
1000e5dc:	e7fe      	b.n	1000e5dc <RSV22_IRQHandler>

1000e5de <FLC0_IRQHandler>:
1000e5de:	e7fe      	b.n	1000e5de <FLC0_IRQHandler>
1000e5e0:	e7fe      	b.n	1000e5e0 <FLC0_IRQHandler+0x2>
1000e5e2:	e7fe      	b.n	1000e5e2 <FLC0_IRQHandler+0x4>

1000e5e4 <GPIO2_IRQHandler>:
1000e5e4:	e7fe      	b.n	1000e5e4 <GPIO2_IRQHandler>

1000e5e6 <RSV27_IRQHandler>:
1000e5e6:	e7fe      	b.n	1000e5e6 <RSV27_IRQHandler>

1000e5e8 <DMA0_IRQHandler>:
1000e5e8:	e7fe      	b.n	1000e5e8 <DMA0_IRQHandler>

1000e5ea <DMA1_IRQHandler>:
1000e5ea:	e7fe      	b.n	1000e5ea <DMA1_IRQHandler>

1000e5ec <DMA2_IRQHandler>:
1000e5ec:	e7fe      	b.n	1000e5ec <DMA2_IRQHandler>

1000e5ee <DMA3_IRQHandler>:
1000e5ee:	e7fe      	b.n	1000e5ee <DMA3_IRQHandler>

1000e5f0 <RSV32_IRQHandler>:
1000e5f0:	e7fe      	b.n	1000e5f0 <RSV32_IRQHandler>

1000e5f2 <RSV33_IRQHandler>:
1000e5f2:	e7fe      	b.n	1000e5f2 <RSV33_IRQHandler>

1000e5f4 <UART2_IRQHandler>:
1000e5f4:	e7fe      	b.n	1000e5f4 <UART2_IRQHandler>

1000e5f6 <RSV35_IRQHandler>:
1000e5f6:	e7fe      	b.n	1000e5f6 <RSV35_IRQHandler>

1000e5f8 <I2C1_IRQHandler>:
1000e5f8:	e7fe      	b.n	1000e5f8 <I2C1_IRQHandler>

1000e5fa <RSV37_IRQHandler>:
1000e5fa:	e7fe      	b.n	1000e5fa <RSV37_IRQHandler>

1000e5fc <RSV38_IRQHandler>:
1000e5fc:	e7fe      	b.n	1000e5fc <RSV38_IRQHandler>

1000e5fe <RSV39_IRQHandler>:
1000e5fe:	e7fe      	b.n	1000e5fe <RSV39_IRQHandler>

1000e600 <RSV40_IRQHandler>:
1000e600:	e7fe      	b.n	1000e600 <RSV40_IRQHandler>

1000e602 <RSV41_IRQHandler>:
1000e602:	e7fe      	b.n	1000e602 <RSV41_IRQHandler>

1000e604 <RSV42_IRQHandler>:
1000e604:	e7fe      	b.n	1000e604 <RSV42_IRQHandler>

1000e606 <RSV43_IRQHandler>:
1000e606:	e7fe      	b.n	1000e606 <RSV43_IRQHandler>

1000e608 <RSV44_IRQHandler>:
1000e608:	e7fe      	b.n	1000e608 <RSV44_IRQHandler>

1000e60a <RSV45_IRQHandler>:
1000e60a:	e7fe      	b.n	1000e60a <RSV45_IRQHandler>

1000e60c <RSV46_IRQHandler>:
1000e60c:	e7fe      	b.n	1000e60c <RSV46_IRQHandler>

1000e60e <RSV47_IRQHandler>:
1000e60e:	e7fe      	b.n	1000e60e <RSV47_IRQHandler>

1000e610 <RSV48_IRQHandler>:
1000e610:	e7fe      	b.n	1000e610 <RSV48_IRQHandler>

1000e612 <RSV49_IRQHandler>:
1000e612:	e7fe      	b.n	1000e612 <RSV49_IRQHandler>

1000e614 <RSV50_IRQHandler>:
1000e614:	e7fe      	b.n	1000e614 <RSV50_IRQHandler>

1000e616 <RSV51_IRQHandler>:
1000e616:	e7fe      	b.n	1000e616 <RSV51_IRQHandler>

1000e618 <RSV52_IRQHandler>:
1000e618:	e7fe      	b.n	1000e618 <RSV52_IRQHandler>

1000e61a <WUT_IRQHandler>:
1000e61a:	e7fe      	b.n	1000e61a <WUT_IRQHandler>

1000e61c <GPIOWAKE_IRQHandler>:
1000e61c:	e7fe      	b.n	1000e61c <GPIOWAKE_IRQHandler>

1000e61e <RSV55_IRQHandler>:
1000e61e:	e7fe      	b.n	1000e61e <RSV55_IRQHandler>

1000e620 <SPI0_IRQHandler>:
1000e620:	e7fe      	b.n	1000e620 <SPI0_IRQHandler>

1000e622 <WDT1_IRQHandler>:
1000e622:	e7fe      	b.n	1000e622 <WDT1_IRQHandler>

1000e624 <RSV58_IRQHandler>:
1000e624:	e7fe      	b.n	1000e624 <RSV58_IRQHandler>

1000e626 <PT_IRQHandler>:
1000e626:	e7fe      	b.n	1000e626 <PT_IRQHandler>

1000e628 <RSV60_IRQHandler>:
1000e628:	e7fe      	b.n	1000e628 <RSV60_IRQHandler>

1000e62a <RSV61_IRQHandler>:
1000e62a:	e7fe      	b.n	1000e62a <RSV61_IRQHandler>

1000e62c <I2C2_IRQHandler>:
1000e62c:	e7fe      	b.n	1000e62c <I2C2_IRQHandler>

1000e62e <RISCV_IRQHandler>:
1000e62e:	e7fe      	b.n	1000e62e <RISCV_IRQHandler>

1000e630 <RSV64_IRQHandler>:
1000e630:	e7fe      	b.n	1000e630 <RSV64_IRQHandler>

1000e632 <RSV65_IRQHandler>:
1000e632:	e7fe      	b.n	1000e632 <RSV65_IRQHandler>

1000e634 <RSV66_IRQHandler>:
1000e634:	e7fe      	b.n	1000e634 <RSV66_IRQHandler>

1000e636 <OWM_IRQHandler>:
1000e636:	e7fe      	b.n	1000e636 <OWM_IRQHandler>

1000e638 <RSV68_IRQHandler>:
1000e638:	e7fe      	b.n	1000e638 <RSV68_IRQHandler>

1000e63a <RSV69_IRQHandler>:
1000e63a:	e7fe      	b.n	1000e63a <RSV69_IRQHandler>

1000e63c <RSV70_IRQHandler>:
1000e63c:	e7fe      	b.n	1000e63c <RSV70_IRQHandler>

1000e63e <RSV71_IRQHandler>:
1000e63e:	e7fe      	b.n	1000e63e <RSV71_IRQHandler>

1000e640 <RSV72_IRQHandler>:
1000e640:	e7fe      	b.n	1000e640 <RSV72_IRQHandler>

1000e642 <RSV73_IRQHandler>:
1000e642:	e7fe      	b.n	1000e642 <RSV73_IRQHandler>

1000e644 <RSV74_IRQHandler>:
1000e644:	e7fe      	b.n	1000e644 <RSV74_IRQHandler>

1000e646 <RSV75_IRQHandler>:
1000e646:	e7fe      	b.n	1000e646 <RSV75_IRQHandler>

1000e648 <RSV76_IRQHandler>:
1000e648:	e7fe      	b.n	1000e648 <RSV76_IRQHandler>

1000e64a <RSV77_IRQHandler>:
1000e64a:	e7fe      	b.n	1000e64a <RSV77_IRQHandler>

1000e64c <RSV78_IRQHandler>:
1000e64c:	e7fe      	b.n	1000e64c <RSV78_IRQHandler>

1000e64e <RSV79_IRQHandler>:
1000e64e:	e7fe      	b.n	1000e64e <RSV79_IRQHandler>

1000e650 <RSV80_IRQHandler>:
1000e650:	e7fe      	b.n	1000e650 <RSV80_IRQHandler>

1000e652 <RSV81_IRQHandler>:
1000e652:	e7fe      	b.n	1000e652 <RSV81_IRQHandler>

1000e654 <ECC_IRQHandler>:
1000e654:	e7fe      	b.n	1000e654 <ECC_IRQHandler>

1000e656 <DVS_IRQHandler>:
1000e656:	e7fe      	b.n	1000e656 <DVS_IRQHandler>

1000e658 <SIMO_IRQHandler>:
1000e658:	e7fe      	b.n	1000e658 <SIMO_IRQHandler>

1000e65a <RSV85_IRQHandler>:
1000e65a:	e7fe      	b.n	1000e65a <RSV85_IRQHandler>

1000e65c <RSV86_IRQHandler>:
1000e65c:	e7fe      	b.n	1000e65c <RSV86_IRQHandler>

1000e65e <RSV87_IRQHandler>:
1000e65e:	e7fe      	b.n	1000e65e <RSV87_IRQHandler>

1000e660 <UART3_IRQHandler>:
1000e660:	e7fe      	b.n	1000e660 <UART3_IRQHandler>

1000e662 <RSV89_IRQHandler>:
1000e662:	e7fe      	b.n	1000e662 <RSV89_IRQHandler>

1000e664 <RSV90_IRQHandler>:
1000e664:	e7fe      	b.n	1000e664 <RSV90_IRQHandler>

1000e666 <PCIF_IRQHandler>:
1000e666:	e7fe      	b.n	1000e666 <PCIF_IRQHandler>

1000e668 <RSV92_IRQHandler>:
1000e668:	e7fe      	b.n	1000e668 <RSV92_IRQHandler>

1000e66a <RSV93_IRQHandler>:
1000e66a:	e7fe      	b.n	1000e66a <RSV93_IRQHandler>

1000e66c <RSV94_IRQHandler>:
1000e66c:	e7fe      	b.n	1000e66c <RSV94_IRQHandler>

1000e66e <RSV95_IRQHandler>:
1000e66e:	e7fe      	b.n	1000e66e <RSV95_IRQHandler>

1000e670 <RSV96_IRQHandler>:
1000e670:	e7fe      	b.n	1000e670 <RSV96_IRQHandler>

1000e672 <AES_IRQHandler>:
1000e672:	e7fe      	b.n	1000e672 <AES_IRQHandler>

1000e674 <RSV98_IRQHandler>:
1000e674:	e7fe      	b.n	1000e674 <RSV98_IRQHandler>

1000e676 <I2S_IRQHandler>:
1000e676:	e7fe      	b.n	1000e676 <I2S_IRQHandler>

1000e678 <CNN_FIFO_IRQHandler>:
1000e678:	e7fe      	b.n	1000e678 <CNN_FIFO_IRQHandler>

1000e67a <CNN_IRQHandler>:
1000e67a:	e7fe      	b.n	1000e67a <CNN_IRQHandler>

1000e67c <RSV102_IRQHandler>:
1000e67c:	e7fe      	b.n	1000e67c <RSV102_IRQHandler>

1000e67e <LPCMP_IRQHandler>:
1000e67e:	e7fe      	b.n	1000e67e <LPCMP_IRQHandler>
1000e680:	20020000 	.word	0x20020000
1000e684:	1000e74d 	.word	0x1000e74d
1000e688:	10017538 	.word	0x10017538
1000e68c:	20000000 	.word	0x20000000
1000e690:	200006c4 	.word	0x200006c4
1000e694:	200006c8 	.word	0x200006c8
1000e698:	20000e58 	.word	0x20000e58
1000e69c:	1000e751 	.word	0x1000e751
1000e6a0:	100103c1 	.word	0x100103c1
1000e6a4:	1000e2dd 	.word	0x1000e2dd

1000e6a8 <_sbrk>:
extern unsigned int __HeapLimit;
caddr_t _sbrk(int incr)
{
    char *prev_heap_end;

    if (heap_end == 0) {
1000e6a8:	4a0b      	ldr	r2, [pc, #44]	@ (1000e6d8 <_sbrk+0x30>)
{
1000e6aa:	b508      	push	{r3, lr}
1000e6ac:	4603      	mov	r3, r0
    if (heap_end == 0) {
1000e6ae:	6810      	ldr	r0, [r2, #0]
1000e6b0:	b128      	cbz	r0, 1000e6be <_sbrk+0x16>
        heap_end = (caddr_t)&__HeapBase;
    }
    prev_heap_end = heap_end;

    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000e6b2:	490a      	ldr	r1, [pc, #40]	@ (1000e6dc <_sbrk+0x34>)
1000e6b4:	4403      	add	r3, r0
1000e6b6:	428b      	cmp	r3, r1
1000e6b8:	d807      	bhi.n	1000e6ca <_sbrk+0x22>
        errno = ENOMEM;
        return (caddr_t)-1;
    }

    heap_end += incr;
1000e6ba:	6013      	str	r3, [r2, #0]

    return (caddr_t)prev_heap_end;
}
1000e6bc:	bd08      	pop	{r3, pc}
        heap_end = (caddr_t)&__HeapBase;
1000e6be:	4808      	ldr	r0, [pc, #32]	@ (1000e6e0 <_sbrk+0x38>)
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000e6c0:	4906      	ldr	r1, [pc, #24]	@ (1000e6dc <_sbrk+0x34>)
        heap_end = (caddr_t)&__HeapBase;
1000e6c2:	6010      	str	r0, [r2, #0]
    if ((unsigned int)(heap_end + incr) > (unsigned int)&__HeapLimit) {
1000e6c4:	4403      	add	r3, r0
1000e6c6:	428b      	cmp	r3, r1
1000e6c8:	d9f7      	bls.n	1000e6ba <_sbrk+0x12>
        errno = ENOMEM;
1000e6ca:	f001 fb5d 	bl	1000fd88 <__errno>
1000e6ce:	230c      	movs	r3, #12
1000e6d0:	6003      	str	r3, [r0, #0]
        return (caddr_t)-1;
1000e6d2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000e6d6:	bd08      	pop	{r3, pc}
1000e6d8:	200006e4 	.word	0x200006e4
1000e6dc:	2001f000 	.word	0x2001f000
1000e6e0:	20000e60 	.word	0x20000e60

1000e6e4 <SystemCoreClockUpdate>:
__weak void SystemCoreClockUpdate(void)
{
    uint32_t base_freq, div, clk_src;

    // Get the clock source and frequency
    clk_src = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL);
1000e6e4:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1000e6e8:	689a      	ldr	r2, [r3, #8]
1000e6ea:	f402 6260 	and.w	r2, r2, #3584	@ 0xe00
    switch (clk_src) {
1000e6ee:	f5b2 6f20 	cmp.w	r2, #2560	@ 0xa00
1000e6f2:	d020      	beq.n	1000e736 <SystemCoreClockUpdate+0x52>
1000e6f4:	d911      	bls.n	1000e71a <SystemCoreClockUpdate+0x36>
1000e6f6:	f5b2 6f40 	cmp.w	r2, #3072	@ 0xc00
1000e6fa:	d017      	beq.n	1000e72c <SystemCoreClockUpdate+0x48>
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_INRO:
        base_freq = INRO_FREQ;
        break;
    case MXC_S_GCR_CLKCTRL_SYSCLK_SEL_IPO:
        base_freq = IPO_FREQ;
1000e6fc:	4b0f      	ldr	r3, [pc, #60]	@ (1000e73c <SystemCoreClockUpdate+0x58>)
1000e6fe:	4910      	ldr	r1, [pc, #64]	@ (1000e740 <SystemCoreClockUpdate+0x5c>)
1000e700:	f5b2 6f60 	cmp.w	r2, #3584	@ 0xe00
1000e704:	bf18      	it	ne
1000e706:	460b      	movne	r3, r1
        // This code should never execute, however, initialize to safe value.
        base_freq = HIRC_FREQ;
        break;
    }

    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000e708:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000

    SystemCoreClock = base_freq >> div;
1000e70c:	490d      	ldr	r1, [pc, #52]	@ (1000e744 <SystemCoreClockUpdate+0x60>)
    div = (MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_DIV) >> MXC_F_GCR_CLKCTRL_SYSCLK_DIV_POS;
1000e70e:	6892      	ldr	r2, [r2, #8]
1000e710:	f3c2 1282 	ubfx	r2, r2, #6, #3
    SystemCoreClock = base_freq >> div;
1000e714:	40d3      	lsrs	r3, r2
1000e716:	600b      	str	r3, [r1, #0]
}
1000e718:	4770      	bx	lr
    switch (clk_src) {
1000e71a:	b152      	cbz	r2, 1000e732 <SystemCoreClockUpdate+0x4e>
        base_freq = IPO_FREQ;
1000e71c:	4908      	ldr	r1, [pc, #32]	@ (1000e740 <SystemCoreClockUpdate+0x5c>)
1000e71e:	f247 5330 	movw	r3, #30000	@ 0x7530
1000e722:	f5b2 6fc0 	cmp.w	r2, #1536	@ 0x600
1000e726:	bf18      	it	ne
1000e728:	460b      	movne	r3, r1
1000e72a:	e7ed      	b.n	1000e708 <SystemCoreClockUpdate+0x24>
        base_freq = ERTCO_FREQ;
1000e72c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
1000e730:	e7ea      	b.n	1000e708 <SystemCoreClockUpdate+0x24>
        base_freq = ISO_FREQ;
1000e732:	4b05      	ldr	r3, [pc, #20]	@ (1000e748 <SystemCoreClockUpdate+0x64>)
1000e734:	e7e8      	b.n	1000e708 <SystemCoreClockUpdate+0x24>
        base_freq = IBRO_FREQ;
1000e736:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000e73a:	e7e5      	b.n	1000e708 <SystemCoreClockUpdate+0x24>
1000e73c:	047868c0 	.word	0x047868c0
1000e740:	05f5e100 	.word	0x05f5e100
1000e744:	20000e58 	.word	0x20000e58
1000e748:	03938700 	.word	0x03938700

1000e74c <PreInit>:
 */
__weak int PreInit(void)
{
    /* Do nothing */
    return 0;
}
1000e74c:	2000      	movs	r0, #0
1000e74e:	4770      	bx	lr

1000e750 <SystemInit>:
 * You may over-ride this function in your program by defining a custom 
 *  SystemInit(), but care should be taken to reproduce the initialization
 *  steps or a non-functional system may result.
 */
__weak void SystemInit(void)
{
1000e750:	b510      	push	{r4, lr}
    /* Configure the interrupt controller to use the application vector table in */
    /* the application space */
#if defined(__CC_ARM) || defined(__GNUC__)
    /* IAR sets the VTOR pointer incorrectly and causes stack corruption */
    SCB->VTOR = (uint32_t)__isr_vector;
1000e752:	4c0a      	ldr	r4, [pc, #40]	@ (1000e77c <SystemInit+0x2c>)
1000e754:	4b0a      	ldr	r3, [pc, #40]	@ (1000e780 <SystemInit+0x30>)
1000e756:	60a3      	str	r3, [r4, #8]
#endif /* __CC_ARM || __GNUC__ */

    /* Enable instruction cache */
    MXC_ICC_Enable(MXC_ICC0);
1000e758:	480a      	ldr	r0, [pc, #40]	@ (1000e784 <SystemInit+0x34>)
1000e75a:	f000 ffab 	bl	1000f6b4 <MXC_ICC_Enable>

    /* Enable FPU on Cortex-M4, which occupies coprocessor slots 10 & 11 */
    /* Grant full access, per "Table B3-24 CPACR bit assignments". */
    /* DDI0403D "ARMv7-M Architecture Reference Manual" */
    SCB->CPACR |= SCB_CPACR_CP10_Msk | SCB_CPACR_CP11_Msk;
1000e75e:	f8d4 3088 	ldr.w	r3, [r4, #136]	@ 0x88
1000e762:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
1000e766:	f8c4 3088 	str.w	r3, [r4, #136]	@ 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
1000e76a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
1000e76e:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();

    SystemCoreClockUpdate();
1000e772:	f7ff ffb7 	bl	1000e6e4 <SystemCoreClockUpdate>

    Board_Init();
1000e776:	f7ff fe09 	bl	1000e38c <Board_Init>
}
1000e77a:	bd10      	pop	{r4, pc}
1000e77c:	e000ed00 	.word	0xe000ed00
1000e780:	1000e000 	.word	0x1000e000
1000e784:	4002a000 	.word	0x4002a000

1000e788 <MXC_DelayInit>:
    }
}

/* ************************************************************************** */
static void MXC_DelayInit(uint32_t us)
{
1000e788:	b538      	push	{r3, r4, r5, lr}
    uint32_t starttick, reload, ticks, lastticks;

    // Record the current tick value and clear the overflow flag
    starttick = SysTick->VAL;
1000e78a:	f04f 23e0 	mov.w	r3, #3758153728	@ 0xe000e000

    // Save the state of control register (and clear the overflow flag)
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000e78e:	4918      	ldr	r1, [pc, #96]	@ (1000e7f0 <MXC_DelayInit+0x68>)
    starttick = SysTick->VAL;
1000e790:	699c      	ldr	r4, [r3, #24]
    ctrl_save = SysTick->CTRL & ~SysTick_CTRL_COUNTFLAG_Msk;
1000e792:	691a      	ldr	r2, [r3, #16]
1000e794:	f422 3280 	bic.w	r2, r2, #65536	@ 0x10000
1000e798:	600a      	str	r2, [r1, #0]

    // If the SysTick is not running, configure and start it
    if (!(SysTick->CTRL & SysTick_CTRL_ENABLE_Msk)) {
1000e79a:	691a      	ldr	r2, [r3, #16]
1000e79c:	07d2      	lsls	r2, r2, #31
1000e79e:	d41f      	bmi.n	1000e7e0 <MXC_DelayInit+0x58>
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000e7a0:	f06f 447f 	mvn.w	r4, #4278190080	@ 0xff000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000e7a4:	2205      	movs	r2, #5
        SysTick->LOAD = SysTick_LOAD_RELOAD_Msk;
1000e7a6:	615c      	str	r4, [r3, #20]
        starttick = SysTick_VAL_CURRENT_Msk;
        reload = SysTick_LOAD_RELOAD_Msk + 1;
1000e7a8:	f04f 7580 	mov.w	r5, #16777216	@ 0x1000000
        SysTick->VAL = SysTick_VAL_CURRENT_Msk;
1000e7ac:	619c      	str	r4, [r3, #24]
        SysTick->CTRL = SysTick_CTRL_ENABLE_Msk | SysTick_CTRL_CLKSOURCE_Msk;
1000e7ae:	611a      	str	r2, [r3, #16]
    } else {
        reload = SysTick->LOAD + 1; // get the current reload value
    }

    // Calculate the total number of ticks to delay
    ticks = (uint32_t)(((uint64_t)us * (uint64_t)SystemCoreClock) / 1000000);
1000e7b0:	4b10      	ldr	r3, [pc, #64]	@ (1000e7f4 <MXC_DelayInit+0x6c>)
1000e7b2:	4a11      	ldr	r2, [pc, #68]	@ (1000e7f8 <MXC_DelayInit+0x70>)
1000e7b4:	6819      	ldr	r1, [r3, #0]
1000e7b6:	2300      	movs	r3, #0
1000e7b8:	fba0 0101 	umull	r0, r1, r0, r1
1000e7bc:	f008 fa66 	bl	10016c8c <__aeabi_uldivmod>

    // How many overflows of the SysTick will occur
    overflows = ticks / reload;
1000e7c0:	4b0e      	ldr	r3, [pc, #56]	@ (1000e7fc <MXC_DelayInit+0x74>)
1000e7c2:	fbb0 f2f5 	udiv	r2, r0, r5

    // How many remaining ticks after the last overflow
    lastticks = ticks % reload;
1000e7c6:	fb05 0012 	mls	r0, r5, r2, r0

    // Check if there will be another overflow due to the current value of the SysTick
    if (lastticks >= starttick) {
1000e7ca:	4284      	cmp	r4, r0
    overflows = ticks / reload;
1000e7cc:	601a      	str	r2, [r3, #0]
    if (lastticks >= starttick) {
1000e7ce:	d80a      	bhi.n	1000e7e6 <MXC_DelayInit+0x5e>
        overflows++;
1000e7d0:	681a      	ldr	r2, [r3, #0]
1000e7d2:	3201      	adds	r2, #1
1000e7d4:	601a      	str	r2, [r3, #0]
        endtick = reload - (lastticks - starttick);
1000e7d6:	4425      	add	r5, r4
1000e7d8:	4b09      	ldr	r3, [pc, #36]	@ (1000e800 <MXC_DelayInit+0x78>)
1000e7da:	1a28      	subs	r0, r5, r0
1000e7dc:	6018      	str	r0, [r3, #0]
    } else {
        endtick = starttick - lastticks;
    }
}
1000e7de:	bd38      	pop	{r3, r4, r5, pc}
        reload = SysTick->LOAD + 1; // get the current reload value
1000e7e0:	695d      	ldr	r5, [r3, #20]
1000e7e2:	3501      	adds	r5, #1
1000e7e4:	e7e4      	b.n	1000e7b0 <MXC_DelayInit+0x28>
        endtick = starttick - lastticks;
1000e7e6:	4b06      	ldr	r3, [pc, #24]	@ (1000e800 <MXC_DelayInit+0x78>)
1000e7e8:	1a20      	subs	r0, r4, r0
1000e7ea:	6018      	str	r0, [r3, #0]
}
1000e7ec:	bd38      	pop	{r3, r4, r5, pc}
1000e7ee:	bf00      	nop
1000e7f0:	200006ec 	.word	0x200006ec
1000e7f4:	20000e58 	.word	0x20000e58
1000e7f8:	000f4240 	.word	0x000f4240
1000e7fc:	20000004 	.word	0x20000004
1000e800:	200006f0 	.word	0x200006f0

1000e804 <MXC_DelayAsync>:

/* ************************************************************************** */
int MXC_DelayAsync(uint32_t us, mxc_delay_complete_t callback)
{
1000e804:	b510      	push	{r4, lr}
    cbFunc = callback;

    // Check if timeout currently ongoing
    if (overflows > 0) {
1000e806:	4c0c      	ldr	r4, [pc, #48]	@ (1000e838 <MXC_DelayAsync+0x34>)
    cbFunc = callback;
1000e808:	4b0c      	ldr	r3, [pc, #48]	@ (1000e83c <MXC_DelayAsync+0x38>)
    if (overflows > 0) {
1000e80a:	6822      	ldr	r2, [r4, #0]
    cbFunc = callback;
1000e80c:	6019      	str	r1, [r3, #0]
    if (overflows > 0) {
1000e80e:	2a00      	cmp	r2, #0
1000e810:	dc0e      	bgt.n	1000e830 <MXC_DelayAsync+0x2c>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000e812:	b908      	cbnz	r0, 1000e818 <MXC_DelayAsync+0x14>
        return E_NO_ERROR;
1000e814:	2000      	movs	r0, #0
    if (overflows > 0) {
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
    }

    return E_NO_ERROR;
}
1000e816:	bd10      	pop	{r4, pc}
    MXC_DelayInit(us);
1000e818:	f7ff ffb6 	bl	1000e788 <MXC_DelayInit>
    if (overflows > 0) {
1000e81c:	6823      	ldr	r3, [r4, #0]
1000e81e:	2b00      	cmp	r3, #0
1000e820:	ddf8      	ble.n	1000e814 <MXC_DelayAsync+0x10>
        SysTick->CTRL |= SysTick_CTRL_TICKINT_Msk;
1000e822:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000e826:	6913      	ldr	r3, [r2, #16]
1000e828:	f043 0302 	orr.w	r3, r3, #2
1000e82c:	6113      	str	r3, [r2, #16]
1000e82e:	e7f1      	b.n	1000e814 <MXC_DelayAsync+0x10>
        return E_BUSY;
1000e830:	f06f 0005 	mvn.w	r0, #5
}
1000e834:	bd10      	pop	{r4, pc}
1000e836:	bf00      	nop
1000e838:	20000004 	.word	0x20000004
1000e83c:	200006e8 	.word	0x200006e8

1000e840 <MXC_DelayCheck>:

/* ************************************************************************** */
int MXC_DelayCheck(void)
{
1000e840:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    // Check if timeout currently ongoing
    if (overflows < 0) {
1000e842:	4c17      	ldr	r4, [pc, #92]	@ (1000e8a0 <MXC_DelayCheck+0x60>)
1000e844:	6823      	ldr	r3, [r4, #0]
1000e846:	2b00      	cmp	r3, #0
1000e848:	db1e      	blt.n	1000e888 <MXC_DelayCheck+0x48>

        return E_NO_ERROR;
    }

    // Check the global values
    if ((overflows == 0) && (SysTick->VAL <= endtick)) {
1000e84a:	6826      	ldr	r6, [r4, #0]
1000e84c:	bb2e      	cbnz	r6, 1000e89a <MXC_DelayCheck+0x5a>
1000e84e:	4b15      	ldr	r3, [pc, #84]	@ (1000e8a4 <MXC_DelayCheck+0x64>)
1000e850:	f04f 25e0 	mov.w	r5, #3758153728	@ 0xe000e000
1000e854:	681b      	ldr	r3, [r3, #0]
1000e856:	69aa      	ldr	r2, [r5, #24]
1000e858:	429a      	cmp	r2, r3
1000e85a:	d81e      	bhi.n	1000e89a <MXC_DelayCheck+0x5a>
}

/* ************************************************************************** */
void MXC_DelayAbort(void)
{
    if (cbFunc != NULL) {
1000e85c:	4f12      	ldr	r7, [pc, #72]	@ (1000e8a8 <MXC_DelayCheck+0x68>)
1000e85e:	683b      	ldr	r3, [r7, #0]
1000e860:	b15b      	cbz	r3, 1000e87a <MXC_DelayCheck+0x3a>
        cbFunc(E_ABORT);
1000e862:	f06f 000f 	mvn.w	r0, #15
1000e866:	4798      	blx	r3
        cbFunc = NULL;
    }

    SysTick->CTRL = ctrl_save;
1000e868:	4b10      	ldr	r3, [pc, #64]	@ (1000e8ac <MXC_DelayCheck+0x6c>)
        cbFunc = NULL;
1000e86a:	603e      	str	r6, [r7, #0]
    SysTick->CTRL = ctrl_save;
1000e86c:	681a      	ldr	r2, [r3, #0]
1000e86e:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000e870:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000e874:	6023      	str	r3, [r4, #0]
        return E_NO_ERROR;
1000e876:	2000      	movs	r0, #0
}
1000e878:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    SysTick->CTRL = ctrl_save;
1000e87a:	4a0c      	ldr	r2, [pc, #48]	@ (1000e8ac <MXC_DelayCheck+0x6c>)
    overflows = -1;
1000e87c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000e880:	6812      	ldr	r2, [r2, #0]
1000e882:	612a      	str	r2, [r5, #16]
    overflows = -1;
1000e884:	6023      	str	r3, [r4, #0]
        if (cbFunc != NULL) {
1000e886:	e7f6      	b.n	1000e876 <MXC_DelayCheck+0x36>
        if (cbFunc != NULL) {
1000e888:	4c07      	ldr	r4, [pc, #28]	@ (1000e8a8 <MXC_DelayCheck+0x68>)
1000e88a:	6823      	ldr	r3, [r4, #0]
1000e88c:	2b00      	cmp	r3, #0
1000e88e:	d0f2      	beq.n	1000e876 <MXC_DelayCheck+0x36>
            cbFunc(E_NO_ERROR);
1000e890:	2000      	movs	r0, #0
1000e892:	4798      	blx	r3
            cbFunc = NULL;
1000e894:	2300      	movs	r3, #0
1000e896:	6023      	str	r3, [r4, #0]
1000e898:	e7ed      	b.n	1000e876 <MXC_DelayCheck+0x36>
    return E_BUSY;
1000e89a:	f06f 0005 	mvn.w	r0, #5
}
1000e89e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000e8a0:	20000004 	.word	0x20000004
1000e8a4:	200006f0 	.word	0x200006f0
1000e8a8:	200006e8 	.word	0x200006e8
1000e8ac:	200006ec 	.word	0x200006ec

1000e8b0 <MXC_DelayAbort>:
{
1000e8b0:	b510      	push	{r4, lr}
    if (cbFunc != NULL) {
1000e8b2:	4c09      	ldr	r4, [pc, #36]	@ (1000e8d8 <MXC_DelayAbort+0x28>)
1000e8b4:	6823      	ldr	r3, [r4, #0]
1000e8b6:	b123      	cbz	r3, 1000e8c2 <MXC_DelayAbort+0x12>
        cbFunc(E_ABORT);
1000e8b8:	f06f 000f 	mvn.w	r0, #15
1000e8bc:	4798      	blx	r3
        cbFunc = NULL;
1000e8be:	2300      	movs	r3, #0
1000e8c0:	6023      	str	r3, [r4, #0]
    SysTick->CTRL = ctrl_save;
1000e8c2:	4a06      	ldr	r2, [pc, #24]	@ (1000e8dc <MXC_DelayAbort+0x2c>)
    overflows = -1;
1000e8c4:	4b06      	ldr	r3, [pc, #24]	@ (1000e8e0 <MXC_DelayAbort+0x30>)
    SysTick->CTRL = ctrl_save;
1000e8c6:	6810      	ldr	r0, [r2, #0]
1000e8c8:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
    overflows = -1;
1000e8cc:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
    SysTick->CTRL = ctrl_save;
1000e8d0:	6108      	str	r0, [r1, #16]
    overflows = -1;
1000e8d2:	601a      	str	r2, [r3, #0]
}
1000e8d4:	bd10      	pop	{r4, pc}
1000e8d6:	bf00      	nop
1000e8d8:	200006e8 	.word	0x200006e8
1000e8dc:	200006ec 	.word	0x200006ec
1000e8e0:	20000004 	.word	0x20000004

1000e8e4 <MXC_Delay>:

/* ************************************************************************** */
int MXC_Delay(uint32_t us)
{
1000e8e4:	b538      	push	{r3, r4, r5, lr}
    // Check if timeout currently ongoing
    if (overflows > 0) {
1000e8e6:	4c18      	ldr	r4, [pc, #96]	@ (1000e948 <MXC_Delay+0x64>)
1000e8e8:	6822      	ldr	r2, [r4, #0]
1000e8ea:	2a00      	cmp	r2, #0
1000e8ec:	dc29      	bgt.n	1000e942 <MXC_Delay+0x5e>
        return E_BUSY;
    }

    // Check if there is nothing to do
    if (us == 0) {
1000e8ee:	b908      	cbnz	r0, 1000e8f4 <MXC_Delay+0x10>
        return E_NO_ERROR;
1000e8f0:	2000      	movs	r0, #0
    // Wait for the counter value
    while (SysTick->VAL > endtick) {}

    MXC_DelayAbort();
    return E_NO_ERROR;
}
1000e8f2:	bd38      	pop	{r3, r4, r5, pc}
    MXC_DelayInit(us);
1000e8f4:	f7ff ff48 	bl	1000e788 <MXC_DelayInit>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000e8f8:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
    while (overflows > 0) {
1000e8fc:	e002      	b.n	1000e904 <MXC_Delay+0x20>
        if (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk) {
1000e8fe:	6913      	ldr	r3, [r2, #16]
1000e900:	03db      	lsls	r3, r3, #15
1000e902:	d41a      	bmi.n	1000e93a <MXC_Delay+0x56>
    while (overflows > 0) {
1000e904:	6823      	ldr	r3, [r4, #0]
1000e906:	2b00      	cmp	r3, #0
1000e908:	dcf9      	bgt.n	1000e8fe <MXC_Delay+0x1a>
    while (SysTick->VAL > endtick) {}
1000e90a:	4b10      	ldr	r3, [pc, #64]	@ (1000e94c <MXC_Delay+0x68>)
1000e90c:	681a      	ldr	r2, [r3, #0]
1000e90e:	f04f 21e0 	mov.w	r1, #3758153728	@ 0xe000e000
1000e912:	698b      	ldr	r3, [r1, #24]
1000e914:	4293      	cmp	r3, r2
1000e916:	d8fc      	bhi.n	1000e912 <MXC_Delay+0x2e>
    if (cbFunc != NULL) {
1000e918:	4d0d      	ldr	r5, [pc, #52]	@ (1000e950 <MXC_Delay+0x6c>)
1000e91a:	682b      	ldr	r3, [r5, #0]
1000e91c:	b123      	cbz	r3, 1000e928 <MXC_Delay+0x44>
        cbFunc(E_ABORT);
1000e91e:	f06f 000f 	mvn.w	r0, #15
1000e922:	4798      	blx	r3
        cbFunc = NULL;
1000e924:	2300      	movs	r3, #0
1000e926:	602b      	str	r3, [r5, #0]
    SysTick->CTRL = ctrl_save;
1000e928:	4b0a      	ldr	r3, [pc, #40]	@ (1000e954 <MXC_Delay+0x70>)
1000e92a:	f04f 22e0 	mov.w	r2, #3758153728	@ 0xe000e000
1000e92e:	6819      	ldr	r1, [r3, #0]
1000e930:	6111      	str	r1, [r2, #16]
    overflows = -1;
1000e932:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
1000e936:	6023      	str	r3, [r4, #0]
}
1000e938:	e7da      	b.n	1000e8f0 <MXC_Delay+0xc>
            overflows--;
1000e93a:	6823      	ldr	r3, [r4, #0]
1000e93c:	3b01      	subs	r3, #1
1000e93e:	6023      	str	r3, [r4, #0]
1000e940:	e7e0      	b.n	1000e904 <MXC_Delay+0x20>
        return E_BUSY;
1000e942:	f06f 0005 	mvn.w	r0, #5
}
1000e946:	bd38      	pop	{r3, r4, r5, pc}
1000e948:	20000004 	.word	0x20000004
1000e94c:	200006f0 	.word	0x200006f0
1000e950:	200006e8 	.word	0x200006e8
1000e954:	200006ec 	.word	0x200006ec

1000e958 <MXC_SYS_ClockDisable>:

/* ************************************************************************** */
void MXC_SYS_ClockDisable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000e958:	283f      	cmp	r0, #63	@ 0x3f
1000e95a:	d908      	bls.n	1000e96e <MXC_SYS_ClockDisable+0x16>
        clock -= 64;
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000e95c:	4a0d      	ldr	r2, [pc, #52]	@ (1000e994 <MXC_SYS_ClockDisable+0x3c>)
        clock -= 64;
1000e95e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis |= (0x1 << clock);
1000e960:	68d1      	ldr	r1, [r2, #12]
1000e962:	b2c0      	uxtb	r0, r0
1000e964:	2301      	movs	r3, #1
1000e966:	4083      	lsls	r3, r0
1000e968:	430b      	orrs	r3, r1
1000e96a:	60d3      	str	r3, [r2, #12]
1000e96c:	4770      	bx	lr
    } else if (clock > 31) {
1000e96e:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000e970:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000e974:	d907      	bls.n	1000e986 <MXC_SYS_ClockDisable+0x2e>
        clock -= 32;
1000e976:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 |= (0x1 << clock);
1000e978:	6c91      	ldr	r1, [r2, #72]	@ 0x48
1000e97a:	b2c0      	uxtb	r0, r0
1000e97c:	2301      	movs	r3, #1
1000e97e:	4083      	lsls	r3, r0
1000e980:	430b      	orrs	r3, r1
1000e982:	6493      	str	r3, [r2, #72]	@ 0x48
1000e984:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 |= (0x1 << clock);
1000e986:	6a51      	ldr	r1, [r2, #36]	@ 0x24
1000e988:	2301      	movs	r3, #1
1000e98a:	4083      	lsls	r3, r0
1000e98c:	430b      	orrs	r3, r1
1000e98e:	6253      	str	r3, [r2, #36]	@ 0x24
    }
}
1000e990:	4770      	bx	lr
1000e992:	bf00      	nop
1000e994:	40080000 	.word	0x40080000

1000e998 <MXC_SYS_ClockEnable>:

/* ************************************************************************** */
void MXC_SYS_ClockEnable(mxc_sys_periph_clock_t clock)
{
    /* The mxc_sys_periph_clock_t enum uses enum values that are the offset by 32 and 64 for the perckcn1 register. */
    if (clock > 63) {
1000e998:	283f      	cmp	r0, #63	@ 0x3f
1000e99a:	d909      	bls.n	1000e9b0 <MXC_SYS_ClockEnable+0x18>
        clock -= 64;
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000e99c:	490e      	ldr	r1, [pc, #56]	@ (1000e9d8 <MXC_SYS_ClockEnable+0x40>)
        clock -= 64;
1000e99e:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->pclkdis &= ~(0x1 << clock);
1000e9a0:	68cb      	ldr	r3, [r1, #12]
1000e9a2:	b2c0      	uxtb	r0, r0
1000e9a4:	2201      	movs	r2, #1
1000e9a6:	4082      	lsls	r2, r0
1000e9a8:	ea23 0302 	bic.w	r3, r3, r2
1000e9ac:	60cb      	str	r3, [r1, #12]
1000e9ae:	4770      	bx	lr
    } else if (clock > 31) {
1000e9b0:	281f      	cmp	r0, #31
        clock -= 32;
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000e9b2:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
    } else if (clock > 31) {
1000e9b6:	d908      	bls.n	1000e9ca <MXC_SYS_ClockEnable+0x32>
        clock -= 32;
1000e9b8:	3820      	subs	r0, #32
        MXC_GCR->pclkdis1 &= ~(0x1 << clock);
1000e9ba:	6c8b      	ldr	r3, [r1, #72]	@ 0x48
1000e9bc:	b2c0      	uxtb	r0, r0
1000e9be:	2201      	movs	r2, #1
1000e9c0:	4082      	lsls	r2, r0
1000e9c2:	ea23 0302 	bic.w	r3, r3, r2
1000e9c6:	648b      	str	r3, [r1, #72]	@ 0x48
1000e9c8:	4770      	bx	lr
    } else {
        MXC_GCR->pclkdis0 &= ~(0x1 << clock);
1000e9ca:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
1000e9cc:	2201      	movs	r2, #1
1000e9ce:	4082      	lsls	r2, r0
1000e9d0:	ea23 0302 	bic.w	r3, r3, r2
1000e9d4:	624b      	str	r3, [r1, #36]	@ 0x24
    }
}
1000e9d6:	4770      	bx	lr
1000e9d8:	40080000 	.word	0x40080000

1000e9dc <MXC_SYS_ClockSourceEnable>:
    }
}

/******************************************************************************/
int MXC_SYS_ClockSourceEnable(mxc_sys_system_clock_t clock)
{
1000e9dc:	b510      	push	{r4, lr}
    switch (clock) {
1000e9de:	2807      	cmp	r0, #7
1000e9e0:	d80a      	bhi.n	1000e9f8 <MXC_SYS_ClockSourceEnable+0x1c>
1000e9e2:	e8df f000 	tbb	[pc, r0]
1000e9e6:	090c      	.short	0x090c
1000e9e8:	47332309 	.word	0x47332309
1000e9ec:	045b      	.short	0x045b

    default:
        return E_BAD_PARAM;
        break;
    }
}
1000e9ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return MXC_GPIO_Config(&gpio_cfg_extclk);
1000e9f2:	4836      	ldr	r0, [pc, #216]	@ (1000eacc <MXC_SYS_ClockSourceEnable+0xf0>)
1000e9f4:	f000 b97a 	b.w	1000ecec <MXC_GPIO_Config>
    switch (clock) {
1000e9f8:	f06f 0002 	mvn.w	r0, #2
}
1000e9fc:	bd10      	pop	{r4, pc}
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000e9fe:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    // We do not have access to a system tick in the RV core.
    while (!(MXC_GCR->clkctrl & ready)) {}
    return E_NO_ERROR;
#else
    // Start timeout, wait for ready
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea02:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000ea04:	68a3      	ldr	r3, [r4, #8]
1000ea06:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1000ea0a:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea0c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ea10:	f7ff fef8 	bl	1000e804 <MXC_DelayAsync>
1000ea14:	e003      	b.n	1000ea1e <MXC_SYS_ClockSourceEnable+0x42>
    do {
        if (MXC_GCR->clkctrl & ready) {
            MXC_DelayAbort();
            return E_NO_ERROR;
        }
    } while (MXC_DelayCheck() == E_BUSY);
1000ea16:	f7ff ff13 	bl	1000e840 <MXC_DelayCheck>
1000ea1a:	3006      	adds	r0, #6
1000ea1c:	d152      	bne.n	1000eac4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ea1e:	68a3      	ldr	r3, [r4, #8]
1000ea20:	0159      	lsls	r1, r3, #5
1000ea22:	d5f8      	bpl.n	1000ea16 <MXC_SYS_ClockSourceEnable+0x3a>
            MXC_DelayAbort();
1000ea24:	f7ff ff44 	bl	1000e8b0 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ea28:	2000      	movs	r0, #0
}
1000ea2a:	bd10      	pop	{r4, pc}
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea2c:	2100      	movs	r1, #0
1000ea2e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ea32:	f7ff fee7 	bl	1000e804 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
1000ea36:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000ea3a:	e003      	b.n	1000ea44 <MXC_SYS_ClockSourceEnable+0x68>
    } while (MXC_DelayCheck() == E_BUSY);
1000ea3c:	f7ff ff00 	bl	1000e840 <MXC_DelayCheck>
1000ea40:	3006      	adds	r0, #6
1000ea42:	d13f      	bne.n	1000eac4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ea44:	68a3      	ldr	r3, [r4, #8]
1000ea46:	009a      	lsls	r2, r3, #2
1000ea48:	d4ec      	bmi.n	1000ea24 <MXC_SYS_ClockSourceEnable+0x48>
1000ea4a:	e7f7      	b.n	1000ea3c <MXC_SYS_ClockSourceEnable+0x60>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000ea4c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea50:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000ea52:	68a3      	ldr	r3, [r4, #8]
1000ea54:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
1000ea58:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea5a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ea5e:	f7ff fed1 	bl	1000e804 <MXC_DelayAsync>
1000ea62:	e003      	b.n	1000ea6c <MXC_SYS_ClockSourceEnable+0x90>
    } while (MXC_DelayCheck() == E_BUSY);
1000ea64:	f7ff feec 	bl	1000e840 <MXC_DelayCheck>
1000ea68:	3006      	adds	r0, #6
1000ea6a:	d12b      	bne.n	1000eac4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ea6c:	68a3      	ldr	r3, [r4, #8]
1000ea6e:	011b      	lsls	r3, r3, #4
1000ea70:	d5f8      	bpl.n	1000ea64 <MXC_SYS_ClockSourceEnable+0x88>
1000ea72:	e7d7      	b.n	1000ea24 <MXC_SYS_ClockSourceEnable+0x48>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000ea74:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea78:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000ea7a:	68a3      	ldr	r3, [r4, #8]
1000ea7c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1000ea80:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ea82:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ea86:	f7ff febd 	bl	1000e804 <MXC_DelayAsync>
1000ea8a:	e003      	b.n	1000ea94 <MXC_SYS_ClockSourceEnable+0xb8>
    } while (MXC_DelayCheck() == E_BUSY);
1000ea8c:	f7ff fed8 	bl	1000e840 <MXC_DelayCheck>
1000ea90:	3006      	adds	r0, #6
1000ea92:	d117      	bne.n	1000eac4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000ea94:	68a3      	ldr	r3, [r4, #8]
1000ea96:	00d8      	lsls	r0, r3, #3
1000ea98:	d4c4      	bmi.n	1000ea24 <MXC_SYS_ClockSourceEnable+0x48>
1000ea9a:	e7f7      	b.n	1000ea8c <MXC_SYS_ClockSourceEnable+0xb0>
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000ea9c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eaa0:	2100      	movs	r1, #0
        MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000eaa2:	68a3      	ldr	r3, [r4, #8]
1000eaa4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
1000eaa8:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eaaa:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000eaae:	f7ff fea9 	bl	1000e804 <MXC_DelayAsync>
1000eab2:	e003      	b.n	1000eabc <MXC_SYS_ClockSourceEnable+0xe0>
    } while (MXC_DelayCheck() == E_BUSY);
1000eab4:	f7ff fec4 	bl	1000e840 <MXC_DelayCheck>
1000eab8:	3006      	adds	r0, #6
1000eaba:	d103      	bne.n	1000eac4 <MXC_SYS_ClockSourceEnable+0xe8>
        if (MXC_GCR->clkctrl & ready) {
1000eabc:	68a3      	ldr	r3, [r4, #8]
1000eabe:	019b      	lsls	r3, r3, #6
1000eac0:	d4b0      	bmi.n	1000ea24 <MXC_SYS_ClockSourceEnable+0x48>
1000eac2:	e7f7      	b.n	1000eab4 <MXC_SYS_ClockSourceEnable+0xd8>

    return E_TIME_OUT;
1000eac4:	f06f 0009 	mvn.w	r0, #9
}
1000eac8:	bd10      	pop	{r4, pc}
1000eaca:	bf00      	nop
1000eacc:	1001705c 	.word	0x1001705c

1000ead0 <MXC_SYS_Clock_Select>:
#endif // __riscv
}

/* ************************************************************************** */
int MXC_SYS_Clock_Select(mxc_sys_system_clock_t clock)
{
1000ead0:	b538      	push	{r3, r4, r5, lr}
    uint32_t current_clock;
    int err = E_NO_ERROR;

    // Save the current system clock
    current_clock = MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL;
1000ead2:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
1000ead6:	689d      	ldr	r5, [r3, #8]

    switch (clock) {
1000ead8:	2807      	cmp	r0, #7
1000eada:	d824      	bhi.n	1000eb26 <MXC_SYS_Clock_Select+0x56>
1000eadc:	e8df f000 	tbb	[pc, r0]
1000eae0:	33232326 	.word	0x33232326
1000eae4:	045a4b3c 	.word	0x045a4b3c
        return MXC_GPIO_Config(&gpio_cfg_extclk);
1000eae8:	485d      	ldr	r0, [pc, #372]	@ (1000ec60 <MXC_SYS_Clock_Select+0x190>)
1000eaea:	f000 f8ff 	bl	1000ecec <MXC_GPIO_Config>
        break;

    case MXC_SYS_CLOCK_EXTCLK:
        // No EXT_CLK "RDY" bit for AI85 so we enable every time
        err = MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_EXTCLK);
        if (err) {
1000eaee:	b9c8      	cbnz	r0, 1000eb24 <MXC_SYS_Clock_Select+0x54>
            return err;
        }

        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL,
1000eaf0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000eaf4:	6893      	ldr	r3, [r2, #8]
1000eaf6:	f443 6360 	orr.w	r3, r3, #3584	@ 0xe00
1000eafa:	6093      	str	r3, [r2, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000eafc:	2100      	movs	r1, #0
1000eafe:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000eb02:	f7ff fe7f 	bl	1000e804 <MXC_DelayAsync>
        if (MXC_GCR->clkctrl & ready) {
1000eb06:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000eb0a:	e003      	b.n	1000eb14 <MXC_SYS_Clock_Select+0x44>
    } while (MXC_DelayCheck() == E_BUSY);
1000eb0c:	f7ff fe98 	bl	1000e840 <MXC_DelayCheck>
1000eb10:	3006      	adds	r0, #6
1000eb12:	d14e      	bne.n	1000ebb2 <MXC_SYS_Clock_Select+0xe2>
        if (MXC_GCR->clkctrl & ready) {
1000eb14:	68a3      	ldr	r3, [r4, #8]
1000eb16:	049b      	lsls	r3, r3, #18
1000eb18:	d5f8      	bpl.n	1000eb0c <MXC_SYS_Clock_Select+0x3c>
            MXC_DelayAbort();
1000eb1a:	f7ff fec9 	bl	1000e8b0 <MXC_DelayAbort>

        return E_TIME_OUT;
    }

    // Update the system core clock
    SystemCoreClockUpdate();
1000eb1e:	f7ff fde1 	bl	1000e6e4 <SystemCoreClockUpdate>

    return E_NO_ERROR;
1000eb22:	2000      	movs	r0, #0
}
1000eb24:	bd38      	pop	{r3, r4, r5, pc}
    switch (clock) {
1000eb26:	f06f 0002 	mvn.w	r0, #2
}
1000eb2a:	bd38      	pop	{r3, r4, r5, pc}
        if (!(MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_ISO_EN)) {
1000eb2c:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000eb30:	68a1      	ldr	r1, [r4, #8]
1000eb32:	f411 2180 	ands.w	r1, r1, #262144	@ 0x40000
1000eb36:	d046      	beq.n	1000ebc6 <MXC_SYS_Clock_Select+0xf6>
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL,
1000eb38:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000eb3c:	6893      	ldr	r3, [r2, #8]
1000eb3e:	f423 6360 	bic.w	r3, r3, #3584	@ 0xe00
1000eb42:	6093      	str	r3, [r2, #8]
        break;
1000eb44:	e7da      	b.n	1000eafc <MXC_SYS_Clock_Select+0x2c>
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL,
1000eb46:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000eb4a:	6893      	ldr	r3, [r2, #8]
1000eb4c:	f423 6360 	bic.w	r3, r3, #3584	@ 0xe00
1000eb50:	f443 63c0 	orr.w	r3, r3, #1536	@ 0x600
1000eb54:	6093      	str	r3, [r2, #8]
        break;
1000eb56:	e7d1      	b.n	1000eafc <MXC_SYS_Clock_Select+0x2c>
        if (!(MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_IPO_EN)) {
1000eb58:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000eb5c:	68a1      	ldr	r1, [r4, #8]
1000eb5e:	f411 2100 	ands.w	r1, r1, #524288	@ 0x80000
1000eb62:	d069      	beq.n	1000ec38 <MXC_SYS_Clock_Select+0x168>
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL,
1000eb64:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000eb68:	6893      	ldr	r3, [r2, #8]
1000eb6a:	f423 6360 	bic.w	r3, r3, #3584	@ 0xe00
1000eb6e:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
1000eb72:	6093      	str	r3, [r2, #8]
        break;
1000eb74:	e7c2      	b.n	1000eafc <MXC_SYS_Clock_Select+0x2c>
        if (!(MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_IBRO_EN)) {
1000eb76:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000eb7a:	68a1      	ldr	r1, [r4, #8]
1000eb7c:	f411 1180 	ands.w	r1, r1, #1048576	@ 0x100000
1000eb80:	d047      	beq.n	1000ec12 <MXC_SYS_Clock_Select+0x142>
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL,
1000eb82:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000eb86:	6893      	ldr	r3, [r2, #8]
1000eb88:	f423 6360 	bic.w	r3, r3, #3584	@ 0xe00
1000eb8c:	f443 6320 	orr.w	r3, r3, #2560	@ 0xa00
1000eb90:	6093      	str	r3, [r2, #8]
        break;
1000eb92:	e7b3      	b.n	1000eafc <MXC_SYS_Clock_Select+0x2c>
        if (!(MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_ERTCO_EN)) {
1000eb94:	f04f 4480 	mov.w	r4, #1073741824	@ 0x40000000
1000eb98:	68a1      	ldr	r1, [r4, #8]
1000eb9a:	f411 3100 	ands.w	r1, r1, #131072	@ 0x20000
1000eb9e:	d025      	beq.n	1000ebec <MXC_SYS_Clock_Select+0x11c>
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL,
1000eba0:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
1000eba4:	6893      	ldr	r3, [r2, #8]
1000eba6:	f423 6360 	bic.w	r3, r3, #3584	@ 0xe00
1000ebaa:	f443 6340 	orr.w	r3, r3, #3072	@ 0xc00
1000ebae:	6093      	str	r3, [r2, #8]
        break;
1000ebb0:	e7a4      	b.n	1000eafc <MXC_SYS_Clock_Select+0x2c>
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL, current_clock);
1000ebb2:	68a3      	ldr	r3, [r4, #8]
    current_clock = MXC_GCR->clkctrl & MXC_F_GCR_CLKCTRL_SYSCLK_SEL;
1000ebb4:	f405 6560 	and.w	r5, r5, #3584	@ 0xe00
        MXC_SETFIELD(MXC_GCR->clkctrl, MXC_F_GCR_CLKCTRL_SYSCLK_SEL, current_clock);
1000ebb8:	f423 6360 	bic.w	r3, r3, #3584	@ 0xe00
1000ebbc:	432b      	orrs	r3, r5
1000ebbe:	60a3      	str	r3, [r4, #8]
                return E_TIME_OUT;
1000ebc0:	f06f 0009 	mvn.w	r0, #9
}
1000ebc4:	bd38      	pop	{r3, r4, r5, pc}
            MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ISO_EN;
1000ebc6:	68a3      	ldr	r3, [r4, #8]
1000ebc8:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
1000ebcc:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ebce:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ebd2:	f7ff fe17 	bl	1000e804 <MXC_DelayAsync>
1000ebd6:	e003      	b.n	1000ebe0 <MXC_SYS_Clock_Select+0x110>
    } while (MXC_DelayCheck() == E_BUSY);
1000ebd8:	f7ff fe32 	bl	1000e840 <MXC_DelayCheck>
1000ebdc:	3006      	adds	r0, #6
1000ebde:	d1ef      	bne.n	1000ebc0 <MXC_SYS_Clock_Select+0xf0>
        if (MXC_GCR->clkctrl & ready) {
1000ebe0:	68a3      	ldr	r3, [r4, #8]
1000ebe2:	0158      	lsls	r0, r3, #5
1000ebe4:	d5f8      	bpl.n	1000ebd8 <MXC_SYS_Clock_Select+0x108>
            MXC_DelayAbort();
1000ebe6:	f7ff fe63 	bl	1000e8b0 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ebea:	e7a5      	b.n	1000eb38 <MXC_SYS_Clock_Select+0x68>
            MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_ERTCO_EN;
1000ebec:	68a3      	ldr	r3, [r4, #8]
1000ebee:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
1000ebf2:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ebf4:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ebf8:	f7ff fe04 	bl	1000e804 <MXC_DelayAsync>
1000ebfc:	e003      	b.n	1000ec06 <MXC_SYS_Clock_Select+0x136>
    } while (MXC_DelayCheck() == E_BUSY);
1000ebfe:	f7ff fe1f 	bl	1000e840 <MXC_DelayCheck>
1000ec02:	3006      	adds	r0, #6
1000ec04:	d1dc      	bne.n	1000ebc0 <MXC_SYS_Clock_Select+0xf0>
        if (MXC_GCR->clkctrl & ready) {
1000ec06:	68a3      	ldr	r3, [r4, #8]
1000ec08:	019a      	lsls	r2, r3, #6
1000ec0a:	d5f8      	bpl.n	1000ebfe <MXC_SYS_Clock_Select+0x12e>
            MXC_DelayAbort();
1000ec0c:	f7ff fe50 	bl	1000e8b0 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ec10:	e7c6      	b.n	1000eba0 <MXC_SYS_Clock_Select+0xd0>
            MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IBRO_EN;
1000ec12:	68a3      	ldr	r3, [r4, #8]
1000ec14:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1000ec18:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ec1a:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ec1e:	f7ff fdf1 	bl	1000e804 <MXC_DelayAsync>
1000ec22:	e003      	b.n	1000ec2c <MXC_SYS_Clock_Select+0x15c>
    } while (MXC_DelayCheck() == E_BUSY);
1000ec24:	f7ff fe0c 	bl	1000e840 <MXC_DelayCheck>
1000ec28:	3006      	adds	r0, #6
1000ec2a:	d1c9      	bne.n	1000ebc0 <MXC_SYS_Clock_Select+0xf0>
        if (MXC_GCR->clkctrl & ready) {
1000ec2c:	68a3      	ldr	r3, [r4, #8]
1000ec2e:	00d9      	lsls	r1, r3, #3
1000ec30:	d5f8      	bpl.n	1000ec24 <MXC_SYS_Clock_Select+0x154>
            MXC_DelayAbort();
1000ec32:	f7ff fe3d 	bl	1000e8b0 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ec36:	e7a4      	b.n	1000eb82 <MXC_SYS_Clock_Select+0xb2>
            MXC_GCR->clkctrl |= MXC_F_GCR_CLKCTRL_IPO_EN;
1000ec38:	68a3      	ldr	r3, [r4, #8]
1000ec3a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
1000ec3e:	60a3      	str	r3, [r4, #8]
    MXC_DelayAsync(MXC_SYS_CLOCK_TIMEOUT, NULL);
1000ec40:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
1000ec44:	f7ff fdde 	bl	1000e804 <MXC_DelayAsync>
1000ec48:	e003      	b.n	1000ec52 <MXC_SYS_Clock_Select+0x182>
    } while (MXC_DelayCheck() == E_BUSY);
1000ec4a:	f7ff fdf9 	bl	1000e840 <MXC_DelayCheck>
1000ec4e:	3006      	adds	r0, #6
1000ec50:	d1b6      	bne.n	1000ebc0 <MXC_SYS_Clock_Select+0xf0>
        if (MXC_GCR->clkctrl & ready) {
1000ec52:	68a3      	ldr	r3, [r4, #8]
1000ec54:	011b      	lsls	r3, r3, #4
1000ec56:	d5f8      	bpl.n	1000ec4a <MXC_SYS_Clock_Select+0x17a>
            MXC_DelayAbort();
1000ec58:	f7ff fe2a 	bl	1000e8b0 <MXC_DelayAbort>
            return E_NO_ERROR;
1000ec5c:	e782      	b.n	1000eb64 <MXC_SYS_Clock_Select+0x94>
1000ec5e:	bf00      	nop
1000ec60:	1001705c 	.word	0x1001705c

1000ec64 <MXC_SYS_Reset_Periph>:

/* ************************************************************************** */
void MXC_SYS_Reset_Periph(mxc_sys_reset_t reset)
{
    /* The mxc_sys_reset_t enum uses enum values that are the offset by 32 and 64 for the rst register. */
    if (reset > 63) {
1000ec64:	283f      	cmp	r0, #63	@ 0x3f
1000ec66:	d909      	bls.n	1000ec7c <MXC_SYS_Reset_Periph+0x18>
        reset -= 64;
1000ec68:	3840      	subs	r0, #64	@ 0x40
        MXC_LPGCR->rst = (0x1 << reset);
1000ec6a:	490f      	ldr	r1, [pc, #60]	@ (1000eca8 <MXC_SYS_Reset_Periph+0x44>)
1000ec6c:	b2c0      	uxtb	r0, r0
1000ec6e:	2201      	movs	r2, #1
1000ec70:	4082      	lsls	r2, r0
1000ec72:	608a      	str	r2, [r1, #8]
        while (MXC_LPGCR->rst & (0x1 << reset)) {}
1000ec74:	688b      	ldr	r3, [r1, #8]
1000ec76:	421a      	tst	r2, r3
1000ec78:	d1fc      	bne.n	1000ec74 <MXC_SYS_Reset_Periph+0x10>
1000ec7a:	4770      	bx	lr
    } else if (reset > 31) {
1000ec7c:	281f      	cmp	r0, #31
1000ec7e:	d90a      	bls.n	1000ec96 <MXC_SYS_Reset_Periph+0x32>
        reset -= 32;
1000ec80:	3820      	subs	r0, #32
        MXC_GCR->rst1 = (0x1 << reset);
1000ec82:	b2c0      	uxtb	r0, r0
1000ec84:	2201      	movs	r2, #1
1000ec86:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000ec8a:	4082      	lsls	r2, r0
1000ec8c:	644a      	str	r2, [r1, #68]	@ 0x44
        while (MXC_GCR->rst1 & (0x1 << reset)) {}
1000ec8e:	6c4b      	ldr	r3, [r1, #68]	@ 0x44
1000ec90:	421a      	tst	r2, r3
1000ec92:	d1fc      	bne.n	1000ec8e <MXC_SYS_Reset_Periph+0x2a>
1000ec94:	4770      	bx	lr
    } else {
        MXC_GCR->rst0 = (0x1 << reset);
1000ec96:	2201      	movs	r2, #1
1000ec98:	f04f 4180 	mov.w	r1, #1073741824	@ 0x40000000
1000ec9c:	4082      	lsls	r2, r0
1000ec9e:	604a      	str	r2, [r1, #4]
        while (MXC_GCR->rst0 & (0x1 << reset)) {}
1000eca0:	684b      	ldr	r3, [r1, #4]
1000eca2:	421a      	tst	r2, r3
1000eca4:	d1fc      	bne.n	1000eca0 <MXC_SYS_Reset_Periph+0x3c>
    }
}
1000eca6:	4770      	bx	lr
1000eca8:	40080000 	.word	0x40080000

1000ecac <MXC_GPIO_Init>:
/* **** Globals **** */

/* **** Functions **** */
int MXC_GPIO_Init(uint32_t portmask)
{
    if (portmask & 0x1) {
1000ecac:	07c1      	lsls	r1, r0, #31
{
1000ecae:	b510      	push	{r4, lr}
1000ecb0:	4604      	mov	r4, r0
    if (portmask & 0x1) {
1000ecb2:	d408      	bmi.n	1000ecc6 <MXC_GPIO_Init+0x1a>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
    }

    if (portmask & 0x2) {
1000ecb4:	07a2      	lsls	r2, r4, #30
1000ecb6:	d40b      	bmi.n	1000ecd0 <MXC_GPIO_Init+0x24>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
    }

    if (portmask & 0x4) {
1000ecb8:	0763      	lsls	r3, r4, #29
1000ecba:	d40e      	bmi.n	1000ecda <MXC_GPIO_Init+0x2e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
    }

    return MXC_GPIO_Common_Init(portmask);
1000ecbc:	4620      	mov	r0, r4
}
1000ecbe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000ecc2:	f001 b825 	b.w	1000fd10 <MXC_GPIO_Common_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO0);
1000ecc6:	2000      	movs	r0, #0
1000ecc8:	f7ff fe66 	bl	1000e998 <MXC_SYS_ClockEnable>
    if (portmask & 0x2) {
1000eccc:	07a2      	lsls	r2, r4, #30
1000ecce:	d5f3      	bpl.n	1000ecb8 <MXC_GPIO_Init+0xc>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO1);
1000ecd0:	2001      	movs	r0, #1
1000ecd2:	f7ff fe61 	bl	1000e998 <MXC_SYS_ClockEnable>
    if (portmask & 0x4) {
1000ecd6:	0763      	lsls	r3, r4, #29
1000ecd8:	d5f0      	bpl.n	1000ecbc <MXC_GPIO_Init+0x10>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_GPIO2);
1000ecda:	2040      	movs	r0, #64	@ 0x40
1000ecdc:	f7ff fe5c 	bl	1000e998 <MXC_SYS_ClockEnable>
    return MXC_GPIO_Common_Init(portmask);
1000ece0:	4620      	mov	r0, r4
}
1000ece2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_GPIO_Common_Init(portmask);
1000ece6:	f001 b813 	b.w	1000fd10 <MXC_GPIO_Common_Init>
1000ecea:	bf00      	nop

1000ecec <MXC_GPIO_Config>:

    return E_NO_ERROR;
}

int MXC_GPIO_Config(const mxc_gpio_cfg_t *cfg)
{
1000ecec:	b570      	push	{r4, r5, r6, lr}
    int port, error;
    mxc_gpio_regs_t *gpio = cfg->port;

    port = MXC_GPIO_GET_IDX(cfg->port);
1000ecee:	4b7f      	ldr	r3, [pc, #508]	@ (1000eeec <MXC_GPIO_Config+0x200>)
    mxc_gpio_regs_t *gpio = cfg->port;
1000ecf0:	6805      	ldr	r5, [r0, #0]
    port = MXC_GPIO_GET_IDX(cfg->port);
1000ecf2:	429d      	cmp	r5, r3
{
1000ecf4:	4604      	mov	r4, r0
    port = MXC_GPIO_GET_IDX(cfg->port);
1000ecf6:	d037      	beq.n	1000ed68 <MXC_GPIO_Config+0x7c>
1000ecf8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000ecfc:	429d      	cmp	r5, r3
1000ecfe:	d020      	beq.n	1000ed42 <MXC_GPIO_Config+0x56>
1000ed00:	f503 23ee 	add.w	r3, r3, #487424	@ 0x77000
1000ed04:	f503 6380 	add.w	r3, r3, #1024	@ 0x400
1000ed08:	429d      	cmp	r5, r3
1000ed0a:	d07f      	beq.n	1000ee0c <MXC_GPIO_Config+0x120>
1000ed0c:	4878      	ldr	r0, [pc, #480]	@ (1000eef0 <MXC_GPIO_Config+0x204>)
1000ed0e:	1a28      	subs	r0, r5, r0
1000ed10:	fab0 f080 	clz	r0, r0
1000ed14:	0940      	lsrs	r0, r0, #5
1000ed16:	00c0      	lsls	r0, r0, #3

    MXC_GPIO_Init(1 << port);
1000ed18:	f7ff ffc8 	bl	1000ecac <MXC_GPIO_Init>

    if (cfg->port == MXC_GPIO3) {
1000ed1c:	4b74      	ldr	r3, [pc, #464]	@ (1000eef0 <MXC_GPIO_Config+0x204>)
1000ed1e:	6822      	ldr	r2, [r4, #0]
1000ed20:	429a      	cmp	r2, r3
1000ed22:	d015      	beq.n	1000ed50 <MXC_GPIO_Config+0x64>
        default:
            return E_NOT_SUPPORTED;
        }
    } else {
        // Configure alternate function
        error = MXC_GPIO_RevA_SetAF((mxc_gpio_reva_regs_t *)gpio, cfg->func, cfg->mask);
1000ed24:	6862      	ldr	r2, [r4, #4]
1000ed26:	7a21      	ldrb	r1, [r4, #8]
1000ed28:	4628      	mov	r0, r5
1000ed2a:	f000 f94b 	bl	1000efc4 <MXC_GPIO_RevA_SetAF>
        if (error != E_NO_ERROR) {
1000ed2e:	b9d0      	cbnz	r0, 1000ed66 <MXC_GPIO_Config+0x7a>
            return error;
        }

        // Configure the pad
        switch (cfg->pad) {
1000ed30:	7a63      	ldrb	r3, [r4, #9]
1000ed32:	2b04      	cmp	r3, #4
1000ed34:	f200 80d7 	bhi.w	1000eee6 <MXC_GPIO_Config+0x1fa>
1000ed38:	e8df f003 	tbb	[pc, r3]
1000ed3c:	2f3e4c5a 	.word	0x2f3e4c5a
1000ed40:	18          	.byte	0x18
1000ed41:	00          	.byte	0x00
1000ed42:	2002      	movs	r0, #2
    MXC_GPIO_Init(1 << port);
1000ed44:	f7ff ffb2 	bl	1000ecac <MXC_GPIO_Init>
    if (cfg->port == MXC_GPIO3) {
1000ed48:	4b69      	ldr	r3, [pc, #420]	@ (1000eef0 <MXC_GPIO_Config+0x204>)
1000ed4a:	6822      	ldr	r2, [r4, #0]
1000ed4c:	429a      	cmp	r2, r3
1000ed4e:	d1e9      	bne.n	1000ed24 <MXC_GPIO_Config+0x38>
        switch (cfg->func) {
1000ed50:	7a23      	ldrb	r3, [r4, #8]
1000ed52:	2b01      	cmp	r3, #1
1000ed54:	f000 80bb 	beq.w	1000eece <MXC_GPIO_Config+0x1e2>
1000ed58:	2b02      	cmp	r3, #2
1000ed5a:	f000 80a5 	beq.w	1000eea8 <MXC_GPIO_Config+0x1bc>
1000ed5e:	2b00      	cmp	r3, #0
1000ed60:	d056      	beq.n	1000ee10 <MXC_GPIO_Config+0x124>
            return E_NOT_SUPPORTED;
1000ed62:	f06f 0010 	mvn.w	r0, #16
        }
    }

    // Configure the vssel
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
}
1000ed66:	bd70      	pop	{r4, r5, r6, pc}
1000ed68:	2001      	movs	r0, #1
1000ed6a:	e7d5      	b.n	1000ed18 <MXC_GPIO_Config+0x2c>
            gpio->padctrl0 &= ~cfg->mask;
1000ed6c:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000ed6e:	6862      	ldr	r2, [r4, #4]
1000ed70:	ea23 0302 	bic.w	r3, r3, r2
1000ed74:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000ed76:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000ed78:	4313      	orrs	r3, r2
1000ed7a:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000ed7c:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000ed80:	ea23 0302 	bic.w	r3, r3, r2
1000ed84:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
}

/* ************************************************************************** */
int MXC_GPIO_SetVSSEL(mxc_gpio_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    if (port == MXC_GPIO3) {
1000ed88:	4b59      	ldr	r3, [pc, #356]	@ (1000eef0 <MXC_GPIO_Config+0x204>)
    return MXC_GPIO_SetVSSEL(gpio, cfg->vssel, cfg->mask);
1000ed8a:	7aa1      	ldrb	r1, [r4, #10]
    if (port == MXC_GPIO3) {
1000ed8c:	429d      	cmp	r5, r3
1000ed8e:	d039      	beq.n	1000ee04 <MXC_GPIO_Config+0x118>
        }

        return E_NO_ERROR;
    }

    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000ed90:	4628      	mov	r0, r5
}
1000ed92:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_GPIO_RevA_SetVSSEL((mxc_gpio_reva_regs_t *)port, vssel, mask);
1000ed96:	f000 b8ff 	b.w	1000ef98 <MXC_GPIO_RevA_SetVSSEL>
            gpio->padctrl0 |= cfg->mask;
1000ed9a:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000ed9c:	6862      	ldr	r2, [r4, #4]
1000ed9e:	4313      	orrs	r3, r2
1000eda0:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000eda2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000eda4:	ea23 0302 	bic.w	r3, r3, r2
1000eda8:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps &= ~cfg->mask;
1000edaa:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000edae:	ea23 0302 	bic.w	r3, r3, r2
1000edb2:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000edb6:	e7e7      	b.n	1000ed88 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000edb8:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000edba:	6862      	ldr	r2, [r4, #4]
1000edbc:	ea23 0302 	bic.w	r3, r3, r2
1000edc0:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 |= cfg->mask;
1000edc2:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000edc4:	4313      	orrs	r3, r2
1000edc6:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000edc8:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000edcc:	4313      	orrs	r3, r2
1000edce:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000edd2:	e7d9      	b.n	1000ed88 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 |= cfg->mask;
1000edd4:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000edd6:	6862      	ldr	r2, [r4, #4]
1000edd8:	4313      	orrs	r3, r2
1000edda:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000eddc:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000edde:	ea23 0302 	bic.w	r3, r3, r2
1000ede2:	666b      	str	r3, [r5, #100]	@ 0x64
            gpio->ps |= cfg->mask;
1000ede4:	f8d5 30b8 	ldr.w	r3, [r5, #184]	@ 0xb8
1000ede8:	4313      	orrs	r3, r2
1000edea:	f8c5 30b8 	str.w	r3, [r5, #184]	@ 0xb8
            break;
1000edee:	e7cb      	b.n	1000ed88 <MXC_GPIO_Config+0x9c>
            gpio->padctrl0 &= ~cfg->mask;
1000edf0:	6e2b      	ldr	r3, [r5, #96]	@ 0x60
1000edf2:	6862      	ldr	r2, [r4, #4]
1000edf4:	ea23 0302 	bic.w	r3, r3, r2
1000edf8:	662b      	str	r3, [r5, #96]	@ 0x60
            gpio->padctrl1 &= ~cfg->mask;
1000edfa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
1000edfc:	ea23 0302 	bic.w	r3, r3, r2
1000ee00:	666b      	str	r3, [r5, #100]	@ 0x64
            break;
1000ee02:	e7c1      	b.n	1000ed88 <MXC_GPIO_Config+0x9c>
        if (vssel == MXC_GPIO_VSSEL_VDDIO) {
1000ee04:	2900      	cmp	r1, #0
1000ee06:	d0ac      	beq.n	1000ed62 <MXC_GPIO_Config+0x76>
        return E_NO_ERROR;
1000ee08:	2000      	movs	r0, #0
}
1000ee0a:	bd70      	pop	{r4, r5, r6, pc}
1000ee0c:	2004      	movs	r0, #4
1000ee0e:	e783      	b.n	1000ed18 <MXC_GPIO_Config+0x2c>
            MXC_MCR->gpio3_ctrl &= ~(P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask));
1000ee10:	6863      	ldr	r3, [r4, #4]
1000ee12:	4938      	ldr	r1, [pc, #224]	@ (1000eef4 <MXC_GPIO_Config+0x208>)
1000ee14:	0058      	lsls	r0, r3, #1
1000ee16:	011a      	lsls	r2, r3, #4
1000ee18:	6a0e      	ldr	r6, [r1, #32]
1000ee1a:	f000 0002 	and.w	r0, r0, #2
1000ee1e:	f002 0220 	and.w	r2, r2, #32
1000ee22:	4302      	orrs	r2, r0
1000ee24:	ea26 0202 	bic.w	r2, r6, r2
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000ee28:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen &= ~(SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask));
1000ee2a:	688a      	ldr	r2, [r1, #8]
1000ee2c:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000ee30:	4303      	orrs	r3, r0
1000ee32:	ea22 0303 	bic.w	r3, r2, r3
1000ee36:	608b      	str	r3, [r1, #8]
        switch (cfg->pad) {
1000ee38:	7a63      	ldrb	r3, [r4, #9]
1000ee3a:	2b04      	cmp	r3, #4
1000ee3c:	d891      	bhi.n	1000ed62 <MXC_GPIO_Config+0x76>
1000ee3e:	e8df f003 	tbb	[pc, r3]
1000ee42:	1b26      	.short	0x1b26
1000ee44:	1b03      	.short	0x1b03
1000ee46:	03          	.byte	0x03
1000ee47:	00          	.byte	0x00
            MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask));
1000ee48:	6862      	ldr	r2, [r4, #4]
1000ee4a:	492a      	ldr	r1, [pc, #168]	@ (1000eef4 <MXC_GPIO_Config+0x208>)
1000ee4c:	00d3      	lsls	r3, r2, #3
1000ee4e:	6a08      	ldr	r0, [r1, #32]
1000ee50:	f003 0310 	and.w	r3, r3, #16
1000ee54:	f002 0601 	and.w	r6, r2, #1
1000ee58:	4333      	orrs	r3, r6
1000ee5a:	ea20 0303 	bic.w	r3, r0, r3
1000ee5e:	620b      	str	r3, [r1, #32]
            MXC_MCR->gpio3_ctrl &= ~(P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask));
1000ee60:	0156      	lsls	r6, r2, #5
1000ee62:	0093      	lsls	r3, r2, #2
1000ee64:	6a08      	ldr	r0, [r1, #32]
1000ee66:	f003 0304 	and.w	r3, r3, #4
1000ee6a:	f006 0640 	and.w	r6, r6, #64	@ 0x40
1000ee6e:	4333      	orrs	r3, r6
1000ee70:	ea20 0303 	bic.w	r3, r0, r3
1000ee74:	620b      	str	r3, [r1, #32]
            break;
1000ee76:	e787      	b.n	1000ed88 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(cfg->mask) | P31_DATA_OUT(cfg->mask);
1000ee78:	491e      	ldr	r1, [pc, #120]	@ (1000eef4 <MXC_GPIO_Config+0x208>)
1000ee7a:	6862      	ldr	r2, [r4, #4]
1000ee7c:	6a0e      	ldr	r6, [r1, #32]
1000ee7e:	00d3      	lsls	r3, r2, #3
1000ee80:	f002 0001 	and.w	r0, r2, #1
1000ee84:	f003 0310 	and.w	r3, r3, #16
1000ee88:	4330      	orrs	r0, r6
1000ee8a:	4303      	orrs	r3, r0
1000ee8c:	e7e7      	b.n	1000ee5e <MXC_GPIO_Config+0x172>
            MXC_MCR->gpio3_ctrl |= P30_PULL_DIS(cfg->mask) | P31_PULL_DIS(cfg->mask);
1000ee8e:	6862      	ldr	r2, [r4, #4]
1000ee90:	4818      	ldr	r0, [pc, #96]	@ (1000eef4 <MXC_GPIO_Config+0x208>)
1000ee92:	0093      	lsls	r3, r2, #2
1000ee94:	0151      	lsls	r1, r2, #5
1000ee96:	6a06      	ldr	r6, [r0, #32]
1000ee98:	f003 0304 	and.w	r3, r3, #4
1000ee9c:	f001 0140 	and.w	r1, r1, #64	@ 0x40
1000eea0:	430b      	orrs	r3, r1
1000eea2:	4333      	orrs	r3, r6
1000eea4:	6203      	str	r3, [r0, #32]
            break;
1000eea6:	e76f      	b.n	1000ed88 <MXC_GPIO_Config+0x9c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000eea8:	6863      	ldr	r3, [r4, #4]
1000eeaa:	4912      	ldr	r1, [pc, #72]	@ (1000eef4 <MXC_GPIO_Config+0x208>)
1000eeac:	0058      	lsls	r0, r3, #1
1000eeae:	011a      	lsls	r2, r3, #4
1000eeb0:	6a0e      	ldr	r6, [r1, #32]
1000eeb2:	f000 0002 	and.w	r0, r0, #2
1000eeb6:	f002 0220 	and.w	r2, r2, #32
1000eeba:	4302      	orrs	r2, r0
1000eebc:	4332      	orrs	r2, r6
1000eebe:	620a      	str	r2, [r1, #32]
            MXC_MCR->outen |= SQWAVE_OUT_EN(cfg->mask) | PDOWN_OUT_EN(cfg->mask);
1000eec0:	688a      	ldr	r2, [r1, #8]
1000eec2:	f3c3 0340 	ubfx	r3, r3, #1, #1
1000eec6:	4303      	orrs	r3, r0
1000eec8:	4313      	orrs	r3, r2
1000eeca:	608b      	str	r3, [r1, #8]
            break;
1000eecc:	e7b4      	b.n	1000ee38 <MXC_GPIO_Config+0x14c>
            MXC_MCR->gpio3_ctrl |= P30_OUT_EN(cfg->mask) | P31_OUT_EN(cfg->mask);
1000eece:	6863      	ldr	r3, [r4, #4]
1000eed0:	4908      	ldr	r1, [pc, #32]	@ (1000eef4 <MXC_GPIO_Config+0x208>)
1000eed2:	0058      	lsls	r0, r3, #1
1000eed4:	011a      	lsls	r2, r3, #4
1000eed6:	6a0e      	ldr	r6, [r1, #32]
1000eed8:	f000 0002 	and.w	r0, r0, #2
1000eedc:	f002 0220 	and.w	r2, r2, #32
1000eee0:	4302      	orrs	r2, r0
1000eee2:	4332      	orrs	r2, r6
1000eee4:	e7a0      	b.n	1000ee28 <MXC_GPIO_Config+0x13c>
        switch (cfg->pad) {
1000eee6:	f06f 0002 	mvn.w	r0, #2
}
1000eeea:	bd70      	pop	{r4, r5, r6, pc}
1000eeec:	40008000 	.word	0x40008000
1000eef0:	40080600 	.word	0x40080600
1000eef4:	40006c00 	.word	0x40006c00

1000eef8 <MXC_GPIO_OutSet>:
    if (port == MXC_GPIO3) {
1000eef8:	4a08      	ldr	r2, [pc, #32]	@ (1000ef1c <MXC_GPIO_OutSet+0x24>)
1000eefa:	4290      	cmp	r0, r2
1000eefc:	d001      	beq.n	1000ef02 <MXC_GPIO_OutSet+0xa>
    MXC_GPIO_RevA_OutSet((mxc_gpio_reva_regs_t *)port, mask);
1000eefe:	f000 b843 	b.w	1000ef88 <MXC_GPIO_RevA_OutSet>
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000ef02:	4807      	ldr	r0, [pc, #28]	@ (1000ef20 <MXC_GPIO_OutSet+0x28>)
{
1000ef04:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000ef06:	6a04      	ldr	r4, [r0, #32]
1000ef08:	00ca      	lsls	r2, r1, #3
1000ef0a:	f001 0101 	and.w	r1, r1, #1
1000ef0e:	4321      	orrs	r1, r4
1000ef10:	f002 0310 	and.w	r3, r2, #16
1000ef14:	430b      	orrs	r3, r1
}
1000ef16:	bc10      	pop	{r4}
        MXC_MCR->gpio3_ctrl |= P30_DATA_OUT(mask) | P31_DATA_OUT(mask);
1000ef18:	6203      	str	r3, [r0, #32]
}
1000ef1a:	4770      	bx	lr
1000ef1c:	40080600 	.word	0x40080600
1000ef20:	40006c00 	.word	0x40006c00

1000ef24 <MXC_GPIO_OutClr>:
    if (port == MXC_GPIO3) {
1000ef24:	4a09      	ldr	r2, [pc, #36]	@ (1000ef4c <MXC_GPIO_OutClr+0x28>)
1000ef26:	4290      	cmp	r0, r2
1000ef28:	d001      	beq.n	1000ef2e <MXC_GPIO_OutClr+0xa>
    MXC_GPIO_RevA_OutClr((mxc_gpio_reva_regs_t *)port, mask);
1000ef2a:	f000 b82f 	b.w	1000ef8c <MXC_GPIO_RevA_OutClr>
{
1000ef2e:	b410      	push	{r4}
        MXC_MCR->gpio3_ctrl &= ~(P30_DATA_OUT(mask) | P31_DATA_OUT(mask));
1000ef30:	4c07      	ldr	r4, [pc, #28]	@ (1000ef50 <MXC_GPIO_OutClr+0x2c>)
1000ef32:	00ca      	lsls	r2, r1, #3
1000ef34:	6a20      	ldr	r0, [r4, #32]
1000ef36:	f002 0210 	and.w	r2, r2, #16
1000ef3a:	f001 0101 	and.w	r1, r1, #1
1000ef3e:	ea42 0301 	orr.w	r3, r2, r1
1000ef42:	ea20 0303 	bic.w	r3, r0, r3
1000ef46:	6223      	str	r3, [r4, #32]
}
1000ef48:	bc10      	pop	{r4}
1000ef4a:	4770      	bx	lr
1000ef4c:	40080600 	.word	0x40080600
1000ef50:	40006c00 	.word	0x40006c00

1000ef54 <MXC_GPIO_Handler>:
    MXC_GPIO_Common_Handler(port);
1000ef54:	f000 beee 	b.w	1000fd34 <MXC_GPIO_Common_Handler>

1000ef58 <MXC_GPIO_ClearFlags>:
    if (port == MXC_GPIO3) {
1000ef58:	4a03      	ldr	r2, [pc, #12]	@ (1000ef68 <MXC_GPIO_ClearFlags+0x10>)
1000ef5a:	4290      	cmp	r0, r2
1000ef5c:	d001      	beq.n	1000ef62 <MXC_GPIO_ClearFlags+0xa>
    MXC_GPIO_RevA_ClearFlags((mxc_gpio_reva_regs_t *)port, flags);
1000ef5e:	f000 b817 	b.w	1000ef90 <MXC_GPIO_RevA_ClearFlags>
        MXC_PWRSEQ->lpwkst3 = flags;
1000ef62:	4a02      	ldr	r2, [pc, #8]	@ (1000ef6c <MXC_GPIO_ClearFlags+0x14>)
1000ef64:	61d1      	str	r1, [r2, #28]
}
1000ef66:	4770      	bx	lr
1000ef68:	40080600 	.word	0x40080600
1000ef6c:	40006800 	.word	0x40006800

1000ef70 <MXC_GPIO_GetFlags>:
    if (port == MXC_GPIO3) {
1000ef70:	4b03      	ldr	r3, [pc, #12]	@ (1000ef80 <MXC_GPIO_GetFlags+0x10>)
1000ef72:	4298      	cmp	r0, r3
1000ef74:	d001      	beq.n	1000ef7a <MXC_GPIO_GetFlags+0xa>
    return MXC_GPIO_RevA_GetFlags((mxc_gpio_reva_regs_t *)port);
1000ef76:	f000 b80d 	b.w	1000ef94 <MXC_GPIO_RevA_GetFlags>
        return MXC_PWRSEQ->lpwkst3;
1000ef7a:	4b02      	ldr	r3, [pc, #8]	@ (1000ef84 <MXC_GPIO_GetFlags+0x14>)
1000ef7c:	69d8      	ldr	r0, [r3, #28]
}
1000ef7e:	4770      	bx	lr
1000ef80:	40080600 	.word	0x40080600
1000ef84:	40006800 	.word	0x40006800

1000ef88 <MXC_GPIO_RevA_OutSet>:
    return (port->in & mask);
}

void MXC_GPIO_RevA_OutSet(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_set = mask;
1000ef88:	61c1      	str	r1, [r0, #28]
}
1000ef8a:	4770      	bx	lr

1000ef8c <MXC_GPIO_RevA_OutClr>:

void MXC_GPIO_RevA_OutClr(mxc_gpio_reva_regs_t *port, uint32_t mask)
{
    port->out_clr = mask;
1000ef8c:	6201      	str	r1, [r0, #32]
}
1000ef8e:	4770      	bx	lr

1000ef90 <MXC_GPIO_RevA_ClearFlags>:
    port->inten_clr = mask;
}

void MXC_GPIO_RevA_ClearFlags(mxc_gpio_reva_regs_t *port, uint32_t flags)
{
    port->intfl_clr = flags;
1000ef90:	6481      	str	r1, [r0, #72]	@ 0x48
}
1000ef92:	4770      	bx	lr

1000ef94 <MXC_GPIO_RevA_GetFlags>:

uint32_t MXC_GPIO_RevA_GetFlags(mxc_gpio_reva_regs_t *port)
{
    return port->intfl;
1000ef94:	6c00      	ldr	r0, [r0, #64]	@ 0x40
}
1000ef96:	4770      	bx	lr

1000ef98 <MXC_GPIO_RevA_SetVSSEL>:

int MXC_GPIO_RevA_SetVSSEL(mxc_gpio_reva_regs_t *port, mxc_gpio_vssel_t vssel, uint32_t mask)
{
    // Configure the vssel
    switch (vssel) {
1000ef98:	b159      	cbz	r1, 1000efb2 <MXC_GPIO_RevA_SetVSSEL+0x1a>
1000ef9a:	2901      	cmp	r1, #1
1000ef9c:	d106      	bne.n	1000efac <MXC_GPIO_RevA_SetVSSEL+0x14>
    case MXC_GPIO_VSSEL_VDDIO:
        port->vssel &= ~mask;
        break;

    case MXC_GPIO_VSSEL_VDDIOH:
        port->vssel |= mask;
1000ef9e:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000efa2:	4313      	orrs	r3, r2
1000efa4:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000efa8:	2000      	movs	r0, #0
}
1000efaa:	4770      	bx	lr
    switch (vssel) {
1000efac:	f06f 0002 	mvn.w	r0, #2
1000efb0:	4770      	bx	lr
        port->vssel &= ~mask;
1000efb2:	f8d0 30c0 	ldr.w	r3, [r0, #192]	@ 0xc0
1000efb6:	ea23 0302 	bic.w	r3, r3, r2
1000efba:	f8c0 30c0 	str.w	r3, [r0, #192]	@ 0xc0
    return E_NO_ERROR;
1000efbe:	2000      	movs	r0, #0
}
1000efc0:	4770      	bx	lr
1000efc2:	bf00      	nop

1000efc4 <MXC_GPIO_RevA_SetAF>:

int MXC_GPIO_RevA_SetAF(mxc_gpio_reva_regs_t *port, mxc_gpio_func_t func, uint32_t mask)
{
    //This is required for new devices going forward.
    port->inen |= mask;
1000efc4:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000efc6:	4313      	orrs	r3, r2
1000efc8:	6303      	str	r3, [r0, #48]	@ 0x30

    //Switch to I/O mode first
    port->en0_set = mask;
1000efca:	6042      	str	r2, [r0, #4]

    switch (func) {
1000efcc:	2905      	cmp	r1, #5
1000efce:	d82c      	bhi.n	1000f02a <MXC_GPIO_RevA_SetAF+0x66>
1000efd0:	e8df f001 	tbb	[pc, r1]
1000efd4:	1f19120a 	.word	0x1f19120a
1000efd8:	0325      	.short	0x0325
        port->en1_clr = mask;
        port->en0_clr = mask;
        break;

    case MXC_GPIO_FUNC_ALT4:
        port->en3_clr = mask;
1000efda:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000efde:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_set = mask;
1000efe0:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000efe2:	6082      	str	r2, [r0, #8]
#endif
    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000efe4:	2000      	movs	r0, #0
1000efe6:	4770      	bx	lr
        port->outen_clr = mask;
1000efe8:	6142      	str	r2, [r0, #20]
        port->en0_set = mask;
1000efea:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000efec:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000efee:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000eff0:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
    return E_NO_ERROR;
1000eff4:	2000      	movs	r0, #0
1000eff6:	4770      	bx	lr
        port->outen_set = mask;
1000eff8:	6102      	str	r2, [r0, #16]
        port->en0_set = mask;
1000effa:	6042      	str	r2, [r0, #4]
        port->en1_clr = mask;
1000effc:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en2_clr = mask;
1000effe:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en3_clr = mask;
1000f000:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        break;
1000f004:	e7ee      	b.n	1000efe4 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f006:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000f00a:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_clr = mask;
1000f00c:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000f00e:	6082      	str	r2, [r0, #8]
        break;
1000f010:	e7e8      	b.n	1000efe4 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f012:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_clr = mask;
1000f016:	67c2      	str	r2, [r0, #124]	@ 0x7c
        port->en1_set = mask;
1000f018:	66c2      	str	r2, [r0, #108]	@ 0x6c
        port->en0_clr = mask;
1000f01a:	6082      	str	r2, [r0, #8]
        break;
1000f01c:	e7e2      	b.n	1000efe4 <MXC_GPIO_RevA_SetAF+0x20>
        port->en3_clr = mask;
1000f01e:	f8c0 2088 	str.w	r2, [r0, #136]	@ 0x88
        port->en2_set = mask;
1000f022:	6782      	str	r2, [r0, #120]	@ 0x78
        port->en1_clr = mask;
1000f024:	6702      	str	r2, [r0, #112]	@ 0x70
        port->en0_clr = mask;
1000f026:	6082      	str	r2, [r0, #8]
        break;
1000f028:	e7dc      	b.n	1000efe4 <MXC_GPIO_RevA_SetAF+0x20>
    switch (func) {
1000f02a:	f06f 0002 	mvn.w	r0, #2
}
1000f02e:	4770      	bx	lr

1000f030 <MXC_I2C_SetSlaveAddr>:
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
}

int MXC_I2C_SetSlaveAddr(mxc_i2c_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    return MXC_I2C_RevA_SetSlaveAddr((mxc_i2c_reva_regs_t *)i2c, slaveAddr, idx);
1000f030:	f000 b8f6 	b.w	1000f220 <MXC_I2C_RevA_SetSlaveAddr>

1000f034 <MXC_I2C_Shutdown>:
}

int MXC_I2C_Shutdown(mxc_i2c_regs_t *i2c)
{
1000f034:	b508      	push	{r3, lr}
    // Configure GPIO for I2C
    if (i2c == MXC_I2C0) {
1000f036:	4b11      	ldr	r3, [pc, #68]	@ (1000f07c <MXC_I2C_Shutdown+0x48>)
1000f038:	4298      	cmp	r0, r3
1000f03a:	d00d      	beq.n	1000f058 <MXC_I2C_Shutdown+0x24>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
    } else if (i2c == MXC_I2C1) {
1000f03c:	4b10      	ldr	r3, [pc, #64]	@ (1000f080 <MXC_I2C_Shutdown+0x4c>)
1000f03e:	4298      	cmp	r0, r3
1000f040:	d011      	beq.n	1000f066 <MXC_I2C_Shutdown+0x32>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
    } else if (i2c == MXC_I2C2) {
1000f042:	4b10      	ldr	r3, [pc, #64]	@ (1000f084 <MXC_I2C_Shutdown+0x50>)
1000f044:	4298      	cmp	r0, r3
1000f046:	d115      	bne.n	1000f074 <MXC_I2C_Shutdown+0x40>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000f048:	2038      	movs	r0, #56	@ 0x38
1000f04a:	f7ff fc85 	bl	1000e958 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C2);
1000f04e:	2034      	movs	r0, #52	@ 0x34
1000f050:	f7ff fe08 	bl	1000ec64 <MXC_SYS_Reset_Periph>
    } else {
        return E_NO_DEVICE;
    }

    return E_NO_ERROR;
1000f054:	2000      	movs	r0, #0
}
1000f056:	bd08      	pop	{r3, pc}
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000f058:	200d      	movs	r0, #13
1000f05a:	f7ff fc7d 	bl	1000e958 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_I2C0);
1000f05e:	2010      	movs	r0, #16
1000f060:	f7ff fe00 	bl	1000ec64 <MXC_SYS_Reset_Periph>
1000f064:	e7f6      	b.n	1000f054 <MXC_I2C_Shutdown+0x20>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000f066:	201c      	movs	r0, #28
1000f068:	f7ff fc76 	bl	1000e958 <MXC_SYS_ClockDisable>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET1_I2C1);
1000f06c:	2020      	movs	r0, #32
1000f06e:	f7ff fdf9 	bl	1000ec64 <MXC_SYS_Reset_Periph>
1000f072:	e7ef      	b.n	1000f054 <MXC_I2C_Shutdown+0x20>
        return E_NO_DEVICE;
1000f074:	f06f 0001 	mvn.w	r0, #1
}
1000f078:	bd08      	pop	{r3, pc}
1000f07a:	bf00      	nop
1000f07c:	4001d000 	.word	0x4001d000
1000f080:	4001e000 	.word	0x4001e000
1000f084:	4001f000 	.word	0x4001f000

1000f088 <MXC_I2C_Init>:
    if (i2c == NULL) {
1000f088:	b3c0      	cbz	r0, 1000f0fc <MXC_I2C_Init+0x74>
{
1000f08a:	b570      	push	{r4, r5, r6, lr}
1000f08c:	4604      	mov	r4, r0
    MXC_I2C_Shutdown(i2c); // Clear everything out
1000f08e:	460d      	mov	r5, r1
1000f090:	4616      	mov	r6, r2
1000f092:	f7ff ffcf 	bl	1000f034 <MXC_I2C_Shutdown>
    if (i2c == MXC_I2C0) {
1000f096:	4b1b      	ldr	r3, [pc, #108]	@ (1000f104 <MXC_I2C_Init+0x7c>)
1000f098:	429c      	cmp	r4, r3
1000f09a:	d012      	beq.n	1000f0c2 <MXC_I2C_Init+0x3a>
    } else if (i2c == MXC_I2C1) {
1000f09c:	4b1a      	ldr	r3, [pc, #104]	@ (1000f108 <MXC_I2C_Init+0x80>)
1000f09e:	429c      	cmp	r4, r3
1000f0a0:	d01c      	beq.n	1000f0dc <MXC_I2C_Init+0x54>
    } else if (i2c == MXC_I2C2) {
1000f0a2:	4b1a      	ldr	r3, [pc, #104]	@ (1000f10c <MXC_I2C_Init+0x84>)
1000f0a4:	429c      	cmp	r4, r3
1000f0a6:	d126      	bne.n	1000f0f6 <MXC_I2C_Init+0x6e>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C2);
1000f0a8:	2038      	movs	r0, #56	@ 0x38
1000f0aa:	f7ff fc75 	bl	1000e998 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c2);
1000f0ae:	4818      	ldr	r0, [pc, #96]	@ (1000f110 <MXC_I2C_Init+0x88>)
1000f0b0:	f7ff fe1c 	bl	1000ecec <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f0b4:	4632      	mov	r2, r6
1000f0b6:	4629      	mov	r1, r5
1000f0b8:	4620      	mov	r0, r4
}
1000f0ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f0be:	f000 b849 	b.w	1000f154 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C0);
1000f0c2:	200d      	movs	r0, #13
1000f0c4:	f7ff fc68 	bl	1000e998 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c0);
1000f0c8:	4812      	ldr	r0, [pc, #72]	@ (1000f114 <MXC_I2C_Init+0x8c>)
1000f0ca:	f7ff fe0f 	bl	1000ecec <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f0ce:	4632      	mov	r2, r6
1000f0d0:	4629      	mov	r1, r5
1000f0d2:	4620      	mov	r0, r4
}
1000f0d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f0d8:	f000 b83c 	b.w	1000f154 <MXC_I2C_RevA_Init>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_I2C1);
1000f0dc:	201c      	movs	r0, #28
1000f0de:	f7ff fc5b 	bl	1000e998 <MXC_SYS_ClockEnable>
        MXC_GPIO_Config(&gpio_cfg_i2c1);
1000f0e2:	480d      	ldr	r0, [pc, #52]	@ (1000f118 <MXC_I2C_Init+0x90>)
1000f0e4:	f7ff fe02 	bl	1000ecec <MXC_GPIO_Config>
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f0e8:	4632      	mov	r2, r6
1000f0ea:	4629      	mov	r1, r5
1000f0ec:	4620      	mov	r0, r4
}
1000f0ee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_I2C_RevA_Init((mxc_i2c_reva_regs_t *)i2c, masterMode, slaveAddr);
1000f0f2:	f000 b82f 	b.w	1000f154 <MXC_I2C_RevA_Init>
        return E_NO_DEVICE;
1000f0f6:	f06f 0001 	mvn.w	r0, #1
}
1000f0fa:	bd70      	pop	{r4, r5, r6, pc}
        return E_NULL_PTR;
1000f0fc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f100:	4770      	bx	lr
1000f102:	bf00      	nop
1000f104:	4001d000 	.word	0x4001d000
1000f108:	4001e000 	.word	0x4001e000
1000f10c:	4001f000 	.word	0x4001f000
1000f110:	10017038 	.word	0x10017038
1000f114:	10017050 	.word	0x10017050
1000f118:	10017044 	.word	0x10017044

1000f11c <MXC_I2C_SetFrequency>:
    return E_NO_ERROR;
}

int MXC_I2C_SetFrequency(mxc_i2c_regs_t *i2c, unsigned int hz)
{
    return MXC_I2C_RevA_SetFrequency((mxc_i2c_reva_regs_t *)i2c, hz);
1000f11c:	f000 b89a 	b.w	1000f254 <MXC_I2C_RevA_SetFrequency>

1000f120 <MXC_I2C_GetFrequency>:
}

int MXC_I2C_GetFrequency(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_GetFrequency((mxc_i2c_reva_regs_t *)i2c);
1000f120:	f000 b8e8 	b.w	1000f2f4 <MXC_I2C_RevA_GetFrequency>

1000f124 <MXC_I2C_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_Start(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Start((mxc_i2c_reva_regs_t *)i2c);
1000f124:	f000 b8f6 	b.w	1000f314 <MXC_I2C_RevA_Start>

1000f128 <MXC_I2C_Stop>:
}

int MXC_I2C_Stop(mxc_i2c_regs_t *i2c)
{
    return MXC_I2C_RevA_Stop((mxc_i2c_reva_regs_t *)i2c);
1000f128:	f000 b908 	b.w	1000f33c <MXC_I2C_RevA_Stop>

1000f12c <MXC_I2C_ReadRXFIFO>:
    return MXC_I2C_RevA_Read((mxc_i2c_reva_regs_t *)i2c, bytes, len, ack);
}

int MXC_I2C_ReadRXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_ReadRXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000f12c:	f000 b914 	b.w	1000f358 <MXC_I2C_RevA_ReadRXFIFO>

1000f130 <MXC_I2C_WriteTXFIFO>:
    return MXC_I2C_RevA_GetRXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_WriteTXFIFO(mxc_i2c_regs_t *i2c, volatile unsigned char *bytes, unsigned int len)
{
    return MXC_I2C_RevA_WriteTXFIFO((mxc_i2c_reva_regs_t *)i2c, bytes, len);
1000f130:	f000 b930 	b.w	1000f394 <MXC_I2C_RevA_WriteTXFIFO>

1000f134 <MXC_I2C_ClearRXFIFO>:
    return MXC_I2C_RevA_GetTXFIFOAvailable((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_ClearRXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearRXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000f134:	f000 b946 	b.w	1000f3c4 <MXC_I2C_RevA_ClearRXFIFO>

1000f138 <MXC_I2C_ClearTXFIFO>:
}

void MXC_I2C_ClearTXFIFO(mxc_i2c_regs_t *i2c)
{
    MXC_I2C_RevA_ClearTXFIFO((mxc_i2c_reva_regs_t *)i2c);
1000f138:	f000 b94c 	b.w	1000f3d4 <MXC_I2C_RevA_ClearTXFIFO>

1000f13c <MXC_I2C_ClearFlags>:
    return MXC_I2C_RevA_GetFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
}

void MXC_I2C_ClearFlags(mxc_i2c_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    MXC_I2C_RevA_ClearFlags((mxc_i2c_reva_regs_t *)i2c, flags0, flags1);
1000f13c:	f000 b952 	b.w	1000f3e4 <MXC_I2C_RevA_ClearFlags>

1000f140 <MXC_I2C_SetTimeout>:
    MXC_I2C_RevA_DisableGeneralCall((mxc_i2c_reva_regs_t *)i2c);
}

void MXC_I2C_SetTimeout(mxc_i2c_regs_t *i2c, unsigned int timeout)
{
    MXC_I2C_RevA_SetTimeout((mxc_i2c_reva_regs_t *)i2c, timeout);
1000f140:	f000 b9c0 	b.w	1000f4c4 <MXC_I2C_RevA_SetTimeout>

1000f144 <MXC_I2C_Recover>:
    return MXC_I2C_RevA_GetTimeout((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_Recover(mxc_i2c_regs_t *i2c, unsigned int retries)
{
    return MXC_I2C_RevA_Recover((mxc_i2c_reva_regs_t *)i2c, retries);
1000f144:	f000 b952 	b.w	1000f3ec <MXC_I2C_RevA_Recover>

1000f148 <MXC_I2C_MasterTransaction>:
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_MasterTransaction(mxc_i2c_req_t *req)
{
    return MXC_I2C_RevA_MasterTransaction((mxc_i2c_reva_req_t *)req);
1000f148:	f000 b9c2 	b.w	1000f4d0 <MXC_I2C_RevA_MasterTransaction>

1000f14c <MXC_I2C_SetRXThreshold>:
        (mxc_i2c_reva_regs_t *)i2c, (mxc_i2c_reva_slave_handler_t)callback, interruptCheck);
}

int MXC_I2C_SetRXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetRXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000f14c:	f000 ba90 	b.w	1000f670 <MXC_I2C_RevA_SetRXThreshold>

1000f150 <MXC_I2C_SetTXThreshold>:
    return MXC_I2C_RevA_GetRXThreshold((mxc_i2c_reva_regs_t *)i2c);
}

int MXC_I2C_SetTXThreshold(mxc_i2c_regs_t *i2c, unsigned int numBytes)
{
    return MXC_I2C_RevA_SetTXThreshold((mxc_i2c_reva_regs_t *)i2c, numBytes);
1000f150:	f000 ba9e 	b.w	1000f690 <MXC_I2C_RevA_SetTXThreshold>

1000f154 <MXC_I2C_RevA_Init>:

/* ************************************************************************* */
/* Control/Configuration functions                                           */
/* ************************************************************************* */
int MXC_I2C_RevA_Init(mxc_i2c_reva_regs_t *i2c, int masterMode, unsigned int slaveAddr)
{
1000f154:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    int err;

    if (i2c == NULL) {
1000f156:	2800      	cmp	r0, #0
1000f158:	d057      	beq.n	1000f20a <MXC_I2C_RevA_Init+0xb6>
        return E_NULL_PTR;
    }

    if ((err = MXC_I2C_Recover((mxc_i2c_regs_t *)i2c, 16)) != E_NO_ERROR) {
1000f15a:	460f      	mov	r7, r1
1000f15c:	2110      	movs	r1, #16
1000f15e:	4615      	mov	r5, r2
1000f160:	4604      	mov	r4, r0
1000f162:	f7ff ffef 	bl	1000f144 <MXC_I2C_Recover>
1000f166:	4606      	mov	r6, r0
1000f168:	b108      	cbz	r0, 1000f16e <MXC_I2C_RevA_Init+0x1a>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
    }

    return E_NO_ERROR;
}
1000f16a:	4630      	mov	r0, r6
1000f16c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f16e:	6823      	ldr	r3, [r4, #0]
1000f170:	f043 0301 	orr.w	r3, r3, #1
1000f174:	6023      	str	r3, [r4, #0]
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
1000f176:	4620      	mov	r0, r4
1000f178:	f7ff ffdc 	bl	1000f134 <MXC_I2C_ClearRXFIFO>
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1000f17c:	4620      	mov	r0, r4
1000f17e:	f7ff ffdb 	bl	1000f138 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_SetTXThreshold((mxc_i2c_regs_t *)i2c, 2); // set TX threshold to 2 bytes
1000f182:	2102      	movs	r1, #2
1000f184:	4620      	mov	r0, r4
1000f186:	f7ff ffe3 	bl	1000f150 <MXC_I2C_SetTXThreshold>
    MXC_I2C_SetRXThreshold((mxc_i2c_regs_t *)i2c, 6); // set RX threshold to 6 bytes
1000f18a:	2106      	movs	r1, #6
1000f18c:	4620      	mov	r0, r4
1000f18e:	f7ff ffdd 	bl	1000f14c <MXC_I2C_SetRXThreshold>
    if (!masterMode) {
1000f192:	b1df      	cbz	r7, 1000f1cc <MXC_I2C_RevA_Init+0x78>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f194:	6823      	ldr	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f196:	4a1e      	ldr	r2, [pc, #120]	@ (1000f210 <MXC_I2C_RevA_Init+0xbc>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f198:	f043 0302 	orr.w	r3, r3, #2
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f19c:	4294      	cmp	r4, r2
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_MST_MODE;
1000f19e:	6023      	str	r3, [r4, #0]
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f1a0:	d02f      	beq.n	1000f202 <MXC_I2C_RevA_Init+0xae>
1000f1a2:	4b1c      	ldr	r3, [pc, #112]	@ (1000f214 <MXC_I2C_RevA_Init+0xc0>)
1000f1a4:	429c      	cmp	r4, r3
1000f1a6:	d00f      	beq.n	1000f1c8 <MXC_I2C_RevA_Init+0x74>
1000f1a8:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f1ac:	429c      	cmp	r4, r3
1000f1ae:	bf14      	ite	ne
1000f1b0:	f04f 34ff 	movne.w	r4, #4294967295	@ 0xffffffff
1000f1b4:	2402      	moveq	r4, #2
1000f1b6:	4b18      	ldr	r3, [pc, #96]	@ (1000f218 <MXC_I2C_RevA_Init+0xc4>)
1000f1b8:	eb04 0444 	add.w	r4, r4, r4, lsl #1
1000f1bc:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
1000f1c0:	2201      	movs	r2, #1
1000f1c2:	605a      	str	r2, [r3, #4]
}
1000f1c4:	4630      	mov	r0, r6
1000f1c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f1c8:	2401      	movs	r4, #1
1000f1ca:	e7f4      	b.n	1000f1b6 <MXC_I2C_RevA_Init+0x62>
        MXC_I2C_SetSlaveAddr((mxc_i2c_regs_t *)i2c, slaveAddr, 0);
1000f1cc:	463a      	mov	r2, r7
1000f1ce:	4629      	mov	r1, r5
1000f1d0:	4620      	mov	r0, r4
1000f1d2:	f7ff ff2d 	bl	1000f030 <MXC_I2C_SetSlaveAddr>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000f1d6:	4b0e      	ldr	r3, [pc, #56]	@ (1000f210 <MXC_I2C_RevA_Init+0xbc>)
1000f1d8:	429c      	cmp	r4, r3
1000f1da:	d009      	beq.n	1000f1f0 <MXC_I2C_RevA_Init+0x9c>
1000f1dc:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f1e0:	429c      	cmp	r4, r3
1000f1e2:	d010      	beq.n	1000f206 <MXC_I2C_RevA_Init+0xb2>
1000f1e4:	4f0d      	ldr	r7, [pc, #52]	@ (1000f21c <MXC_I2C_RevA_Init+0xc8>)
1000f1e6:	42bc      	cmp	r4, r7
1000f1e8:	bf14      	ite	ne
1000f1ea:	f04f 37ff 	movne.w	r7, #4294967295	@ 0xffffffff
1000f1ee:	2702      	moveq	r7, #2
1000f1f0:	4b09      	ldr	r3, [pc, #36]	@ (1000f218 <MXC_I2C_RevA_Init+0xc4>)
1000f1f2:	eb07 0147 	add.w	r1, r7, r7, lsl #1
1000f1f6:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
1000f1fa:	2200      	movs	r2, #0
1000f1fc:	605a      	str	r2, [r3, #4]
}
1000f1fe:	4630      	mov	r0, r6
1000f200:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 1;
1000f202:	4634      	mov	r4, r6
1000f204:	e7d7      	b.n	1000f1b6 <MXC_I2C_RevA_Init+0x62>
        states[MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c)].master = 0;
1000f206:	2701      	movs	r7, #1
1000f208:	e7f2      	b.n	1000f1f0 <MXC_I2C_RevA_Init+0x9c>
        return E_NULL_PTR;
1000f20a:	f04f 36ff 	mov.w	r6, #4294967295	@ 0xffffffff
1000f20e:	e7ac      	b.n	1000f16a <MXC_I2C_RevA_Init+0x16>
1000f210:	4001d000 	.word	0x4001d000
1000f214:	4001e000 	.word	0x4001e000
1000f218:	200006f8 	.word	0x200006f8
1000f21c:	4001f000 	.word	0x4001f000

1000f220 <MXC_I2C_RevA_SetSlaveAddr>:

int MXC_I2C_RevA_SetSlaveAddr(mxc_i2c_reva_regs_t *i2c, unsigned int slaveAddr, int idx)
{
    if (i2c == NULL) {
1000f220:	4603      	mov	r3, r0
1000f222:	b1a0      	cbz	r0, 1000f24e <MXC_I2C_RevA_SetSlaveAddr+0x2e>
        return E_NULL_PTR;
    }

    if (idx != 0) {
1000f224:	b96a      	cbnz	r2, 1000f242 <MXC_I2C_RevA_SetSlaveAddr+0x22>
        // Multiple slaves are not supported yet
        return E_NOT_SUPPORTED;
    }

    if (slaveAddr > MXC_F_I2C_REVA_SLAVE_ADDR) {
1000f226:	f5b1 6f80 	cmp.w	r1, #1024	@ 0x400
1000f22a:	d20d      	bcs.n	1000f248 <MXC_I2C_RevA_SetSlaveAddr+0x28>
        return E_BAD_PARAM;
    }

    i2c->slave = 0;

    if (slaveAddr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1000f22c:	297f      	cmp	r1, #127	@ 0x7f
    i2c->slave = 0;
1000f22e:	64c2      	str	r2, [r0, #76]	@ 0x4c
        // Set for 10bit addressing mode
        i2c->slave = MXC_F_I2C_REVA_SLAVE_EXT_ADDR_EN;
1000f230:	bf84      	itt	hi
1000f232:	f44f 4200 	movhi.w	r2, #32768	@ 0x8000
1000f236:	64c2      	strhi	r2, [r0, #76]	@ 0x4c
    }

    i2c->slave |= slaveAddr;
1000f238:	6cc2      	ldr	r2, [r0, #76]	@ 0x4c
1000f23a:	430a      	orrs	r2, r1

    return E_NO_ERROR;
1000f23c:	2000      	movs	r0, #0
    i2c->slave |= slaveAddr;
1000f23e:	64da      	str	r2, [r3, #76]	@ 0x4c
    return E_NO_ERROR;
1000f240:	4770      	bx	lr
        return E_NOT_SUPPORTED;
1000f242:	f06f 0010 	mvn.w	r0, #16
1000f246:	4770      	bx	lr
        return E_BAD_PARAM;
1000f248:	f06f 0002 	mvn.w	r0, #2
}
1000f24c:	4770      	bx	lr
        return E_NULL_PTR;
1000f24e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1000f252:	4770      	bx	lr

1000f254 <MXC_I2C_RevA_SetFrequency>:

int MXC_I2C_RevA_SetFrequency(mxc_i2c_reva_regs_t *i2c, unsigned int hz)
{
    unsigned int ticksTotal, hiClks, lowClks;

    if (i2c == NULL) {
1000f254:	2800      	cmp	r0, #0
1000f256:	d03f      	beq.n	1000f2d8 <MXC_I2C_RevA_SetFrequency+0x84>
{
1000f258:	b410      	push	{r4}
        return E_NULL_PTR;
    }

    if (hz > MXC_I2C_REVA_FASTPLUS_SPEED && hz <= MXC_I2C_REVA_HIGH_SPEED) {
1000f25a:	4a21      	ldr	r2, [pc, #132]	@ (1000f2e0 <MXC_I2C_RevA_SetFrequency+0x8c>)
1000f25c:	f5a1 2374 	sub.w	r3, r1, #999424	@ 0xf4000
1000f260:	f46f 7410 	mvn.w	r4, #576	@ 0x240
1000f264:	4423      	add	r3, r4
1000f266:	4293      	cmp	r3, r2
1000f268:	d313      	bcc.n	1000f292 <MXC_I2C_RevA_SetFrequency+0x3e>

        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;

        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz

    } else if (hz > MXC_I2C_REVA_HIGH_SPEED) {
1000f26a:	4b1e      	ldr	r3, [pc, #120]	@ (1000f2e4 <MXC_I2C_RevA_SetFrequency+0x90>)
1000f26c:	4299      	cmp	r1, r3
1000f26e:	d82f      	bhi.n	1000f2d0 <MXC_I2C_RevA_SetFrequency+0x7c>
        ticksTotal = PeripheralClock / hz;
1000f270:	4b1d      	ldr	r3, [pc, #116]	@ (1000f2e8 <MXC_I2C_RevA_SetFrequency+0x94>)
        return E_BAD_PARAM;
    }

    // Calculate the period of SCL, 50% duty cycle
    ticksTotal = PeripheralClock / hz;
1000f272:	681b      	ldr	r3, [r3, #0]
1000f274:	085b      	lsrs	r3, r3, #1
1000f276:	fbb3 f3f1 	udiv	r3, r3, r1
    hiClks = (ticksTotal >> 1) - 1;
1000f27a:	085b      	lsrs	r3, r3, #1
    if (ticksTotal % 1) {
        hiClks++;
    }

    // Check for maximum/minimum supported speeds
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000f27c:	1e9a      	subs	r2, r3, #2
1000f27e:	f5b2 7fff 	cmp.w	r2, #510	@ 0x1fe
    hiClks = (ticksTotal >> 1) - 1;
1000f282:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
    if ((hiClks > MXC_F_I2C_REVA_CLKHI_HI) || (lowClks == 0)) {
1000f286:	d823      	bhi.n	1000f2d0 <MXC_I2C_RevA_SetFrequency+0x7c>
        return E_BAD_PARAM;
    }

    i2c->clklo = lowClks & MXC_F_I2C_REVA_CLKLO_LO;
1000f288:	6343      	str	r3, [r0, #52]	@ 0x34
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;

    // Return the actual speed set, since it won't be exactly what's requested
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
}
1000f28a:	bc10      	pop	{r4}
    i2c->clkhi = hiClks & MXC_F_I2C_REVA_CLKHI_HI;
1000f28c:	6383      	str	r3, [r0, #56]	@ 0x38
    return MXC_I2C_GetFrequency((mxc_i2c_regs_t *)i2c);
1000f28e:	f7ff bf47 	b.w	1000f120 <MXC_I2C_GetFrequency>
        ticksTotal = PeripheralClock / hz;
1000f292:	4b15      	ldr	r3, [pc, #84]	@ (1000f2e8 <MXC_I2C_RevA_SetFrequency+0x94>)
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f294:	4c15      	ldr	r4, [pc, #84]	@ (1000f2ec <MXC_I2C_RevA_SetFrequency+0x98>)
        ticksTotal = PeripheralClock / hz;
1000f296:	681b      	ldr	r3, [r3, #0]
1000f298:	085b      	lsrs	r3, r3, #1
1000f29a:	fbb3 f1f1 	udiv	r1, r3, r1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f29e:	004a      	lsls	r2, r1, #1
        hsHiClks = ticksTotal / 3 - 1;
1000f2a0:	fba4 c101 	umull	ip, r1, r4, r1
1000f2a4:	0849      	lsrs	r1, r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f2a6:	fba4 4202 	umull	r4, r2, r4, r2
        hsHiClks = ticksTotal / 3 - 1;
1000f2aa:	3901      	subs	r1, #1
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f2ac:	0852      	lsrs	r2, r2, #1
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000f2ae:	290f      	cmp	r1, #15
        hsLowClks = (ticksTotal * 2) / 3 - 1;
1000f2b0:	f102 32ff 	add.w	r2, r2, #4294967295	@ 0xffffffff
        if ((hsHiClks > 0xF) || (hsLowClks > 0xF)) {
1000f2b4:	dc0c      	bgt.n	1000f2d0 <MXC_I2C_RevA_SetFrequency+0x7c>
1000f2b6:	2a0f      	cmp	r2, #15
1000f2b8:	dc0a      	bgt.n	1000f2d0 <MXC_I2C_RevA_SetFrequency+0x7c>
        hsHiClks = (hsHiClks << MXC_F_I2C_REVA_HSCLK_HI_POS) & MXC_F_I2C_REVA_HSCLK_HI;
1000f2ba:	0209      	lsls	r1, r1, #8
1000f2bc:	b289      	uxth	r1, r1
        i2c->hsclk = (hsLowClks | hsHiClks);
1000f2be:	b2d2      	uxtb	r2, r2
1000f2c0:	430a      	orrs	r2, r1
1000f2c2:	63c2      	str	r2, [r0, #60]	@ 0x3c
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000f2c4:	6802      	ldr	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000f2c6:	490a      	ldr	r1, [pc, #40]	@ (1000f2f0 <MXC_I2C_RevA_SetFrequency+0x9c>)
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_HS_EN;
1000f2c8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
1000f2cc:	6002      	str	r2, [r0, #0]
        hz = MXC_I2C_REVA_FAST_SPEED; // High speed preambles will be sent at 400kHz
1000f2ce:	e7d2      	b.n	1000f276 <MXC_I2C_RevA_SetFrequency+0x22>
            return E_BAD_PARAM;
1000f2d0:	f06f 0002 	mvn.w	r0, #2
}
1000f2d4:	bc10      	pop	{r4}
1000f2d6:	4770      	bx	lr
        return E_NULL_PTR;
1000f2d8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f2dc:	4770      	bx	lr
1000f2de:	bf00      	nop
1000f2e0:	00249f00 	.word	0x00249f00
1000f2e4:	0033e140 	.word	0x0033e140
1000f2e8:	20000e58 	.word	0x20000e58
1000f2ec:	aaaaaaab 	.word	0xaaaaaaab
1000f2f0:	00061a80 	.word	0x00061a80

1000f2f4 <MXC_I2C_RevA_GetFrequency>:
    unsigned int sclCycles = 0;

    // Calculate the speed based on what we've written into registers
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);

    return PeripheralClock / sclCycles;
1000f2f4:	4906      	ldr	r1, [pc, #24]	@ (1000f310 <MXC_I2C_RevA_GetFrequency+0x1c>)
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000f2f6:	6b43      	ldr	r3, [r0, #52]	@ 0x34
1000f2f8:	6b82      	ldr	r2, [r0, #56]	@ 0x38
    return PeripheralClock / sclCycles;
1000f2fa:	6808      	ldr	r0, [r1, #0]
    sclCycles = (i2c->clklo & MXC_F_I2C_REVA_CLKLO_LO) + (i2c->clkhi & MXC_F_I2C_REVA_CLKHI_HI);
1000f2fc:	f3c2 0208 	ubfx	r2, r2, #0, #9
1000f300:	f3c3 0308 	ubfx	r3, r3, #0, #9
1000f304:	4413      	add	r3, r2
    return PeripheralClock / sclCycles;
1000f306:	0840      	lsrs	r0, r0, #1
}
1000f308:	fbb0 f0f3 	udiv	r0, r0, r3
1000f30c:	4770      	bx	lr
1000f30e:	bf00      	nop
1000f310:	20000e58 	.word	0x20000e58

1000f314 <MXC_I2C_RevA_Start>:
/* ************************************************************************* */
/* Low-level functions                                                       */
/* ************************************************************************* */
int MXC_I2C_RevA_Start(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000f314:	b170      	cbz	r0, 1000f334 <MXC_I2C_RevA_Start+0x20>
        return E_NULL_PTR;
    }

    // If we have an incomplete transfer, we need to do a restart
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
1000f316:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000f318:	f013 0f01 	tst.w	r3, #1
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000f31c:	6b03      	ldr	r3, [r0, #48]	@ 0x30
    if (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_START) {
1000f31e:	d104      	bne.n	1000f32a <MXC_I2C_RevA_Start+0x16>
    } else {
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START; // No check for start generation
1000f320:	f043 0301 	orr.w	r3, r3, #1
1000f324:	6303      	str	r3, [r0, #48]	@ 0x30
    }

    return E_NO_ERROR;
1000f326:	2000      	movs	r0, #0
1000f328:	4770      	bx	lr
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000f32a:	f043 0302 	orr.w	r3, r3, #2
1000f32e:	6303      	str	r3, [r0, #48]	@ 0x30
    return E_NO_ERROR;
1000f330:	2000      	movs	r0, #0
1000f332:	4770      	bx	lr
        return E_NULL_PTR;
1000f334:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f338:	4770      	bx	lr
1000f33a:	bf00      	nop

1000f33c <MXC_I2C_RevA_Stop>:

int MXC_I2C_RevA_Stop(mxc_i2c_reva_regs_t *i2c)
{
    if (i2c == NULL) {
1000f33c:	b148      	cbz	r0, 1000f352 <MXC_I2C_RevA_Stop+0x16>
        return E_NULL_PTR;
    }

    i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
1000f33e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000f340:	f043 0304 	orr.w	r3, r3, #4
1000f344:	6303      	str	r3, [r0, #48]	@ 0x30

    while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_STOP) {}
1000f346:	6b03      	ldr	r3, [r0, #48]	@ 0x30
1000f348:	f013 0304 	ands.w	r3, r3, #4
1000f34c:	d1fb      	bne.n	1000f346 <MXC_I2C_RevA_Stop+0xa>

    return E_NO_ERROR;
1000f34e:	4618      	mov	r0, r3
1000f350:	4770      	bx	lr
        return E_NULL_PTR;
1000f352:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f356:	4770      	bx	lr

1000f358 <MXC_I2C_RevA_ReadRXFIFO>:
int MXC_I2C_RevA_ReadRXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                            unsigned int len)
{
    unsigned read = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000f358:	b1c8      	cbz	r0, 1000f38e <MXC_I2C_RevA_ReadRXFIFO+0x36>
1000f35a:	b1c1      	cbz	r1, 1000f38e <MXC_I2C_RevA_ReadRXFIFO+0x36>
        return E_NULL_PTR;
    }

    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f35c:	b1aa      	cbz	r2, 1000f38a <MXC_I2C_RevA_ReadRXFIFO+0x32>
{
1000f35e:	b500      	push	{lr}
    unsigned read = 0;
1000f360:	2300      	movs	r3, #0
        bytes[read++] = i2c->fifo;
1000f362:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
1000f366:	e007      	b.n	1000f378 <MXC_I2C_RevA_ReadRXFIFO+0x20>
1000f368:	6ac1      	ldr	r1, [r0, #44]	@ 0x2c
1000f36a:	3301      	adds	r3, #1
1000f36c:	fa5f fc81 	uxtb.w	ip, r1
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f370:	429a      	cmp	r2, r3
        bytes[read++] = i2c->fifo;
1000f372:	f80e c003 	strb.w	ip, [lr, r3]
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f376:	d005      	beq.n	1000f384 <MXC_I2C_RevA_ReadRXFIFO+0x2c>
1000f378:	6841      	ldr	r1, [r0, #4]
1000f37a:	0789      	lsls	r1, r1, #30
1000f37c:	d5f4      	bpl.n	1000f368 <MXC_I2C_RevA_ReadRXFIFO+0x10>
    }

    return read;
1000f37e:	4618      	mov	r0, r3
}
1000f380:	f85d fb04 	ldr.w	pc, [sp], #4
    return read;
1000f384:	4610      	mov	r0, r2
}
1000f386:	f85d fb04 	ldr.w	pc, [sp], #4
    while ((len > read) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_RX_EM))) {
1000f38a:	4610      	mov	r0, r2
1000f38c:	4770      	bx	lr
        return E_NULL_PTR;
1000f38e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f392:	4770      	bx	lr

1000f394 <MXC_I2C_RevA_WriteTXFIFO>:
int MXC_I2C_RevA_WriteTXFIFO(mxc_i2c_reva_regs_t *i2c, volatile unsigned char *bytes,
                             unsigned int len)
{
    unsigned written = 0;

    if ((i2c == NULL) || (bytes == NULL)) {
1000f394:	b198      	cbz	r0, 1000f3be <MXC_I2C_RevA_WriteTXFIFO+0x2a>
1000f396:	b191      	cbz	r1, 1000f3be <MXC_I2C_RevA_WriteTXFIFO+0x2a>
        return E_NULL_PTR;
    }

    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f398:	b17a      	cbz	r2, 1000f3ba <MXC_I2C_RevA_WriteTXFIFO+0x26>
    unsigned written = 0;
1000f39a:	2300      	movs	r3, #0
        i2c->fifo = bytes[written++];
1000f39c:	f101 3cff 	add.w	ip, r1, #4294967295	@ 0xffffffff
1000f3a0:	e006      	b.n	1000f3b0 <MXC_I2C_RevA_WriteTXFIFO+0x1c>
1000f3a2:	3301      	adds	r3, #1
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f3a4:	429a      	cmp	r2, r3
        i2c->fifo = bytes[written++];
1000f3a6:	f81c 1003 	ldrb.w	r1, [ip, r3]
1000f3aa:	b2c9      	uxtb	r1, r1
1000f3ac:	62c1      	str	r1, [r0, #44]	@ 0x2c
    while ((len > written) && (!(i2c->status & MXC_F_I2C_REVA_STATUS_TX_FULL))) {
1000f3ae:	d004      	beq.n	1000f3ba <MXC_I2C_RevA_WriteTXFIFO+0x26>
1000f3b0:	6841      	ldr	r1, [r0, #4]
1000f3b2:	06c9      	lsls	r1, r1, #27
1000f3b4:	d5f5      	bpl.n	1000f3a2 <MXC_I2C_RevA_WriteTXFIFO+0xe>
    }

    return written;
1000f3b6:	4618      	mov	r0, r3
1000f3b8:	4770      	bx	lr
1000f3ba:	4610      	mov	r0, r2
1000f3bc:	4770      	bx	lr
        return E_NULL_PTR;
1000f3be:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f3c2:	4770      	bx	lr

1000f3c4 <MXC_I2C_RevA_ClearRXFIFO>:
           ((i2c->txctrl1 & MXC_F_I2C_REVA_TXCTRL1_LVL) >> MXC_F_I2C_REVA_TXCTRL1_LVL_POS);
}

void MXC_I2C_RevA_ClearRXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->rxctrl0 |= MXC_F_I2C_REVA_RXCTRL0_FLUSH;
1000f3c4:	69c3      	ldr	r3, [r0, #28]
1000f3c6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f3ca:	61c3      	str	r3, [r0, #28]

    while (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_FLUSH) {}
1000f3cc:	69c3      	ldr	r3, [r0, #28]
1000f3ce:	061b      	lsls	r3, r3, #24
1000f3d0:	d4fc      	bmi.n	1000f3cc <MXC_I2C_RevA_ClearRXFIFO+0x8>
}
1000f3d2:	4770      	bx	lr

1000f3d4 <MXC_I2C_RevA_ClearTXFIFO>:

void MXC_I2C_RevA_ClearTXFIFO(mxc_i2c_reva_regs_t *i2c)
{
    i2c->txctrl0 |= MXC_F_I2C_REVA_TXCTRL0_FLUSH;
1000f3d4:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000f3d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f3da:	6243      	str	r3, [r0, #36]	@ 0x24

    while (i2c->txctrl0 & MXC_F_I2C_REVA_TXCTRL0_FLUSH) {}
1000f3dc:	6a43      	ldr	r3, [r0, #36]	@ 0x24
1000f3de:	061b      	lsls	r3, r3, #24
1000f3e0:	d4fc      	bmi.n	1000f3dc <MXC_I2C_RevA_ClearTXFIFO+0x8>
}
1000f3e2:	4770      	bx	lr

1000f3e4 <MXC_I2C_RevA_ClearFlags>:
    return E_NO_ERROR;
}

void MXC_I2C_RevA_ClearFlags(mxc_i2c_reva_regs_t *i2c, unsigned int flags0, unsigned int flags1)
{
    i2c->intfl0 = flags0;
1000f3e4:	6081      	str	r1, [r0, #8]
    i2c->intfl1 = flags1;
1000f3e6:	6102      	str	r2, [r0, #16]
}
1000f3e8:	4770      	bx	lr
1000f3ea:	bf00      	nop

1000f3ec <MXC_I2C_RevA_Recover>:
int MXC_I2C_RevA_Recover(mxc_i2c_reva_regs_t *i2c, unsigned int retries)
{
    int err;
    unsigned int i;

    if (i2c == NULL) {
1000f3ec:	2800      	cmp	r0, #0
1000f3ee:	d065      	beq.n	1000f4bc <MXC_I2C_RevA_Recover+0xd0>
        return E_NULL_PTR;
    }

    err = E_COMM_ERR;

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f3f0:	6803      	ldr	r3, [r0, #0]
1000f3f2:	f043 0301 	orr.w	r3, r3, #1
{
1000f3f6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_EN;
1000f3fa:	6003      	str	r3, [r0, #0]
    int swBit = i2c->ctrl & MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f3fc:	6807      	ldr	r7, [r0, #0]

    if (i2c == NULL) {
        return E_NULL_PTR;
    }

    i2c->ctrl |= MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f3fe:	6803      	ldr	r3, [r0, #0]
1000f400:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1000f404:	460e      	mov	r6, r1
1000f406:	4604      	mov	r4, r0
1000f408:	f407 6780 	and.w	r7, r7, #1024	@ 0x400
1000f40c:	6003      	str	r3, [r0, #0]

    // Follow the procedure detailed in the header file
    // Delay 10uS between each step to give the line/slaves time to react
    for (i = 0; i < retries; i++) {
1000f40e:	2900      	cmp	r1, #0
1000f410:	d043      	beq.n	1000f49a <MXC_I2C_RevA_Recover+0xae>
1000f412:	2500      	movs	r5, #0
1000f414:	e02b      	b.n	1000f46e <MXC_I2C_RevA_Recover+0x82>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f416:	f7ff fa65 	bl	1000e8e4 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f41a:	6823      	ldr	r3, [r4, #0]
1000f41c:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
1000f420:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f422:	200a      	movs	r0, #10
1000f424:	f7ff fa5e 	bl	1000e8e4 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000f428:	6823      	ldr	r3, [r4, #0]
1000f42a:	f413 7800 	ands.w	r8, r3, #512	@ 0x200
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f42e:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA) {
1000f432:	d12b      	bne.n	1000f48c <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000f434:	f7ff fa56 	bl	1000e8e4 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f438:	6823      	ldr	r3, [r4, #0]
1000f43a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
1000f43e:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f440:	200a      	movs	r0, #10
1000f442:	f7ff fa4f 	bl	1000e8e4 <MXC_Delay>

        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000f446:	6823      	ldr	r3, [r4, #0]
1000f448:	059a      	lsls	r2, r3, #22
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
            continue; // Give up and try again
        }

        MXC_Delay(10);
1000f44a:	f04f 000a 	mov.w	r0, #10
        if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_SDA)) {
1000f44e:	d51d      	bpl.n	1000f48c <MXC_I2C_RevA_Recover+0xa0>
        MXC_Delay(10);
1000f450:	f7ff fa48 	bl	1000e8e4 <MXC_Delay>
        i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000f454:	6823      	ldr	r3, [r4, #0]
1000f456:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000f45a:	6023      	str	r3, [r4, #0]

        MXC_Delay(10);
1000f45c:	200a      	movs	r0, #10
1000f45e:	f7ff fa41 	bl	1000e8e4 <MXC_Delay>

        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f462:	6823      	ldr	r3, [r4, #0]
1000f464:	05db      	lsls	r3, r3, #23
1000f466:	d425      	bmi.n	1000f4b4 <MXC_I2C_RevA_Recover+0xc8>
    for (i = 0; i < retries; i++) {
1000f468:	3501      	adds	r5, #1
1000f46a:	42ae      	cmp	r6, r5
1000f46c:	d015      	beq.n	1000f49a <MXC_I2C_RevA_Recover+0xae>
        MXC_Delay(10);
1000f46e:	200a      	movs	r0, #10
1000f470:	f7ff fa38 	bl	1000e8e4 <MXC_Delay>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_SCL_OUT;
1000f474:	6823      	ldr	r3, [r4, #0]
1000f476:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000f47a:	6023      	str	r3, [r4, #0]
        MXC_Delay(10);
1000f47c:	200a      	movs	r0, #10
1000f47e:	f7ff fa31 	bl	1000e8e4 <MXC_Delay>
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f482:	6823      	ldr	r3, [r4, #0]
1000f484:	05d9      	lsls	r1, r3, #23
        MXC_Delay(10);
1000f486:	f04f 000a 	mov.w	r0, #10
        if (i2c->ctrl & MXC_F_I2C_REVA_CTRL_SCL) {
1000f48a:	d5c4      	bpl.n	1000f416 <MXC_I2C_RevA_Recover+0x2a>
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f48c:	6823      	ldr	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000f48e:	3501      	adds	r5, #1
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f490:	f043 03c0 	orr.w	r3, r3, #192	@ 0xc0
    for (i = 0; i < retries; i++) {
1000f494:	42ae      	cmp	r6, r5
            i2c->ctrl |= MXC_F_I2C_REVA_CTRL_SCL_OUT | MXC_F_I2C_REVA_CTRL_SDA_OUT;
1000f496:	6023      	str	r3, [r4, #0]
    for (i = 0; i < retries; i++) {
1000f498:	d1e9      	bne.n	1000f46e <MXC_I2C_RevA_Recover+0x82>
    err = E_COMM_ERR;
1000f49a:	f06f 0008 	mvn.w	r0, #8
            err = E_NO_ERROR; // We have control
            break;
        }
    }

    if (swBit == 0) {
1000f49e:	b91f      	cbnz	r7, 1000f4a8 <MXC_I2C_RevA_Recover+0xbc>
        i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_BB_MODE;
1000f4a0:	6823      	ldr	r3, [r4, #0]
1000f4a2:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1000f4a6:	6023      	str	r3, [r4, #0]
    }

    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_EN;
1000f4a8:	6823      	ldr	r3, [r4, #0]
1000f4aa:	f023 0301 	bic.w	r3, r3, #1
1000f4ae:	6023      	str	r3, [r4, #0]

    return err;
}
1000f4b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
            err = E_NO_ERROR; // We have control
1000f4b4:	4640      	mov	r0, r8
    if (swBit == 0) {
1000f4b6:	2f00      	cmp	r7, #0
1000f4b8:	d1f6      	bne.n	1000f4a8 <MXC_I2C_RevA_Recover+0xbc>
1000f4ba:	e7f1      	b.n	1000f4a0 <MXC_I2C_RevA_Recover+0xb4>
        return E_NULL_PTR;
1000f4bc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
}
1000f4c0:	4770      	bx	lr
1000f4c2:	bf00      	nop

1000f4c4 <MXC_I2C_RevA_SetTimeout>:
    i2c->ctrl &= ~MXC_F_I2C_REVA_CTRL_GC_ADDR_EN;
}

void MXC_I2C_RevA_SetTimeout(mxc_i2c_reva_regs_t *i2c, unsigned int timeout)
{
    i2c->timeout |= (timeout & 0xFFFF);
1000f4c4:	6c03      	ldr	r3, [r0, #64]	@ 0x40
1000f4c6:	b289      	uxth	r1, r1
1000f4c8:	4319      	orrs	r1, r3
1000f4ca:	6401      	str	r1, [r0, #64]	@ 0x40
}
1000f4cc:	4770      	bx	lr
1000f4ce:	bf00      	nop

1000f4d0 <MXC_I2C_RevA_MasterTransaction>:
/* ************************************************************************* */
/* Transaction level functions                                               */
/* ************************************************************************* */

int MXC_I2C_RevA_MasterTransaction(mxc_i2c_reva_req_t *req)
{
1000f4d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    mxc_i2c_reva_regs_t *i2c = req->i2c; // Save off pointer for faster access
1000f4d4:	e9d0 4300 	ldrd	r4, r3, [r0]
    unsigned int written = 0;
    unsigned int read = 0;

    if (req->addr > MXC_I2C_REVA_MAX_ADDR_WIDTH) {
1000f4d8:	2b7f      	cmp	r3, #127	@ 0x7f
1000f4da:	f200 80c3 	bhi.w	1000f664 <MXC_I2C_RevA_MasterTransaction+0x194>
        return E_NOT_SUPPORTED;
    }

    if (MXC_I2C_GET_IDX((mxc_i2c_regs_t *)i2c) < 0) {
1000f4de:	4b63      	ldr	r3, [pc, #396]	@ (1000f66c <MXC_I2C_RevA_MasterTransaction+0x19c>)
1000f4e0:	429c      	cmp	r4, r3
1000f4e2:	4605      	mov	r5, r0
1000f4e4:	d008      	beq.n	1000f4f8 <MXC_I2C_RevA_MasterTransaction+0x28>
1000f4e6:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f4ea:	429c      	cmp	r4, r3
1000f4ec:	d004      	beq.n	1000f4f8 <MXC_I2C_RevA_MasterTransaction+0x28>
1000f4ee:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f4f2:	429c      	cmp	r4, r3
1000f4f4:	f040 80b0 	bne.w	1000f658 <MXC_I2C_RevA_MasterTransaction+0x188>
        return E_BAD_PARAM;
    }

    if (!(i2c->ctrl & MXC_F_I2C_REVA_CTRL_MST_MODE)) {
1000f4f8:	6823      	ldr	r3, [r4, #0]
1000f4fa:	079e      	lsls	r6, r3, #30
1000f4fc:	f140 80af 	bpl.w	1000f65e <MXC_I2C_RevA_MasterTransaction+0x18e>
    //  send addr w/ read bit
    //  read rx_len bytes acking all
    // stop or restart
    // return good or error

    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c, MXC_I2C_REVA_INTFL0_MASK,
1000f500:	2207      	movs	r2, #7
1000f502:	f06f 417f 	mvn.w	r1, #4278190080	@ 0xff000000
1000f506:	4620      	mov	r0, r4
1000f508:	f7ff fe18 	bl	1000f13c <MXC_I2C_ClearFlags>
                       MXC_I2C_REVA_INTFL1_MASK); // Clear all I2C Interrupts
    MXC_I2C_ClearTXFIFO((mxc_i2c_regs_t *)i2c);
1000f50c:	4620      	mov	r0, r4
1000f50e:	f7ff fe13 	bl	1000f138 <MXC_I2C_ClearTXFIFO>
    MXC_I2C_ClearRXFIFO((mxc_i2c_regs_t *)i2c);
1000f512:	4620      	mov	r0, r4
1000f514:	f7ff fe0e 	bl	1000f134 <MXC_I2C_ClearRXFIFO>
    i2c->inten0 = 0;
    i2c->inten1 = 0;

    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1000f518:	696a      	ldr	r2, [r5, #20]
    i2c->inten0 = 0;
1000f51a:	2300      	movs	r3, #0
1000f51c:	60e3      	str	r3, [r4, #12]
    i2c->inten1 = 0;
1000f51e:	6163      	str	r3, [r4, #20]
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1000f520:	bb42      	cbnz	r2, 1000f574 <MXC_I2C_RevA_MasterTransaction+0xa4>
1000f522:	68ea      	ldr	r2, [r5, #12]
        // Load the slave address with write bit set
        i2c->fifo = (req->addr << 1) & ~0x1;
1000f524:	686b      	ldr	r3, [r5, #4]
1000f526:	005b      	lsls	r3, r3, #1
1000f528:	62e3      	str	r3, [r4, #44]	@ 0x2c
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_START;
1000f52a:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1000f52c:	f043 0301 	orr.w	r3, r3, #1
1000f530:	2600      	movs	r6, #0
1000f532:	6323      	str	r3, [r4, #48]	@ 0x30

    while (req->tx_len > written) {
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
                                           req->tx_len - written);
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1000f534:	2720      	movs	r7, #32
1000f536:	e004      	b.n	1000f542 <MXC_I2C_RevA_MasterTransaction+0x72>
        }

        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f538:	68a3      	ldr	r3, [r4, #8]
1000f53a:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
1000f53e:	d111      	bne.n	1000f564 <MXC_I2C_RevA_MasterTransaction+0x94>
    while (req->tx_len > written) {
1000f540:	68ea      	ldr	r2, [r5, #12]
1000f542:	4296      	cmp	r6, r2
1000f544:	d219      	bcs.n	1000f57a <MXC_I2C_RevA_MasterTransaction+0xaa>
        if (i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_TX_THD) {
1000f546:	68a3      	ldr	r3, [r4, #8]
1000f548:	0698      	lsls	r0, r3, #26
1000f54a:	d5f5      	bpl.n	1000f538 <MXC_I2C_RevA_MasterTransaction+0x68>
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
1000f54c:	68a9      	ldr	r1, [r5, #8]
1000f54e:	1b92      	subs	r2, r2, r6
1000f550:	4431      	add	r1, r6
1000f552:	4620      	mov	r0, r4
1000f554:	f7ff fdec 	bl	1000f130 <MXC_I2C_WriteTXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_TX_THD;
1000f558:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f55a:	68a3      	ldr	r3, [r4, #8]
1000f55c:	f413 4ffe 	tst.w	r3, #32512	@ 0x7f00
            written += MXC_I2C_WriteTXFIFO((mxc_i2c_regs_t *)i2c, &req->tx_buf[written],
1000f560:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f562:	d0ed      	beq.n	1000f540 <MXC_I2C_RevA_MasterTransaction+0x70>
            req->tx_len = written;
1000f564:	60ee      	str	r6, [r5, #12]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1000f566:	4620      	mov	r0, r4
1000f568:	f7ff fdde 	bl	1000f128 <MXC_I2C_Stop>
            return E_COMM_ERR;
1000f56c:	f06f 0008 	mvn.w	r0, #8
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
        return E_COMM_ERR;
    }

    return E_NO_ERROR;
}
1000f570:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((req->rx_len == 0) || (req->tx_len != 0)) {
1000f574:	68ea      	ldr	r2, [r5, #12]
1000f576:	2a00      	cmp	r2, #0
1000f578:	d1d4      	bne.n	1000f524 <MXC_I2C_RevA_MasterTransaction+0x54>
    MXC_I2C_ClearFlags((mxc_i2c_regs_t *)i2c,
1000f57a:	2200      	movs	r2, #0
1000f57c:	2111      	movs	r1, #17
1000f57e:	4620      	mov	r0, r4
1000f580:	f7ff fddc 	bl	1000f13c <MXC_I2C_ClearFlags>
    if (req->rx_len != 0) {
1000f584:	696b      	ldr	r3, [r5, #20]
1000f586:	2b00      	cmp	r3, #0
1000f588:	d04a      	beq.n	1000f620 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (req->rx_len > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1000f58a:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
            i2c->rxctrl1 = 0;
1000f58e:	bf88      	it	hi
1000f590:	2300      	movhi	r3, #0
            i2c->rxctrl1 = req->rx_len; // 0 for 256, otherwise number of bytes to read
1000f592:	6223      	str	r3, [r4, #32]
        MXC_I2C_Start((mxc_i2c_regs_t *)i2c); // Start or Restart as needed
1000f594:	4620      	mov	r0, r4
1000f596:	f7ff fdc5 	bl	1000f124 <MXC_I2C_Start>
        while (i2c->mstctrl & MXC_F_I2C_REVA_MSTCTRL_RESTART) {}
1000f59a:	6b26      	ldr	r6, [r4, #48]	@ 0x30
1000f59c:	f016 0602 	ands.w	r6, r6, #2
1000f5a0:	d1fb      	bne.n	1000f59a <MXC_I2C_RevA_MasterTransaction+0xca>
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000f5a2:	686b      	ldr	r3, [r5, #4]
    while (req->rx_len > read) {
1000f5a4:	696a      	ldr	r2, [r5, #20]
        i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000f5a6:	005b      	lsls	r3, r3, #1
1000f5a8:	f043 0301 	orr.w	r3, r3, #1
1000f5ac:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
1000f5ae:	2a00      	cmp	r2, #0
1000f5b0:	d036      	beq.n	1000f620 <MXC_I2C_RevA_MasterTransaction+0x150>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1000f5b2:	2710      	movs	r7, #16
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
1000f5b4:	f04f 0801 	mov.w	r8, #1
1000f5b8:	e01d      	b.n	1000f5f6 <MXC_I2C_RevA_MasterTransaction+0x126>
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f5ba:	68a3      	ldr	r3, [r4, #8]
1000f5bc:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
1000f5c0:	d129      	bne.n	1000f616 <MXC_I2C_RevA_MasterTransaction+0x146>
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
1000f5c2:	68a1      	ldr	r1, [r4, #8]
1000f5c4:	696a      	ldr	r2, [r5, #20]
1000f5c6:	07c9      	lsls	r1, r1, #31
1000f5c8:	d513      	bpl.n	1000f5f2 <MXC_I2C_RevA_MasterTransaction+0x122>
1000f5ca:	4296      	cmp	r6, r2
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1000f5cc:	eba2 0106 	sub.w	r1, r2, r6
        if ((i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE) && (req->rx_len < read)) {
1000f5d0:	d90f      	bls.n	1000f5f2 <MXC_I2C_RevA_MasterTransaction+0x122>
            if ((req->rx_len - read) > MXC_I2C_REVA_MAX_FIFO_TRANSACTION) {
1000f5d2:	f5b1 7f80 	cmp.w	r1, #256	@ 0x100
                i2c->rxctrl1 = 0;
1000f5d6:	bf8c      	ite	hi
1000f5d8:	6223      	strhi	r3, [r4, #32]
                i2c->rxctrl1 = (req->rx_len - read); // 0 for 256, otherwise number of bytes to read
1000f5da:	6221      	strls	r1, [r4, #32]
            i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000f5dc:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1000f5de:	f043 0302 	orr.w	r3, r3, #2
1000f5e2:	6323      	str	r3, [r4, #48]	@ 0x30
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000f5e4:	686b      	ldr	r3, [r5, #4]
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE;
1000f5e6:	f8c4 8008 	str.w	r8, [r4, #8]
            i2c->fifo = (req->addr << 1) | 0x1; // Load slave address with read bit.
1000f5ea:	005b      	lsls	r3, r3, #1
1000f5ec:	f043 0301 	orr.w	r3, r3, #1
1000f5f0:	62e3      	str	r3, [r4, #44]	@ 0x2c
    while (req->rx_len > read) {
1000f5f2:	4296      	cmp	r6, r2
1000f5f4:	d214      	bcs.n	1000f620 <MXC_I2C_RevA_MasterTransaction+0x150>
        if (i2c->intfl0 & (MXC_F_I2C_REVA_INTFL0_RX_THD | MXC_F_I2C_REVA_INTFL0_DONE)) {
1000f5f6:	68a3      	ldr	r3, [r4, #8]
1000f5f8:	f013 0f11 	tst.w	r3, #17
1000f5fc:	d0dd      	beq.n	1000f5ba <MXC_I2C_RevA_MasterTransaction+0xea>
                MXC_I2C_ReadRXFIFO((mxc_i2c_regs_t *)i2c, &req->rx_buf[read], req->rx_len - read);
1000f5fe:	6929      	ldr	r1, [r5, #16]
1000f600:	1b92      	subs	r2, r2, r6
1000f602:	4431      	add	r1, r6
1000f604:	4620      	mov	r0, r4
1000f606:	f7ff fd91 	bl	1000f12c <MXC_I2C_ReadRXFIFO>
            i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_RX_THD;
1000f60a:	60a7      	str	r7, [r4, #8]
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f60c:	68a3      	ldr	r3, [r4, #8]
1000f60e:	f413 43fe 	ands.w	r3, r3, #32512	@ 0x7f00
            read +=
1000f612:	4406      	add	r6, r0
        if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f614:	d0d5      	beq.n	1000f5c2 <MXC_I2C_RevA_MasterTransaction+0xf2>
            req->rx_len = read;
1000f616:	616e      	str	r6, [r5, #20]
            MXC_I2C_Stop((mxc_i2c_regs_t *)i2c);
1000f618:	4620      	mov	r0, r4
1000f61a:	f7ff fd85 	bl	1000f128 <MXC_I2C_Stop>
            return E_COMM_ERR;
1000f61e:	e7a5      	b.n	1000f56c <MXC_I2C_RevA_MasterTransaction+0x9c>
    if (req->restart) {
1000f620:	69ab      	ldr	r3, [r5, #24]
1000f622:	b173      	cbz	r3, 1000f642 <MXC_I2C_RevA_MasterTransaction+0x172>
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_RESTART;
1000f624:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1000f626:	f043 0302 	orr.w	r3, r3, #2
1000f62a:	6323      	str	r3, [r4, #48]	@ 0x30
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
1000f62c:	68a3      	ldr	r3, [r4, #8]
1000f62e:	07db      	lsls	r3, r3, #31
1000f630:	d5fc      	bpl.n	1000f62c <MXC_I2C_RevA_MasterTransaction+0x15c>
    i2c->intfl0 = MXC_F_I2C_REVA_INTFL0_DONE | MXC_F_I2C_REVA_INTFL0_STOP;
1000f632:	2341      	movs	r3, #65	@ 0x41
1000f634:	60a3      	str	r3, [r4, #8]
    if (i2c->intfl0 & MXC_I2C_REVA_ERROR) {
1000f636:	68a0      	ldr	r0, [r4, #8]
1000f638:	f410 40fe 	ands.w	r0, r0, #32512	@ 0x7f00
1000f63c:	d196      	bne.n	1000f56c <MXC_I2C_RevA_MasterTransaction+0x9c>
}
1000f63e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        i2c->mstctrl |= MXC_F_I2C_REVA_MSTCTRL_STOP;
1000f642:	6b23      	ldr	r3, [r4, #48]	@ 0x30
1000f644:	f043 0304 	orr.w	r3, r3, #4
1000f648:	6323      	str	r3, [r4, #48]	@ 0x30
        while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_STOP)) {}
1000f64a:	68a3      	ldr	r3, [r4, #8]
1000f64c:	065a      	lsls	r2, r3, #25
1000f64e:	d5fc      	bpl.n	1000f64a <MXC_I2C_RevA_MasterTransaction+0x17a>
    while (!(i2c->intfl0 & MXC_F_I2C_REVA_INTFL0_DONE)) {}
1000f650:	68a3      	ldr	r3, [r4, #8]
1000f652:	07db      	lsls	r3, r3, #31
1000f654:	d5ea      	bpl.n	1000f62c <MXC_I2C_RevA_MasterTransaction+0x15c>
1000f656:	e7ec      	b.n	1000f632 <MXC_I2C_RevA_MasterTransaction+0x162>
        return E_BAD_PARAM;
1000f658:	f06f 0002 	mvn.w	r0, #2
1000f65c:	e7ef      	b.n	1000f63e <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_BAD_STATE;
1000f65e:	f06f 0006 	mvn.w	r0, #6
1000f662:	e7ec      	b.n	1000f63e <MXC_I2C_RevA_MasterTransaction+0x16e>
        return E_NOT_SUPPORTED;
1000f664:	f06f 0010 	mvn.w	r0, #16
1000f668:	e7e9      	b.n	1000f63e <MXC_I2C_RevA_MasterTransaction+0x16e>
1000f66a:	bf00      	nop
1000f66c:	4001d000 	.word	0x4001d000

1000f670 <MXC_I2C_RevA_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_I2C_RevA_SetRXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int rxFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH) >>
1000f670:	6982      	ldr	r2, [r0, #24]
1000f672:	b2d2      	uxtb	r2, r2
                             MXC_F_I2C_REVA_FIFOLEN_RX_DEPTH_POS;

    if (numBytes > rxFIFOlen) {
1000f674:	428a      	cmp	r2, r1
{
1000f676:	4603      	mov	r3, r0
    if (numBytes > rxFIFOlen) {
1000f678:	d307      	bcc.n	1000f68a <MXC_I2C_RevA_SetRXThreshold+0x1a>
        return E_BAD_PARAM;
    }

    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1000f67a:	69c2      	ldr	r2, [r0, #28]
1000f67c:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
1000f680:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
1000f684:	2000      	movs	r0, #0
    i2c->rxctrl0 = (i2c->rxctrl0 & ~MXC_F_I2C_REVA_RXCTRL0_THD_LVL) |
1000f686:	61d9      	str	r1, [r3, #28]
    return E_NO_ERROR;
1000f688:	4770      	bx	lr
        return E_BAD_PARAM;
1000f68a:	f06f 0002 	mvn.w	r0, #2
}
1000f68e:	4770      	bx	lr

1000f690 <MXC_I2C_RevA_SetTXThreshold>:
    return (i2c->rxctrl0 & MXC_F_I2C_REVA_RXCTRL0_THD_LVL) >> MXC_F_I2C_REVA_RXCTRL0_THD_LVL_POS;
}

int MXC_I2C_RevA_SetTXThreshold(mxc_i2c_reva_regs_t *i2c, unsigned int numBytes)
{
    unsigned int txFIFOlen = (i2c->fifolen & MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH) >>
1000f690:	6982      	ldr	r2, [r0, #24]
1000f692:	f3c2 2207 	ubfx	r2, r2, #8, #8
                             MXC_F_I2C_REVA_FIFOLEN_TX_DEPTH_POS;

    if (numBytes > txFIFOlen) {
1000f696:	428a      	cmp	r2, r1
{
1000f698:	4603      	mov	r3, r0
    if (numBytes > txFIFOlen) {
1000f69a:	d307      	bcc.n	1000f6ac <MXC_I2C_RevA_SetTXThreshold+0x1c>
        return E_BAD_PARAM;
    }

    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
1000f69c:	6a42      	ldr	r2, [r0, #36]	@ 0x24
1000f69e:	f422 6270 	bic.w	r2, r2, #3840	@ 0xf00
1000f6a2:	ea42 2101 	orr.w	r1, r2, r1, lsl #8
                   (numBytes << MXC_F_I2C_REVA_TXCTRL0_THD_LVL_POS);
    return E_NO_ERROR;
1000f6a6:	2000      	movs	r0, #0
    i2c->txctrl0 = (i2c->txctrl0 & ~MXC_F_I2C_REVA_TXCTRL0_THD_LVL) |
1000f6a8:	6259      	str	r1, [r3, #36]	@ 0x24
    return E_NO_ERROR;
1000f6aa:	4770      	bx	lr
        return E_BAD_PARAM;
1000f6ac:	f06f 0002 	mvn.w	r0, #2
}
1000f6b0:	4770      	bx	lr
1000f6b2:	bf00      	nop

1000f6b4 <MXC_ICC_Enable>:
    return MXC_ICC_RevA_ID((mxc_icc_reva_regs_t *)icc, cid);
}

void MXC_ICC_Enable(mxc_icc_regs_t *icc)
{
    MXC_ICC_RevA_Enable((mxc_icc_reva_regs_t *)icc);
1000f6b4:	f000 b800 	b.w	1000f6b8 <MXC_ICC_RevA_Enable>

1000f6b8 <MXC_ICC_RevA_Enable>:
}

void MXC_ICC_RevA_Enable(mxc_icc_reva_regs_t *icc)
{
    // Invalidate cache and wait until ready
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1000f6b8:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1000f6bc:	2201      	movs	r2, #1
    icc->ctrl &= ~MXC_F_ICC_REVA_CTRL_EN;
1000f6be:	f023 0301 	bic.w	r3, r3, #1
1000f6c2:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    icc->invalidate = 1;
1000f6c6:	f8c0 2700 	str.w	r2, [r0, #1792]	@ 0x700
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1000f6ca:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100

    while (!(MXC_ICC_Ready(icc))) {}
1000f6ce:	03da      	lsls	r2, r3, #15
1000f6d0:	d5fb      	bpl.n	1000f6ca <MXC_ICC_RevA_Enable+0x12>

    // Enable Cache
    icc->ctrl |= MXC_F_ICC_REVA_CTRL_EN;
1000f6d2:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
1000f6d6:	f043 0301 	orr.w	r3, r3, #1
1000f6da:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
    return (icc->ctrl & MXC_F_ICC_REVA_CTRL_RDY);
1000f6de:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
    while (!(MXC_ICC_Ready(icc))) {}
1000f6e2:	03db      	lsls	r3, r3, #15
1000f6e4:	d5fb      	bpl.n	1000f6de <MXC_ICC_RevA_Enable+0x26>
}
1000f6e6:	4770      	bx	lr

1000f6e8 <MXC_UART_Shutdown>:

    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
}

int MXC_UART_Shutdown(mxc_uart_regs_t *uart)
{
1000f6e8:	b508      	push	{r3, lr}
    switch (MXC_UART_GET_IDX(uart)) {
1000f6ea:	4b16      	ldr	r3, [pc, #88]	@ (1000f744 <MXC_UART_Shutdown+0x5c>)
1000f6ec:	4298      	cmp	r0, r3
1000f6ee:	d010      	beq.n	1000f712 <MXC_UART_Shutdown+0x2a>
1000f6f0:	4b15      	ldr	r3, [pc, #84]	@ (1000f748 <MXC_UART_Shutdown+0x60>)
1000f6f2:	4298      	cmp	r0, r3
1000f6f4:	d014      	beq.n	1000f720 <MXC_UART_Shutdown+0x38>
1000f6f6:	4b15      	ldr	r3, [pc, #84]	@ (1000f74c <MXC_UART_Shutdown+0x64>)
1000f6f8:	4298      	cmp	r0, r3
1000f6fa:	d018      	beq.n	1000f72e <MXC_UART_Shutdown+0x46>
1000f6fc:	4b14      	ldr	r3, [pc, #80]	@ (1000f750 <MXC_UART_Shutdown+0x68>)
1000f6fe:	4298      	cmp	r0, r3
1000f700:	d11c      	bne.n	1000f73c <MXC_UART_Shutdown+0x54>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
        break;

    case 3:
        MXC_SYS_Reset_Periph(MXC_SYS_RESET_UART3);
1000f702:	2044      	movs	r0, #68	@ 0x44
1000f704:	f7ff faae 	bl	1000ec64 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART3);
1000f708:	2044      	movs	r0, #68	@ 0x44
1000f70a:	f7ff f925 	bl	1000e958 <MXC_SYS_ClockDisable>

    default:
        return E_BAD_PARAM;
    }

    return E_NO_ERROR;
1000f70e:	2000      	movs	r0, #0
}
1000f710:	bd08      	pop	{r3, pc}
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART0);
1000f712:	200b      	movs	r0, #11
1000f714:	f7ff faa6 	bl	1000ec64 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART0);
1000f718:	2009      	movs	r0, #9
1000f71a:	f7ff f91d 	bl	1000e958 <MXC_SYS_ClockDisable>
        break;
1000f71e:	e7f6      	b.n	1000f70e <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART1);
1000f720:	200c      	movs	r0, #12
1000f722:	f7ff fa9f 	bl	1000ec64 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART1);
1000f726:	200a      	movs	r0, #10
1000f728:	f7ff f916 	bl	1000e958 <MXC_SYS_ClockDisable>
        break;
1000f72c:	e7ef      	b.n	1000f70e <MXC_UART_Shutdown+0x26>
        MXC_SYS_Reset_Periph(MXC_SYS_RESET0_UART2);
1000f72e:	201c      	movs	r0, #28
1000f730:	f7ff fa98 	bl	1000ec64 <MXC_SYS_Reset_Periph>
        MXC_SYS_ClockDisable(MXC_SYS_PERIPH_CLOCK_UART2);
1000f734:	2021      	movs	r0, #33	@ 0x21
1000f736:	f7ff f90f 	bl	1000e958 <MXC_SYS_ClockDisable>
        break;
1000f73a:	e7e8      	b.n	1000f70e <MXC_UART_Shutdown+0x26>
        return E_BAD_PARAM;
1000f73c:	f06f 0002 	mvn.w	r0, #2
}
1000f740:	bd08      	pop	{r3, pc}
1000f742:	bf00      	nop
1000f744:	40042000 	.word	0x40042000
1000f748:	40043000 	.word	0x40043000
1000f74c:	40044000 	.word	0x40044000
1000f750:	40081400 	.word	0x40081400

1000f754 <MXC_UART_Init>:
{
1000f754:	b570      	push	{r4, r5, r6, lr}
1000f756:	4604      	mov	r4, r0
1000f758:	460e      	mov	r6, r1
1000f75a:	4615      	mov	r5, r2
    retval = MXC_UART_Shutdown(uart);
1000f75c:	f7ff ffc4 	bl	1000f6e8 <MXC_UART_Shutdown>
    if (retval) {
1000f760:	bba8      	cbnz	r0, 1000f7ce <MXC_UART_Init+0x7a>
    switch (clock) {
1000f762:	2d02      	cmp	r5, #2
1000f764:	d02d      	beq.n	1000f7c2 <MXC_UART_Init+0x6e>
1000f766:	2d04      	cmp	r5, #4
1000f768:	d018      	beq.n	1000f79c <MXC_UART_Init+0x48>
    switch (MXC_UART_GET_IDX(uart)) {
1000f76a:	4b20      	ldr	r3, [pc, #128]	@ (1000f7ec <MXC_UART_Init+0x98>)
1000f76c:	429c      	cmp	r4, r3
1000f76e:	d01b      	beq.n	1000f7a8 <MXC_UART_Init+0x54>
1000f770:	4b1f      	ldr	r3, [pc, #124]	@ (1000f7f0 <MXC_UART_Init+0x9c>)
1000f772:	429c      	cmp	r4, r3
1000f774:	d02c      	beq.n	1000f7d0 <MXC_UART_Init+0x7c>
1000f776:	4b1f      	ldr	r3, [pc, #124]	@ (1000f7f4 <MXC_UART_Init+0xa0>)
1000f778:	429c      	cmp	r4, r3
1000f77a:	d030      	beq.n	1000f7de <MXC_UART_Init+0x8a>
1000f77c:	4b1e      	ldr	r3, [pc, #120]	@ (1000f7f8 <MXC_UART_Init+0xa4>)
1000f77e:	429c      	cmp	r4, r3
1000f780:	d123      	bne.n	1000f7ca <MXC_UART_Init+0x76>
        MXC_GPIO_Config(&gpio_cfg_uart3);
1000f782:	481e      	ldr	r0, [pc, #120]	@ (1000f7fc <MXC_UART_Init+0xa8>)
1000f784:	f7ff fab2 	bl	1000ecec <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART3);
1000f788:	2044      	movs	r0, #68	@ 0x44
1000f78a:	f7ff f905 	bl	1000e998 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f78e:	462a      	mov	r2, r5
1000f790:	4631      	mov	r1, r6
1000f792:	4620      	mov	r0, r4
}
1000f794:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f798:	f000 b8f8 	b.w	1000f98c <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_ERTCO);
1000f79c:	2006      	movs	r0, #6
1000f79e:	f7ff f91d 	bl	1000e9dc <MXC_SYS_ClockSourceEnable>
    switch (MXC_UART_GET_IDX(uart)) {
1000f7a2:	4b12      	ldr	r3, [pc, #72]	@ (1000f7ec <MXC_UART_Init+0x98>)
1000f7a4:	429c      	cmp	r4, r3
1000f7a6:	d1e3      	bne.n	1000f770 <MXC_UART_Init+0x1c>
        MXC_GPIO_Config(&gpio_cfg_uart0);
1000f7a8:	4815      	ldr	r0, [pc, #84]	@ (1000f800 <MXC_UART_Init+0xac>)
1000f7aa:	f7ff fa9f 	bl	1000ecec <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART0);
1000f7ae:	2009      	movs	r0, #9
1000f7b0:	f7ff f8f2 	bl	1000e998 <MXC_SYS_ClockEnable>
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f7b4:	462a      	mov	r2, r5
1000f7b6:	4631      	mov	r1, r6
1000f7b8:	4620      	mov	r0, r4
}
1000f7ba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    return MXC_UART_RevB_Init((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f7be:	f000 b8e5 	b.w	1000f98c <MXC_UART_RevB_Init>
        MXC_SYS_ClockSourceEnable(MXC_SYS_CLOCK_IBRO);
1000f7c2:	2005      	movs	r0, #5
1000f7c4:	f7ff f90a 	bl	1000e9dc <MXC_SYS_ClockSourceEnable>
        break;
1000f7c8:	e7cf      	b.n	1000f76a <MXC_UART_Init+0x16>
        return E_BAD_PARAM;
1000f7ca:	f06f 0002 	mvn.w	r0, #2
}
1000f7ce:	bd70      	pop	{r4, r5, r6, pc}
        MXC_GPIO_Config(&gpio_cfg_uart1);
1000f7d0:	480c      	ldr	r0, [pc, #48]	@ (1000f804 <MXC_UART_Init+0xb0>)
1000f7d2:	f7ff fa8b 	bl	1000ecec <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART1);
1000f7d6:	200a      	movs	r0, #10
1000f7d8:	f7ff f8de 	bl	1000e998 <MXC_SYS_ClockEnable>
        break;
1000f7dc:	e7d7      	b.n	1000f78e <MXC_UART_Init+0x3a>
        MXC_GPIO_Config(&gpio_cfg_uart2);
1000f7de:	480a      	ldr	r0, [pc, #40]	@ (1000f808 <MXC_UART_Init+0xb4>)
1000f7e0:	f7ff fa84 	bl	1000ecec <MXC_GPIO_Config>
        MXC_SYS_ClockEnable(MXC_SYS_PERIPH_CLOCK_UART2);
1000f7e4:	2021      	movs	r0, #33	@ 0x21
1000f7e6:	f7ff f8d7 	bl	1000e998 <MXC_SYS_ClockEnable>
        break;
1000f7ea:	e7d0      	b.n	1000f78e <MXC_UART_Init+0x3a>
1000f7ec:	40042000 	.word	0x40042000
1000f7f0:	40043000 	.word	0x40043000
1000f7f4:	40044000 	.word	0x40044000
1000f7f8:	40081400 	.word	0x40081400
1000f7fc:	10017008 	.word	0x10017008
1000f800:	1001702c 	.word	0x1001702c
1000f804:	10017020 	.word	0x10017020
1000f808:	10017014 	.word	0x10017014

1000f80c <MXC_UART_SetFrequency>:
}

int MXC_UART_SetFrequency(mxc_uart_regs_t *uart, unsigned int baud, mxc_uart_clock_t clock)
{
    int frequency, clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f80c:	4b31      	ldr	r3, [pc, #196]	@ (1000f8d4 <MXC_UART_SetFrequency+0xc8>)
1000f80e:	4298      	cmp	r0, r3
{
1000f810:	b510      	push	{r4, lr}
1000f812:	4604      	mov	r4, r0
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f814:	d015      	beq.n	1000f842 <MXC_UART_SetFrequency+0x36>
1000f816:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f81a:	4298      	cmp	r0, r3
1000f81c:	d011      	beq.n	1000f842 <MXC_UART_SetFrequency+0x36>
1000f81e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f822:	4298      	cmp	r0, r3
1000f824:	d00d      	beq.n	1000f842 <MXC_UART_SetFrequency+0x36>
1000f826:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000f82a:	4298      	cmp	r0, r3
1000f82c:	d106      	bne.n	1000f83c <MXC_UART_SetFrequency+0x30>
    }

    // check if the uart is LPUART
    if (uart == MXC_UART3) {
        // OSR default value
        uart->osr = 5;
1000f82e:	2305      	movs	r3, #5

        switch (clock) {
1000f830:	2a02      	cmp	r2, #2
        uart->osr = 5;
1000f832:	6143      	str	r3, [r0, #20]
        switch (clock) {
1000f834:	d014      	beq.n	1000f860 <MXC_UART_SetFrequency+0x54>
1000f836:	2a04      	cmp	r2, #4
1000f838:	d032      	beq.n	1000f8a0 <MXC_UART_SetFrequency+0x94>
1000f83a:	b18a      	cbz	r2, 1000f860 <MXC_UART_SetFrequency+0x54>
        return E_BAD_PARAM;
1000f83c:	f06f 0002 	mvn.w	r0, #2
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
    }

    return frequency;
}
1000f840:	bd10      	pop	{r4, pc}
        if (clock == MXC_UART_ERTCO_CLK) {
1000f842:	2a04      	cmp	r2, #4
1000f844:	d0fa      	beq.n	1000f83c <MXC_UART_SetFrequency+0x30>
        frequency = MXC_UART_RevB_SetFrequency((mxc_uart_revb_regs_t *)uart, baud, clock);
1000f846:	4620      	mov	r0, r4
1000f848:	f000 f8d8 	bl	1000f9fc <MXC_UART_RevB_SetFrequency>
    if (frequency > 0) {
1000f84c:	2800      	cmp	r0, #0
1000f84e:	ddf7      	ble.n	1000f840 <MXC_UART_SetFrequency+0x34>
        uart->ctrl |= MXC_F_UART_CTRL_BCLKEN;
1000f850:	6823      	ldr	r3, [r4, #0]
1000f852:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
1000f856:	6023      	str	r3, [r4, #0]
        while (((uart->ctrl & MXC_F_UART_CTRL_BCLKRDY) >> MXC_F_UART_CTRL_BCLKRDY_POS) == 0) {}
1000f858:	6823      	ldr	r3, [r4, #0]
1000f85a:	031b      	lsls	r3, r3, #12
1000f85c:	d5fc      	bpl.n	1000f858 <MXC_UART_SetFrequency+0x4c>
}
1000f85e:	bd10      	pop	{r4, pc}
            clkDiv = ((IBRO_FREQ) / baud);
1000f860:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
1000f864:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((IBRO_FREQ) % baud);
1000f868:	fb01 f203 	mul.w	r2, r1, r3
1000f86c:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        if (!clkDiv || mod > (baud / 2)) {
1000f870:	b113      	cbz	r3, 1000f878 <MXC_UART_SetFrequency+0x6c>
1000f872:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1000f876:	d900      	bls.n	1000f87a <MXC_UART_SetFrequency+0x6e>
            clkDiv++;
1000f878:	3301      	adds	r3, #1
        uart->clkdiv = clkDiv;
1000f87a:	4a17      	ldr	r2, [pc, #92]	@ (1000f8d8 <MXC_UART_SetFrequency+0xcc>)
1000f87c:	6113      	str	r3, [r2, #16]
        return E_BAD_PARAM;
    }

    // check if UARt is LP UART
    if (uart == MXC_UART3) {
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
1000f87e:	6810      	ldr	r0, [r2, #0]
1000f880:	f400 3040 	and.w	r0, r0, #196608	@ 0x30000
1000f884:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
1000f888:	d005      	beq.n	1000f896 <MXC_UART_SetFrequency+0x8a>
            periphClock = ERTCO_FREQ * 2;
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1000f88a:	6813      	ldr	r3, [r2, #0]
1000f88c:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000f890:	d1d4      	bne.n	1000f83c <MXC_UART_SetFrequency+0x30>
1000f892:	f44f 00e1 	mov.w	r0, #7372800	@ 0x708000
                   MXC_S_UART_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
            periphClock = IBRO_FREQ;
        } else {
            return E_BAD_PARAM;
        }
        return (periphClock / uart->clkdiv);
1000f896:	4b10      	ldr	r3, [pc, #64]	@ (1000f8d8 <MXC_UART_SetFrequency+0xcc>)
1000f898:	691b      	ldr	r3, [r3, #16]
1000f89a:	fbb0 f0f3 	udiv	r0, r0, r3
1000f89e:	e7d5      	b.n	1000f84c <MXC_UART_SetFrequency+0x40>
            uart->ctrl |= MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000f8a0:	6803      	ldr	r3, [r0, #0]
1000f8a2:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
1000f8a6:	6003      	str	r3, [r0, #0]
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1000f8a8:	6803      	ldr	r3, [r0, #0]
            if (baud > 2400) {
1000f8aa:	f5b1 6f16 	cmp.w	r1, #2400	@ 0x960
            uart->ctrl |= MXC_F_UART_CTRL_FDM;
1000f8ae:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
1000f8b2:	6003      	str	r3, [r0, #0]
            if (baud > 2400) {
1000f8b4:	d90a      	bls.n	1000f8cc <MXC_UART_SetFrequency+0xc0>
                uart->osr = 0;
1000f8b6:	2300      	movs	r3, #0
1000f8b8:	6143      	str	r3, [r0, #20]
            clkDiv = ((ERTCO_FREQ * 2) / baud);
1000f8ba:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
1000f8be:	fbb3 f3f1 	udiv	r3, r3, r1
            mod = ((ERTCO_FREQ * 2) % baud);
1000f8c2:	fb01 f203 	mul.w	r2, r1, r3
1000f8c6:	f5c2 3280 	rsb	r2, r2, #65536	@ 0x10000
1000f8ca:	e7d1      	b.n	1000f870 <MXC_UART_SetFrequency+0x64>
                uart->osr = 1;
1000f8cc:	2301      	movs	r3, #1
1000f8ce:	6143      	str	r3, [r0, #20]
1000f8d0:	e7f3      	b.n	1000f8ba <MXC_UART_SetFrequency+0xae>
1000f8d2:	bf00      	nop
1000f8d4:	40042000 	.word	0x40042000
1000f8d8:	40081400 	.word	0x40081400

1000f8dc <MXC_UART_GetFrequency>:
    if (MXC_UART_GET_IDX(uart) < 0) {
1000f8dc:	4b12      	ldr	r3, [pc, #72]	@ (1000f928 <MXC_UART_GetFrequency+0x4c>)
1000f8de:	4298      	cmp	r0, r3
1000f8e0:	d01c      	beq.n	1000f91c <MXC_UART_GetFrequency+0x40>
1000f8e2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f8e6:	4298      	cmp	r0, r3
1000f8e8:	d018      	beq.n	1000f91c <MXC_UART_GetFrequency+0x40>
1000f8ea:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f8ee:	4298      	cmp	r0, r3
1000f8f0:	d014      	beq.n	1000f91c <MXC_UART_GetFrequency+0x40>
1000f8f2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000f8f6:	4298      	cmp	r0, r3
1000f8f8:	d112      	bne.n	1000f920 <MXC_UART_GetFrequency+0x44>
        if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) == MXC_S_UART_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
1000f8fa:	6803      	ldr	r3, [r0, #0]
1000f8fc:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000f900:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1000f904:	d005      	beq.n	1000f912 <MXC_UART_GetFrequency+0x36>
        } else if ((uart->ctrl & MXC_F_UART_CTRL_BCLKSRC) ==
1000f906:	6803      	ldr	r3, [r0, #0]
1000f908:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000f90c:	d108      	bne.n	1000f920 <MXC_UART_GetFrequency+0x44>
1000f90e:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        return (periphClock / uart->clkdiv);
1000f912:	4a06      	ldr	r2, [pc, #24]	@ (1000f92c <MXC_UART_GetFrequency+0x50>)
1000f914:	6910      	ldr	r0, [r2, #16]
1000f916:	fbb3 f0f0 	udiv	r0, r3, r0
1000f91a:	4770      	bx	lr
    } else {
        return MXC_UART_RevB_GetFrequency((mxc_uart_revb_regs_t *)uart);
1000f91c:	f000 b8ba 	b.w	1000fa94 <MXC_UART_RevB_GetFrequency>
        return E_BAD_PARAM;
1000f920:	f06f 0002 	mvn.w	r0, #2
    }
}
1000f924:	4770      	bx	lr
1000f926:	bf00      	nop
1000f928:	40042000 	.word	0x40042000
1000f92c:	40081400 	.word	0x40081400

1000f930 <MXC_UART_SetDataSize>:

int MXC_UART_SetDataSize(mxc_uart_regs_t *uart, int dataSize)
{
    return MXC_UART_RevB_SetDataSize((mxc_uart_revb_regs_t *)uart, dataSize);
1000f930:	f000 b8f0 	b.w	1000fb14 <MXC_UART_RevB_SetDataSize>

1000f934 <MXC_UART_SetStopBits>:
}

int MXC_UART_SetStopBits(mxc_uart_regs_t *uart, mxc_uart_stop_t stopBits)
{
    return MXC_UART_RevB_SetStopBits((mxc_uart_revb_regs_t *)uart, stopBits);
1000f934:	f000 b90e 	b.w	1000fb54 <MXC_UART_RevB_SetStopBits>

1000f938 <MXC_UART_SetParity>:
}

int MXC_UART_SetParity(mxc_uart_regs_t *uart, mxc_uart_parity_t parity)
{
    return MXC_UART_RevB_SetParity((mxc_uart_revb_regs_t *)uart, parity);
1000f938:	f000 b930 	b.w	1000fb9c <MXC_UART_RevB_SetParity>

1000f93c <MXC_UART_ReadCharacterRaw>:
    return MXC_UART_RevB_AbortTransmission((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_ReadCharacterRaw(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_ReadCharacterRaw((mxc_uart_revb_regs_t *)uart);
1000f93c:	f000 b984 	b.w	1000fc48 <MXC_UART_RevB_ReadCharacterRaw>

1000f940 <MXC_UART_WriteCharacterRaw>:
}

int MXC_UART_WriteCharacterRaw(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_RevB_WriteCharacterRaw((mxc_uart_revb_regs_t *)uart, character);
1000f940:	f000 b99e 	b.w	1000fc80 <MXC_UART_RevB_WriteCharacterRaw>

1000f944 <MXC_UART_ReadCharacter>:
}

int MXC_UART_ReadCharacter(mxc_uart_regs_t *uart)
{
    return MXC_UART_Common_ReadCharacter(uart);
1000f944:	f000 b808 	b.w	1000f958 <MXC_UART_Common_ReadCharacter>

1000f948 <MXC_UART_WriteCharacter>:
}

int MXC_UART_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
    return MXC_UART_Common_WriteCharacter(uart, character);
1000f948:	f000 b812 	b.w	1000f970 <MXC_UART_Common_WriteCharacter>

1000f94c <MXC_UART_GetRXFIFOAvailable>:
    return MXC_UART_RevB_ReadRXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetRXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetRXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
1000f94c:	f000 b9b6 	b.w	1000fcbc <MXC_UART_RevB_GetRXFIFOAvailable>

1000f950 <MXC_UART_GetTXFIFOAvailable>:
    return MXC_UART_RevB_WriteTXFIFODMA((mxc_uart_revb_regs_t *)uart, bytes, len, callback, config);
}

unsigned int MXC_UART_GetTXFIFOAvailable(mxc_uart_regs_t *uart)
{
    return MXC_UART_RevB_GetTXFIFOAvailable((mxc_uart_revb_regs_t *)uart);
1000f950:	f000 b9b8 	b.w	1000fcc4 <MXC_UART_RevB_GetTXFIFOAvailable>

1000f954 <MXC_UART_SetRXThreshold>:
    return MXC_UART_RevB_ClearTXFIFO((mxc_uart_revb_regs_t *)uart);
}

int MXC_UART_SetRXThreshold(mxc_uart_regs_t *uart, unsigned int numBytes)
{
    return MXC_UART_RevB_SetRXThreshold((mxc_uart_revb_regs_t *)uart, numBytes);
1000f954:	f000 b9bc 	b.w	1000fcd0 <MXC_UART_RevB_SetRXThreshold>

1000f958 <MXC_UART_Common_ReadCharacter>:

#include "uart_common.h"
#include "uart.h"

int MXC_UART_Common_ReadCharacter(mxc_uart_regs_t *uart)
{
1000f958:	b510      	push	{r4, lr}
1000f95a:	4604      	mov	r4, r0
    // Wait until FIFO has a character ready.
    while (MXC_UART_GetRXFIFOAvailable(uart) < 1) {}
1000f95c:	4620      	mov	r0, r4
1000f95e:	f7ff fff5 	bl	1000f94c <MXC_UART_GetRXFIFOAvailable>
1000f962:	2800      	cmp	r0, #0
1000f964:	d0fa      	beq.n	1000f95c <MXC_UART_Common_ReadCharacter+0x4>

    // Read the character using the non-blocking function.
    return MXC_UART_ReadCharacterRaw(uart);
1000f966:	4620      	mov	r0, r4
}
1000f968:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return MXC_UART_ReadCharacterRaw(uart);
1000f96c:	f7ff bfe6 	b.w	1000f93c <MXC_UART_ReadCharacterRaw>

1000f970 <MXC_UART_Common_WriteCharacter>:

int MXC_UART_Common_WriteCharacter(mxc_uart_regs_t *uart, uint8_t character)
{
1000f970:	b538      	push	{r3, r4, r5, lr}
1000f972:	4604      	mov	r4, r0
1000f974:	460d      	mov	r5, r1
    // Wait until FIFO has space for the character.
    while (MXC_UART_GetTXFIFOAvailable(uart) < 1) {}
1000f976:	4620      	mov	r0, r4
1000f978:	f7ff ffea 	bl	1000f950 <MXC_UART_GetTXFIFOAvailable>
1000f97c:	2800      	cmp	r0, #0
1000f97e:	d0fa      	beq.n	1000f976 <MXC_UART_Common_WriteCharacter+0x6>

    // Write the character using the non-blocking function.
    return MXC_UART_WriteCharacterRaw(uart, character);
1000f980:	4629      	mov	r1, r5
1000f982:	4620      	mov	r0, r4
}
1000f984:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    return MXC_UART_WriteCharacterRaw(uart, character);
1000f988:	f7ff bfda 	b.w	1000f940 <MXC_UART_WriteCharacterRaw>

1000f98c <MXC_UART_RevB_Init>:
/* ************************************************************************* */
int MXC_UART_RevB_Init(mxc_uart_revb_regs_t *uart, unsigned int baud, mxc_uart_revb_clock_t clock)
{
    int err;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000f98c:	4b1a      	ldr	r3, [pc, #104]	@ (1000f9f8 <MXC_UART_RevB_Init+0x6c>)
1000f98e:	4298      	cmp	r0, r3
{
1000f990:	b570      	push	{r4, r5, r6, lr}
1000f992:	4604      	mov	r4, r0
1000f994:	460d      	mov	r5, r1
1000f996:	4616      	mov	r6, r2
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000f998:	d00b      	beq.n	1000f9b2 <MXC_UART_RevB_Init+0x26>
1000f99a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f99e:	4298      	cmp	r0, r3
1000f9a0:	d007      	beq.n	1000f9b2 <MXC_UART_RevB_Init+0x26>
1000f9a2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000f9a6:	4298      	cmp	r0, r3
1000f9a8:	d003      	beq.n	1000f9b2 <MXC_UART_RevB_Init+0x26>
1000f9aa:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000f9ae:	4298      	cmp	r0, r3
1000f9b0:	d11f      	bne.n	1000f9f2 <MXC_UART_RevB_Init+0x66>
        return E_BAD_PARAM;
    }

    // Initialize UART
    if ((err = MXC_UART_SetRXThreshold((mxc_uart_regs_t *)uart, 1)) !=
1000f9b2:	2101      	movs	r1, #1
1000f9b4:	4620      	mov	r0, r4
1000f9b6:	f7ff ffcd 	bl	1000f954 <MXC_UART_SetRXThreshold>
1000f9ba:	b100      	cbz	r0, 1000f9be <MXC_UART_RevB_Init+0x32>
        E_NO_ERROR) {
        return err;
    }

    return E_NO_ERROR;
}
1000f9bc:	bd70      	pop	{r4, r5, r6, pc}
    if ((err = MXC_UART_SetDataSize((mxc_uart_regs_t *)uart, 8)) !=
1000f9be:	2108      	movs	r1, #8
1000f9c0:	4620      	mov	r0, r4
1000f9c2:	f7ff ffb5 	bl	1000f930 <MXC_UART_SetDataSize>
1000f9c6:	2800      	cmp	r0, #0
1000f9c8:	d1f8      	bne.n	1000f9bc <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetParity((mxc_uart_regs_t *)uart, MXC_UART_PARITY_DISABLE)) !=
1000f9ca:	4601      	mov	r1, r0
1000f9cc:	4620      	mov	r0, r4
1000f9ce:	f7ff ffb3 	bl	1000f938 <MXC_UART_SetParity>
1000f9d2:	2800      	cmp	r0, #0
1000f9d4:	d1f2      	bne.n	1000f9bc <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetStopBits((mxc_uart_regs_t *)uart, MXC_UART_STOP_1)) != E_NO_ERROR) {
1000f9d6:	4601      	mov	r1, r0
1000f9d8:	4620      	mov	r0, r4
1000f9da:	f7ff ffab 	bl	1000f934 <MXC_UART_SetStopBits>
1000f9de:	2800      	cmp	r0, #0
1000f9e0:	d1ec      	bne.n	1000f9bc <MXC_UART_RevB_Init+0x30>
    if ((err = MXC_UART_SetFrequency((mxc_uart_regs_t *)uart, baud, (mxc_uart_clock_t)clock)) <
1000f9e2:	4632      	mov	r2, r6
1000f9e4:	4629      	mov	r1, r5
1000f9e6:	4620      	mov	r0, r4
1000f9e8:	f7ff ff10 	bl	1000f80c <MXC_UART_SetFrequency>
1000f9ec:	ea00 70e0 	and.w	r0, r0, r0, asr #31
}
1000f9f0:	bd70      	pop	{r4, r5, r6, pc}
        return E_BAD_PARAM;
1000f9f2:	f06f 0002 	mvn.w	r0, #2
}
1000f9f6:	bd70      	pop	{r4, r5, r6, pc}
1000f9f8:	40042000 	.word	0x40042000

1000f9fc <MXC_UART_RevB_SetFrequency>:

int MXC_UART_RevB_SetFrequency(mxc_uart_revb_regs_t *uart, unsigned int baud,
                               mxc_uart_revb_clock_t clock)
{
    unsigned clkDiv = 0, mod = 0;
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000f9fc:	4b22      	ldr	r3, [pc, #136]	@ (1000fa88 <MXC_UART_RevB_SetFrequency+0x8c>)
1000f9fe:	4298      	cmp	r0, r3
1000fa00:	d00b      	beq.n	1000fa1a <MXC_UART_RevB_SetFrequency+0x1e>
1000fa02:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa06:	4298      	cmp	r0, r3
1000fa08:	d007      	beq.n	1000fa1a <MXC_UART_RevB_SetFrequency+0x1e>
1000fa0a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa0e:	4298      	cmp	r0, r3
1000fa10:	d003      	beq.n	1000fa1a <MXC_UART_RevB_SetFrequency+0x1e>
1000fa12:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fa16:	4298      	cmp	r0, r3
1000fa18:	d132      	bne.n	1000fa80 <MXC_UART_RevB_SetFrequency+0x84>
        return E_BAD_PARAM;
    }

    // OSR default value
    uart->osr = 5;
1000fa1a:	2305      	movs	r3, #5

    switch (clock) {
1000fa1c:	2a01      	cmp	r2, #1
{
1000fa1e:	b410      	push	{r4}
    uart->osr = 5;
1000fa20:	6143      	str	r3, [r0, #20]
    switch (clock) {
1000fa22:	d023      	beq.n	1000fa6c <MXC_UART_RevB_SetFrequency+0x70>
1000fa24:	2a02      	cmp	r2, #2
1000fa26:	d014      	beq.n	1000fa52 <MXC_UART_RevB_SetFrequency+0x56>
1000fa28:	b11a      	cbz	r2, 1000fa32 <MXC_UART_RevB_SetFrequency+0x36>
    if (!clkDiv || mod > (baud / 2)) {
        clkDiv++;
    }
    uart->clkdiv = clkDiv;
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
}
1000fa2a:	f06f 0002 	mvn.w	r0, #2
1000fa2e:	bc10      	pop	{r4}
1000fa30:	4770      	bx	lr
        clkDiv = (PeripheralClock / baud);
1000fa32:	4b16      	ldr	r3, [pc, #88]	@ (1000fa8c <MXC_UART_RevB_SetFrequency+0x90>)
1000fa34:	681a      	ldr	r2, [r3, #0]
1000fa36:	0852      	lsrs	r2, r2, #1
1000fa38:	fbb2 f3f1 	udiv	r3, r2, r1
        mod = (PeripheralClock % baud);
1000fa3c:	fb01 2213 	mls	r2, r1, r3, r2
    if (!clkDiv || mod > (baud / 2)) {
1000fa40:	b113      	cbz	r3, 1000fa48 <MXC_UART_RevB_SetFrequency+0x4c>
1000fa42:	ebb2 0f51 	cmp.w	r2, r1, lsr #1
1000fa46:	d900      	bls.n	1000fa4a <MXC_UART_RevB_SetFrequency+0x4e>
        clkDiv++;
1000fa48:	3301      	adds	r3, #1
}
1000fa4a:	bc10      	pop	{r4}
    uart->clkdiv = clkDiv;
1000fa4c:	6103      	str	r3, [r0, #16]
    return MXC_UART_GetFrequency((mxc_uart_regs_t *)uart);
1000fa4e:	f7ff bf45 	b.w	1000f8dc <MXC_UART_GetFrequency>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fa52:	6804      	ldr	r4, [r0, #0]
        clkDiv = (IBRO_FREQ / baud);
1000fa54:	f44f 03e1 	mov.w	r3, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fa58:	f444 3400 	orr.w	r4, r4, #131072	@ 0x20000
        clkDiv = (IBRO_FREQ / baud);
1000fa5c:	fbb3 f3f1 	udiv	r3, r3, r1
        mod = (IBRO_FREQ % baud);
1000fa60:	fb01 f203 	mul.w	r2, r1, r3
1000fa64:	f5c2 02e1 	rsb	r2, r2, #7372800	@ 0x708000
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2;
1000fa68:	6004      	str	r4, [r0, #0]
        break;
1000fa6a:	e7e9      	b.n	1000fa40 <MXC_UART_RevB_SetFrequency+0x44>
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000fa6c:	6804      	ldr	r4, [r0, #0]
        clkDiv = UART_EXTCLK_FREQ / baud;
1000fa6e:	4a08      	ldr	r2, [pc, #32]	@ (1000fa90 <MXC_UART_RevB_SetFrequency+0x94>)
1000fa70:	fbb2 f3f1 	udiv	r3, r2, r1
        uart->ctrl |= MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK;
1000fa74:	f444 3480 	orr.w	r4, r4, #65536	@ 0x10000
1000fa78:	6004      	str	r4, [r0, #0]
        mod = UART_EXTCLK_FREQ % baud;
1000fa7a:	fb01 2213 	mls	r2, r1, r3, r2
        break;
1000fa7e:	e7df      	b.n	1000fa40 <MXC_UART_RevB_SetFrequency+0x44>
}
1000fa80:	f06f 0002 	mvn.w	r0, #2
1000fa84:	4770      	bx	lr
1000fa86:	bf00      	nop
1000fa88:	40042000 	.word	0x40042000
1000fa8c:	20000e58 	.word	0x20000e58
1000fa90:	047868c0 	.word	0x047868c0

1000fa94 <MXC_UART_RevB_GetFrequency>:

int MXC_UART_RevB_GetFrequency(mxc_uart_revb_regs_t *uart)
{
    int periphClock = 0;

    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fa94:	4b1c      	ldr	r3, [pc, #112]	@ (1000fb08 <MXC_UART_RevB_GetFrequency+0x74>)
1000fa96:	4298      	cmp	r0, r3
1000fa98:	d00b      	beq.n	1000fab2 <MXC_UART_RevB_GetFrequency+0x1e>
1000fa9a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fa9e:	4298      	cmp	r0, r3
1000faa0:	d007      	beq.n	1000fab2 <MXC_UART_RevB_GetFrequency+0x1e>
1000faa2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000faa6:	4298      	cmp	r0, r3
1000faa8:	d003      	beq.n	1000fab2 <MXC_UART_RevB_GetFrequency+0x1e>
1000faaa:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000faae:	4298      	cmp	r0, r3
1000fab0:	d122      	bne.n	1000faf8 <MXC_UART_RevB_GetFrequency+0x64>
        return E_BAD_PARAM;
    }

    if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1000fab2:	6803      	ldr	r3, [r0, #0]
1000fab4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000fab8:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
1000fabc:	d017      	beq.n	1000faee <MXC_UART_RevB_GetFrequency+0x5a>
        MXC_S_UART_REVB_CTRL_BCLKSRC_EXTERNAL_CLOCK) {
        periphClock = UART_EXTCLK_FREQ;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) ==
1000fabe:	6803      	ldr	r3, [r0, #0]
1000fac0:	f413 3f40 	tst.w	r3, #196608	@ 0x30000
1000fac4:	d00c      	beq.n	1000fae0 <MXC_UART_RevB_GetFrequency+0x4c>
               MXC_S_UART_REVB_CTRL_BCLKSRC_PERIPHERAL_CLOCK) {
        periphClock = PeripheralClock;
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK2) {
1000fac6:	6803      	ldr	r3, [r0, #0]
1000fac8:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
1000facc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
1000fad0:	bf08      	it	eq
1000fad2:	f44f 03e1 	moveq.w	r3, #7372800	@ 0x708000
1000fad6:	d112      	bne.n	1000fafe <MXC_UART_RevB_GetFrequency+0x6a>
#endif
    } else {
        return E_BAD_PARAM;
    }

    return (periphClock / uart->clkdiv);
1000fad8:	6900      	ldr	r0, [r0, #16]
1000fada:	fbb3 f0f0 	udiv	r0, r3, r0
1000fade:	4770      	bx	lr
        periphClock = PeripheralClock;
1000fae0:	4b0a      	ldr	r3, [pc, #40]	@ (1000fb0c <MXC_UART_RevB_GetFrequency+0x78>)
    return (periphClock / uart->clkdiv);
1000fae2:	6900      	ldr	r0, [r0, #16]
        periphClock = PeripheralClock;
1000fae4:	681b      	ldr	r3, [r3, #0]
1000fae6:	085b      	lsrs	r3, r3, #1
    return (periphClock / uart->clkdiv);
1000fae8:	fbb3 f0f0 	udiv	r0, r3, r0
1000faec:	4770      	bx	lr
1000faee:	4b08      	ldr	r3, [pc, #32]	@ (1000fb10 <MXC_UART_RevB_GetFrequency+0x7c>)
1000faf0:	6900      	ldr	r0, [r0, #16]
1000faf2:	fbb3 f0f0 	udiv	r0, r3, r0
1000faf6:	4770      	bx	lr
        return E_BAD_PARAM;
1000faf8:	f06f 0002 	mvn.w	r0, #2
}
1000fafc:	4770      	bx	lr
    } else if ((uart->ctrl & MXC_F_UART_REVB_CTRL_BCLKSRC) == MXC_S_UART_REVB_CTRL_BCLKSRC_CLK3) {
1000fafe:	6803      	ldr	r3, [r0, #0]
        return E_BAD_PARAM;
1000fb00:	f06f 0002 	mvn.w	r0, #2
        return E_BAD_PARAM;
1000fb04:	4770      	bx	lr
1000fb06:	bf00      	nop
1000fb08:	40042000 	.word	0x40042000
1000fb0c:	20000e58 	.word	0x20000e58
1000fb10:	047868c0 	.word	0x047868c0

1000fb14 <MXC_UART_RevB_SetDataSize>:

int MXC_UART_RevB_SetDataSize(mxc_uart_revb_regs_t *uart, int dataSize)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fb14:	4a0e      	ldr	r2, [pc, #56]	@ (1000fb50 <MXC_UART_RevB_SetDataSize+0x3c>)
1000fb16:	4290      	cmp	r0, r2
{
1000fb18:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fb1a:	d00b      	beq.n	1000fb34 <MXC_UART_RevB_SetDataSize+0x20>
1000fb1c:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fb20:	4290      	cmp	r0, r2
1000fb22:	d007      	beq.n	1000fb34 <MXC_UART_RevB_SetDataSize+0x20>
1000fb24:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fb28:	4290      	cmp	r0, r2
1000fb2a:	d003      	beq.n	1000fb34 <MXC_UART_RevB_SetDataSize+0x20>
1000fb2c:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fb30:	4290      	cmp	r0, r2
1000fb32:	d10a      	bne.n	1000fb4a <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    if (dataSize < 5 || dataSize > 8) {
1000fb34:	3905      	subs	r1, #5
1000fb36:	2903      	cmp	r1, #3
1000fb38:	d807      	bhi.n	1000fb4a <MXC_UART_RevB_SetDataSize+0x36>
        return E_BAD_PARAM;
    }

    dataSize = (dataSize - 5) << MXC_F_UART_REVB_CTRL_CHAR_SIZE_POS;

    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1000fb3a:	681a      	ldr	r2, [r3, #0]
1000fb3c:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
1000fb40:	ea42 2281 	orr.w	r2, r2, r1, lsl #10

    return E_NO_ERROR;
1000fb44:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_CHAR_SIZE, dataSize);
1000fb46:	601a      	str	r2, [r3, #0]
    return E_NO_ERROR;
1000fb48:	4770      	bx	lr
        return E_BAD_PARAM;
1000fb4a:	f06f 0002 	mvn.w	r0, #2
}
1000fb4e:	4770      	bx	lr
1000fb50:	40042000 	.word	0x40042000

1000fb54 <MXC_UART_RevB_SetStopBits>:

int MXC_UART_RevB_SetStopBits(mxc_uart_revb_regs_t *uart, mxc_uart_stop_t stopBits)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fb54:	4b10      	ldr	r3, [pc, #64]	@ (1000fb98 <MXC_UART_RevB_SetStopBits+0x44>)
1000fb56:	4298      	cmp	r0, r3
1000fb58:	d00b      	beq.n	1000fb72 <MXC_UART_RevB_SetStopBits+0x1e>
1000fb5a:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fb5e:	4298      	cmp	r0, r3
1000fb60:	d007      	beq.n	1000fb72 <MXC_UART_RevB_SetStopBits+0x1e>
1000fb62:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fb66:	4298      	cmp	r0, r3
1000fb68:	d003      	beq.n	1000fb72 <MXC_UART_RevB_SetStopBits+0x1e>
1000fb6a:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fb6e:	4298      	cmp	r0, r3
1000fb70:	d108      	bne.n	1000fb84 <MXC_UART_RevB_SetStopBits+0x30>
        return E_BAD_PARAM;
    }

    switch (stopBits) {
1000fb72:	b151      	cbz	r1, 1000fb8a <MXC_UART_RevB_SetStopBits+0x36>
1000fb74:	2901      	cmp	r1, #1
1000fb76:	d105      	bne.n	1000fb84 <MXC_UART_RevB_SetStopBits+0x30>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
                     0 << MXC_F_UART_REVB_CTRL_STOPBITS_POS);
        break;

    case MXC_UART_STOP_2:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1000fb78:	6803      	ldr	r3, [r0, #0]
1000fb7a:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
1000fb7e:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
1000fb80:	2000      	movs	r0, #0
1000fb82:	4770      	bx	lr
1000fb84:	f06f 0002 	mvn.w	r0, #2
}
1000fb88:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_STOPBITS,
1000fb8a:	6803      	ldr	r3, [r0, #0]
1000fb8c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
1000fb90:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1000fb92:	2000      	movs	r0, #0
1000fb94:	4770      	bx	lr
1000fb96:	bf00      	nop
1000fb98:	40042000 	.word	0x40042000

1000fb9c <MXC_UART_RevB_SetParity>:

int MXC_UART_RevB_SetParity(mxc_uart_revb_regs_t *uart, mxc_uart_parity_t parity)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fb9c:	4b29      	ldr	r3, [pc, #164]	@ (1000fc44 <MXC_UART_RevB_SetParity+0xa8>)
1000fb9e:	4298      	cmp	r0, r3
1000fba0:	d00b      	beq.n	1000fbba <MXC_UART_RevB_SetParity+0x1e>
1000fba2:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fba6:	4298      	cmp	r0, r3
1000fba8:	d007      	beq.n	1000fbba <MXC_UART_RevB_SetParity+0x1e>
1000fbaa:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fbae:	4298      	cmp	r0, r3
1000fbb0:	d003      	beq.n	1000fbba <MXC_UART_RevB_SetParity+0x1e>
1000fbb2:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fbb6:	4298      	cmp	r0, r3
1000fbb8:	d141      	bne.n	1000fc3e <MXC_UART_RevB_SetParity+0xa2>
        return E_BAD_PARAM;
    }

    switch (parity) {
1000fbba:	2904      	cmp	r1, #4
1000fbbc:	d83f      	bhi.n	1000fc3e <MXC_UART_RevB_SetParity+0xa2>
1000fbbe:	e8df f001 	tbb	[pc, r1]
1000fbc2:	1711      	.short	0x1711
1000fbc4:	3124      	.short	0x3124
1000fbc6:	03          	.byte	0x03
1000fbc7:	00          	.byte	0x00
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
        break;

    case MXC_UART_PARITY_ODD_1:
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fbc8:	6803      	ldr	r3, [r0, #0]
1000fbca:	f043 0310 	orr.w	r3, r3, #16
1000fbce:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fbd0:	6803      	ldr	r3, [r0, #0]
1000fbd2:	f043 0320 	orr.w	r3, r3, #32
1000fbd6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fbd8:	6803      	ldr	r3, [r0, #0]
1000fbda:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fbde:	6003      	str	r3, [r0, #0]
    default:
        return E_BAD_PARAM;
        break;
    }

    return E_NO_ERROR;
1000fbe0:	2000      	movs	r0, #0
1000fbe2:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 0 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fbe4:	6803      	ldr	r3, [r0, #0]
1000fbe6:	f023 0310 	bic.w	r3, r3, #16
1000fbea:	6003      	str	r3, [r0, #0]
    return E_NO_ERROR;
1000fbec:	2000      	movs	r0, #0
1000fbee:	4770      	bx	lr
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fbf0:	6803      	ldr	r3, [r0, #0]
1000fbf2:	f043 0310 	orr.w	r3, r3, #16
1000fbf6:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fbf8:	6803      	ldr	r3, [r0, #0]
1000fbfa:	f023 0320 	bic.w	r3, r3, #32
1000fbfe:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fc00:	6803      	ldr	r3, [r0, #0]
1000fc02:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fc06:	6003      	str	r3, [r0, #0]
        break;
1000fc08:	e7ea      	b.n	1000fbe0 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fc0a:	6803      	ldr	r3, [r0, #0]
1000fc0c:	f043 0310 	orr.w	r3, r3, #16
1000fc10:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 0 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fc12:	6803      	ldr	r3, [r0, #0]
1000fc14:	f023 0320 	bic.w	r3, r3, #32
1000fc18:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 1 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fc1a:	6803      	ldr	r3, [r0, #0]
1000fc1c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
1000fc20:	6003      	str	r3, [r0, #0]
        break;
1000fc22:	e7dd      	b.n	1000fbe0 <MXC_UART_RevB_SetParity+0x44>
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EN, 1 << MXC_F_UART_REVB_CTRL_PAR_EN_POS);
1000fc24:	6803      	ldr	r3, [r0, #0]
1000fc26:	f043 0310 	orr.w	r3, r3, #16
1000fc2a:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_EO, 1 << MXC_F_UART_REVB_CTRL_PAR_EO_POS);
1000fc2c:	6803      	ldr	r3, [r0, #0]
1000fc2e:	f043 0320 	orr.w	r3, r3, #32
1000fc32:	6003      	str	r3, [r0, #0]
        MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_PAR_MD, 0 << MXC_F_UART_REVB_CTRL_PAR_MD_POS);
1000fc34:	6803      	ldr	r3, [r0, #0]
1000fc36:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
1000fc3a:	6003      	str	r3, [r0, #0]
        break;
1000fc3c:	e7d0      	b.n	1000fbe0 <MXC_UART_RevB_SetParity+0x44>
    switch (parity) {
1000fc3e:	f06f 0002 	mvn.w	r0, #2
}
1000fc42:	4770      	bx	lr
1000fc44:	40042000 	.word	0x40042000

1000fc48 <MXC_UART_RevB_ReadCharacterRaw>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_ReadCharacterRaw(mxc_uart_revb_regs_t *uart)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc48:	4b0c      	ldr	r3, [pc, #48]	@ (1000fc7c <MXC_UART_RevB_ReadCharacterRaw+0x34>)
1000fc4a:	4298      	cmp	r0, r3
1000fc4c:	d00b      	beq.n	1000fc66 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fc4e:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc52:	4298      	cmp	r0, r3
1000fc54:	d007      	beq.n	1000fc66 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fc56:	f503 5380 	add.w	r3, r3, #4096	@ 0x1000
1000fc5a:	4298      	cmp	r0, r3
1000fc5c:	d003      	beq.n	1000fc66 <MXC_UART_RevB_ReadCharacterRaw+0x1e>
1000fc5e:	f503 3375 	add.w	r3, r3, #250880	@ 0x3d400
1000fc62:	4298      	cmp	r0, r3
1000fc64:	d104      	bne.n	1000fc70 <MXC_UART_RevB_ReadCharacterRaw+0x28>
        return E_BAD_PARAM;
    }

    if (uart->status & MXC_F_UART_REVB_STATUS_RX_EM) {
1000fc66:	6843      	ldr	r3, [r0, #4]
1000fc68:	06db      	lsls	r3, r3, #27
1000fc6a:	d404      	bmi.n	1000fc76 <MXC_UART_RevB_ReadCharacterRaw+0x2e>
        return E_UNDERFLOW;
    }

    return uart->fifo;
1000fc6c:	6a00      	ldr	r0, [r0, #32]
1000fc6e:	4770      	bx	lr
        return E_BAD_PARAM;
1000fc70:	f06f 0002 	mvn.w	r0, #2
1000fc74:	4770      	bx	lr
        return E_UNDERFLOW;
1000fc76:	f06f 000c 	mvn.w	r0, #12
}
1000fc7a:	4770      	bx	lr
1000fc7c:	40042000 	.word	0x40042000

1000fc80 <MXC_UART_RevB_WriteCharacterRaw>:

int MXC_UART_RevB_WriteCharacterRaw(mxc_uart_revb_regs_t *uart, uint8_t character)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc80:	4a0d      	ldr	r2, [pc, #52]	@ (1000fcb8 <MXC_UART_RevB_WriteCharacterRaw+0x38>)
1000fc82:	4290      	cmp	r0, r2
{
1000fc84:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fc86:	d00b      	beq.n	1000fca0 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fc88:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fc8c:	4290      	cmp	r0, r2
1000fc8e:	d007      	beq.n	1000fca0 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fc90:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fc94:	4290      	cmp	r0, r2
1000fc96:	d003      	beq.n	1000fca0 <MXC_UART_RevB_WriteCharacterRaw+0x20>
1000fc98:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fc9c:	4290      	cmp	r0, r2
1000fc9e:	d105      	bne.n	1000fcac <MXC_UART_RevB_WriteCharacterRaw+0x2c>
        return E_BAD_PARAM;
    }

    // Require the TX FIFO to be empty, so that we write out the expected character
    // Return error if the FIFO is full
    if (uart->status & MXC_F_UART_REVB_STATUS_TX_FULL) {
1000fca0:	6858      	ldr	r0, [r3, #4]
1000fca2:	f010 0080 	ands.w	r0, r0, #128	@ 0x80
1000fca6:	d104      	bne.n	1000fcb2 <MXC_UART_RevB_WriteCharacterRaw+0x32>
        return E_OVERFLOW;
    }

    uart->fifo = character;
1000fca8:	6219      	str	r1, [r3, #32]

    return E_NO_ERROR;
1000fcaa:	4770      	bx	lr
        return E_BAD_PARAM;
1000fcac:	f06f 0002 	mvn.w	r0, #2
1000fcb0:	4770      	bx	lr
        return E_OVERFLOW;
1000fcb2:	f06f 000b 	mvn.w	r0, #11
}
1000fcb6:	4770      	bx	lr
1000fcb8:	40042000 	.word	0x40042000

1000fcbc <MXC_UART_RevB_GetRXFIFOAvailable>:
    return read;
}

unsigned int MXC_UART_RevB_GetRXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    return (uart->status & MXC_F_UART_REVB_STATUS_RX_LVL) >> MXC_F_UART_REVB_STATUS_RX_LVL_POS;
1000fcbc:	6840      	ldr	r0, [r0, #4]
}
1000fcbe:	f3c0 2003 	ubfx	r0, r0, #8, #4
1000fcc2:	4770      	bx	lr

1000fcc4 <MXC_UART_RevB_GetTXFIFOAvailable>:
    return written;
}

unsigned int MXC_UART_RevB_GetTXFIFOAvailable(mxc_uart_revb_regs_t *uart)
{
    int txCnt = (uart->status & MXC_F_UART_REVB_STATUS_TX_LVL) >> MXC_F_UART_REVB_STATUS_TX_LVL_POS;
1000fcc4:	6840      	ldr	r0, [r0, #4]
1000fcc6:	f3c0 3003 	ubfx	r0, r0, #12, #4
    return MXC_UART_FIFO_DEPTH - txCnt;
}
1000fcca:	f1c0 0008 	rsb	r0, r0, #8
1000fcce:	4770      	bx	lr

1000fcd0 <MXC_UART_RevB_SetRXThreshold>:
    return E_NO_ERROR;
}

int MXC_UART_RevB_SetRXThreshold(mxc_uart_revb_regs_t *uart, unsigned int numBytes)
{
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fcd0:	4a0e      	ldr	r2, [pc, #56]	@ (1000fd0c <MXC_UART_RevB_SetRXThreshold+0x3c>)
1000fcd2:	4290      	cmp	r0, r2
{
1000fcd4:	4603      	mov	r3, r0
    if (MXC_UART_GET_IDX((mxc_uart_regs_t *)uart) < 0) {
1000fcd6:	d00b      	beq.n	1000fcf0 <MXC_UART_RevB_SetRXThreshold+0x20>
1000fcd8:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fcdc:	4290      	cmp	r0, r2
1000fcde:	d007      	beq.n	1000fcf0 <MXC_UART_RevB_SetRXThreshold+0x20>
1000fce0:	f502 5280 	add.w	r2, r2, #4096	@ 0x1000
1000fce4:	4290      	cmp	r0, r2
1000fce6:	d003      	beq.n	1000fcf0 <MXC_UART_RevB_SetRXThreshold+0x20>
1000fce8:	f502 3275 	add.w	r2, r2, #250880	@ 0x3d400
1000fcec:	4290      	cmp	r0, r2
1000fcee:	d109      	bne.n	1000fd04 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    if (numBytes < 1 || numBytes > MXC_UART_FIFO_DEPTH) {
1000fcf0:	1e4a      	subs	r2, r1, #1
1000fcf2:	2a07      	cmp	r2, #7
1000fcf4:	d806      	bhi.n	1000fd04 <MXC_UART_RevB_SetRXThreshold+0x34>
        return E_BAD_PARAM;
    }

    numBytes <<= MXC_F_UART_REVB_CTRL_RX_THD_VAL_POS;
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
1000fcf6:	681a      	ldr	r2, [r3, #0]
1000fcf8:	f022 020f 	bic.w	r2, r2, #15
1000fcfc:	4311      	orrs	r1, r2

    return E_NO_ERROR;
1000fcfe:	2000      	movs	r0, #0
    MXC_SETFIELD(uart->ctrl, MXC_F_UART_REVB_CTRL_RX_THD_VAL, numBytes);
1000fd00:	6019      	str	r1, [r3, #0]
    return E_NO_ERROR;
1000fd02:	4770      	bx	lr
        return E_BAD_PARAM;
1000fd04:	f06f 0002 	mvn.w	r0, #2
}
1000fd08:	4770      	bx	lr
1000fd0a:	bf00      	nop
1000fd0c:	40042000 	.word	0x40042000

1000fd10 <MXC_GPIO_Common_Init>:
static void *cbparam[MXC_CFG_GPIO_INSTANCES][MXC_CFG_GPIO_PINS_PORT];
static uint8_t initialized = 0;

/* **** Functions **** */
int MXC_GPIO_Common_Init(uint32_t portmask)
{
1000fd10:	b510      	push	{r4, lr}
    if (!initialized) {
1000fd12:	4c06      	ldr	r4, [pc, #24]	@ (1000fd2c <MXC_GPIO_Common_Init+0x1c>)
1000fd14:	7821      	ldrb	r1, [r4, #0]
1000fd16:	b931      	cbnz	r1, 1000fd26 <MXC_GPIO_Common_Init+0x16>
        int i, j;

        for (i = 0; i < MXC_CFG_GPIO_INSTANCES; i++) {
            // Initialize call back arrays
            for (j = 0; j < MXC_CFG_GPIO_PINS_PORT; j++) {
                callback[i][j] = NULL;
1000fd18:	4805      	ldr	r0, [pc, #20]	@ (1000fd30 <MXC_GPIO_Common_Init+0x20>)
1000fd1a:	f44f 7200 	mov.w	r2, #512	@ 0x200
1000fd1e:	f000 fafd 	bl	1001031c <memset>
            }
        }

        initialized = 1;
1000fd22:	2301      	movs	r3, #1
1000fd24:	7023      	strb	r3, [r4, #0]
    }

    return E_NO_ERROR;
}
1000fd26:	2000      	movs	r0, #0
1000fd28:	bd10      	pop	{r4, pc}
1000fd2a:	bf00      	nop
1000fd2c:	20000740 	.word	0x20000740
1000fd30:	20000944 	.word	0x20000944

1000fd34 <MXC_GPIO_Common_Handler>:
    uint32_t stat;
    unsigned int pin;

    MXC_ASSERT(port < MXC_CFG_GPIO_INSTANCES);

    mxc_gpio_regs_t *gpio = MXC_GPIO_GET_GPIO(port);
1000fd34:	2803      	cmp	r0, #3
{
1000fd36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000fd38:	bf9a      	itte	ls
1000fd3a:	4b10      	ldrls	r3, [pc, #64]	@ (1000fd7c <MXC_GPIO_Common_Handler+0x48>)
1000fd3c:	f853 5020 	ldrls.w	r5, [r3, r0, lsl #2]
1000fd40:	2500      	movhi	r5, #0
1000fd42:	4607      	mov	r7, r0

    stat = MXC_GPIO_GetFlags(gpio);
1000fd44:	4628      	mov	r0, r5
1000fd46:	f7ff f913 	bl	1000ef70 <MXC_GPIO_GetFlags>
1000fd4a:	4604      	mov	r4, r0
    MXC_GPIO_ClearFlags(gpio, stat);
1000fd4c:	4601      	mov	r1, r0
1000fd4e:	4628      	mov	r0, r5
1000fd50:	f7ff f902 	bl	1000ef58 <MXC_GPIO_ClearFlags>

    pin = 0;

    while (stat) {
1000fd54:	b18c      	cbz	r4, 1000fd7a <MXC_GPIO_Common_Handler+0x46>
1000fd56:	4e0a      	ldr	r6, [pc, #40]	@ (1000fd80 <MXC_GPIO_Common_Handler+0x4c>)
1000fd58:	4d0a      	ldr	r5, [pc, #40]	@ (1000fd84 <MXC_GPIO_Common_Handler+0x50>)
1000fd5a:	eb06 16c7 	add.w	r6, r6, r7, lsl #7
1000fd5e:	eb05 15c7 	add.w	r5, r5, r7, lsl #7
        if (stat & 1) {
1000fd62:	07e3      	lsls	r3, r4, #31
1000fd64:	d503      	bpl.n	1000fd6e <MXC_GPIO_Common_Handler+0x3a>
            if (callback[port][pin]) {
1000fd66:	682b      	ldr	r3, [r5, #0]
1000fd68:	b10b      	cbz	r3, 1000fd6e <MXC_GPIO_Common_Handler+0x3a>
                callback[port][pin](cbparam[port][pin]);
1000fd6a:	6830      	ldr	r0, [r6, #0]
1000fd6c:	4798      	blx	r3
    while (stat) {
1000fd6e:	0864      	lsrs	r4, r4, #1
1000fd70:	f106 0604 	add.w	r6, r6, #4
1000fd74:	f105 0504 	add.w	r5, r5, #4
1000fd78:	d1f3      	bne.n	1000fd62 <MXC_GPIO_Common_Handler+0x2e>
        }

        pin++;
        stat >>= 1;
    }
}
1000fd7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
1000fd7c:	10017068 	.word	0x10017068
1000fd80:	20000744 	.word	0x20000744
1000fd84:	20000944 	.word	0x20000944

1000fd88 <__errno>:
1000fd88:	4b01      	ldr	r3, [pc, #4]	@ (1000fd90 <__errno+0x8>)
1000fd8a:	6818      	ldr	r0, [r3, #0]
1000fd8c:	4770      	bx	lr
1000fd8e:	bf00      	nop
1000fd90:	2000041c 	.word	0x2000041c

1000fd94 <_malloc_r>:
1000fd94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000fd98:	f101 050b 	add.w	r5, r1, #11
1000fd9c:	2d16      	cmp	r5, #22
1000fd9e:	b085      	sub	sp, #20
1000fda0:	4606      	mov	r6, r0
1000fda2:	d824      	bhi.n	1000fdee <_malloc_r+0x5a>
1000fda4:	2910      	cmp	r1, #16
1000fda6:	f200 80b1 	bhi.w	1000ff0c <_malloc_r+0x178>
1000fdaa:	f000 fb6f 	bl	1001048c <__malloc_lock>
1000fdae:	2510      	movs	r5, #16
1000fdb0:	2318      	movs	r3, #24
1000fdb2:	f04f 0c02 	mov.w	ip, #2
1000fdb6:	4fba      	ldr	r7, [pc, #744]	@ (100100a0 <_malloc_r+0x30c>)
1000fdb8:	443b      	add	r3, r7
1000fdba:	f1a3 0208 	sub.w	r2, r3, #8
1000fdbe:	685c      	ldr	r4, [r3, #4]
1000fdc0:	4294      	cmp	r4, r2
1000fdc2:	f000 8122 	beq.w	1001000a <_malloc_r+0x276>
1000fdc6:	6863      	ldr	r3, [r4, #4]
1000fdc8:	68e2      	ldr	r2, [r4, #12]
1000fdca:	68a1      	ldr	r1, [r4, #8]
1000fdcc:	f023 0303 	bic.w	r3, r3, #3
1000fdd0:	60ca      	str	r2, [r1, #12]
1000fdd2:	4423      	add	r3, r4
1000fdd4:	4630      	mov	r0, r6
1000fdd6:	6091      	str	r1, [r2, #8]
1000fdd8:	685a      	ldr	r2, [r3, #4]
1000fdda:	f042 0201 	orr.w	r2, r2, #1
1000fdde:	605a      	str	r2, [r3, #4]
1000fde0:	3408      	adds	r4, #8
1000fde2:	f000 fb59 	bl	10010498 <__malloc_unlock>
1000fde6:	4620      	mov	r0, r4
1000fde8:	b005      	add	sp, #20
1000fdea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000fdee:	f035 0507 	bics.w	r5, r5, #7
1000fdf2:	f100 808b 	bmi.w	1000ff0c <_malloc_r+0x178>
1000fdf6:	42a9      	cmp	r1, r5
1000fdf8:	f200 8088 	bhi.w	1000ff0c <_malloc_r+0x178>
1000fdfc:	f000 fb46 	bl	1001048c <__malloc_lock>
1000fe00:	f5b5 7ffc 	cmp.w	r5, #504	@ 0x1f8
1000fe04:	f0c0 8173 	bcc.w	100100ee <_malloc_r+0x35a>
1000fe08:	0a6b      	lsrs	r3, r5, #9
1000fe0a:	f000 8083 	beq.w	1000ff14 <_malloc_r+0x180>
1000fe0e:	2b04      	cmp	r3, #4
1000fe10:	f200 8122 	bhi.w	10010058 <_malloc_r+0x2c4>
1000fe14:	09ab      	lsrs	r3, r5, #6
1000fe16:	f103 0c39 	add.w	ip, r3, #57	@ 0x39
1000fe1a:	f103 0e38 	add.w	lr, r3, #56	@ 0x38
1000fe1e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
1000fe22:	4f9f      	ldr	r7, [pc, #636]	@ (100100a0 <_malloc_r+0x30c>)
1000fe24:	443b      	add	r3, r7
1000fe26:	f1a3 0008 	sub.w	r0, r3, #8
1000fe2a:	685c      	ldr	r4, [r3, #4]
1000fe2c:	42a0      	cmp	r0, r4
1000fe2e:	d107      	bne.n	1000fe40 <_malloc_r+0xac>
1000fe30:	e00d      	b.n	1000fe4e <_malloc_r+0xba>
1000fe32:	2a00      	cmp	r2, #0
1000fe34:	68e1      	ldr	r1, [r4, #12]
1000fe36:	f280 80e2 	bge.w	1000fffe <_malloc_r+0x26a>
1000fe3a:	4288      	cmp	r0, r1
1000fe3c:	d007      	beq.n	1000fe4e <_malloc_r+0xba>
1000fe3e:	460c      	mov	r4, r1
1000fe40:	6863      	ldr	r3, [r4, #4]
1000fe42:	f023 0303 	bic.w	r3, r3, #3
1000fe46:	1b5a      	subs	r2, r3, r5
1000fe48:	2a0f      	cmp	r2, #15
1000fe4a:	ddf2      	ble.n	1000fe32 <_malloc_r+0x9e>
1000fe4c:	46f4      	mov	ip, lr
1000fe4e:	f8df 8254 	ldr.w	r8, [pc, #596]	@ 100100a4 <_malloc_r+0x310>
1000fe52:	693c      	ldr	r4, [r7, #16]
1000fe54:	4544      	cmp	r4, r8
1000fe56:	f000 80bf 	beq.w	1000ffd8 <_malloc_r+0x244>
1000fe5a:	6863      	ldr	r3, [r4, #4]
1000fe5c:	f023 0903 	bic.w	r9, r3, #3
1000fe60:	eba9 0305 	sub.w	r3, r9, r5
1000fe64:	2b0f      	cmp	r3, #15
1000fe66:	f300 8147 	bgt.w	100100f8 <_malloc_r+0x364>
1000fe6a:	2b00      	cmp	r3, #0
1000fe6c:	e9c7 8804 	strd	r8, r8, [r7, #16]
1000fe70:	f280 8131 	bge.w	100100d6 <_malloc_r+0x342>
1000fe74:	f5b9 7f00 	cmp.w	r9, #512	@ 0x200
1000fe78:	f8d7 e004 	ldr.w	lr, [r7, #4]
1000fe7c:	f080 80cc 	bcs.w	10010018 <_malloc_r+0x284>
1000fe80:	ea4f 01d9 	mov.w	r1, r9, lsr #3
1000fe84:	3101      	adds	r1, #1
1000fe86:	ea4f 1959 	mov.w	r9, r9, lsr #5
1000fe8a:	2301      	movs	r3, #1
1000fe8c:	fa03 f309 	lsl.w	r3, r3, r9
1000fe90:	f857 2031 	ldr.w	r2, [r7, r1, lsl #3]
1000fe94:	60a2      	str	r2, [r4, #8]
1000fe96:	ea4e 0e03 	orr.w	lr, lr, r3
1000fe9a:	eb07 03c1 	add.w	r3, r7, r1, lsl #3
1000fe9e:	3b08      	subs	r3, #8
1000fea0:	60e3      	str	r3, [r4, #12]
1000fea2:	f8c7 e004 	str.w	lr, [r7, #4]
1000fea6:	f847 4031 	str.w	r4, [r7, r1, lsl #3]
1000feaa:	60d4      	str	r4, [r2, #12]
1000feac:	ea4f 03ac 	mov.w	r3, ip, asr #2
1000feb0:	2001      	movs	r0, #1
1000feb2:	4098      	lsls	r0, r3
1000feb4:	4570      	cmp	r0, lr
1000feb6:	d834      	bhi.n	1000ff22 <_malloc_r+0x18e>
1000feb8:	ea10 0f0e 	tst.w	r0, lr
1000febc:	d107      	bne.n	1000fece <_malloc_r+0x13a>
1000febe:	f02c 0c03 	bic.w	ip, ip, #3
1000fec2:	0040      	lsls	r0, r0, #1
1000fec4:	ea10 0f0e 	tst.w	r0, lr
1000fec8:	f10c 0c04 	add.w	ip, ip, #4
1000fecc:	d0f9      	beq.n	1000fec2 <_malloc_r+0x12e>
1000fece:	eb07 0acc 	add.w	sl, r7, ip, lsl #3
1000fed2:	4652      	mov	r2, sl
1000fed4:	46e1      	mov	r9, ip
1000fed6:	68d1      	ldr	r1, [r2, #12]
1000fed8:	e00e      	b.n	1000fef8 <_malloc_r+0x164>
1000feda:	684b      	ldr	r3, [r1, #4]
1000fedc:	f023 0303 	bic.w	r3, r3, #3
1000fee0:	eba3 0e05 	sub.w	lr, r3, r5
1000fee4:	f1be 0f0f 	cmp.w	lr, #15
1000fee8:	460c      	mov	r4, r1
1000feea:	68c9      	ldr	r1, [r1, #12]
1000feec:	f300 80c1 	bgt.w	10010072 <_malloc_r+0x2de>
1000fef0:	f1be 0f00 	cmp.w	lr, #0
1000fef4:	f280 80e2 	bge.w	100100bc <_malloc_r+0x328>
1000fef8:	428a      	cmp	r2, r1
1000fefa:	d1ee      	bne.n	1000feda <_malloc_r+0x146>
1000fefc:	f109 0901 	add.w	r9, r9, #1
1000ff00:	f019 0f03 	tst.w	r9, #3
1000ff04:	f102 0208 	add.w	r2, r2, #8
1000ff08:	d1e5      	bne.n	1000fed6 <_malloc_r+0x142>
1000ff0a:	e121      	b.n	10010150 <_malloc_r+0x3bc>
1000ff0c:	230c      	movs	r3, #12
1000ff0e:	6033      	str	r3, [r6, #0]
1000ff10:	2400      	movs	r4, #0
1000ff12:	e768      	b.n	1000fde6 <_malloc_r+0x52>
1000ff14:	f44f 7300 	mov.w	r3, #512	@ 0x200
1000ff18:	f04f 0c40 	mov.w	ip, #64	@ 0x40
1000ff1c:	f04f 0e3f 	mov.w	lr, #63	@ 0x3f
1000ff20:	e77f      	b.n	1000fe22 <_malloc_r+0x8e>
1000ff22:	68bc      	ldr	r4, [r7, #8]
1000ff24:	6863      	ldr	r3, [r4, #4]
1000ff26:	f023 0903 	bic.w	r9, r3, #3
1000ff2a:	45a9      	cmp	r9, r5
1000ff2c:	d303      	bcc.n	1000ff36 <_malloc_r+0x1a2>
1000ff2e:	eba9 0305 	sub.w	r3, r9, r5
1000ff32:	2b0f      	cmp	r3, #15
1000ff34:	dc53      	bgt.n	1000ffde <_malloc_r+0x24a>
1000ff36:	4b5c      	ldr	r3, [pc, #368]	@ (100100a8 <_malloc_r+0x314>)
1000ff38:	f8df b170 	ldr.w	fp, [pc, #368]	@ 100100ac <_malloc_r+0x318>
1000ff3c:	681b      	ldr	r3, [r3, #0]
1000ff3e:	2008      	movs	r0, #8
1000ff40:	f103 0810 	add.w	r8, r3, #16
1000ff44:	f000 fa80 	bl	10010448 <sysconf>
1000ff48:	f8db 3000 	ldr.w	r3, [fp]
1000ff4c:	9001      	str	r0, [sp, #4]
1000ff4e:	3301      	adds	r3, #1
1000ff50:	44a8      	add	r8, r5
1000ff52:	eb04 0209 	add.w	r2, r4, r9
1000ff56:	d005      	beq.n	1000ff64 <_malloc_r+0x1d0>
1000ff58:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
1000ff5c:	4480      	add	r8, r0
1000ff5e:	4243      	negs	r3, r0
1000ff60:	ea03 0808 	and.w	r8, r3, r8
1000ff64:	4641      	mov	r1, r8
1000ff66:	4630      	mov	r0, r6
1000ff68:	9202      	str	r2, [sp, #8]
1000ff6a:	f000 fe17 	bl	10010b9c <_sbrk_r>
1000ff6e:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
1000ff72:	9a02      	ldr	r2, [sp, #8]
1000ff74:	4682      	mov	sl, r0
1000ff76:	f000 80dc 	beq.w	10010132 <_malloc_r+0x39e>
1000ff7a:	4282      	cmp	r2, r0
1000ff7c:	f200 80d7 	bhi.w	1001012e <_malloc_r+0x39a>
1000ff80:	4b4b      	ldr	r3, [pc, #300]	@ (100100b0 <_malloc_r+0x31c>)
1000ff82:	9901      	ldr	r1, [sp, #4]
1000ff84:	6818      	ldr	r0, [r3, #0]
1000ff86:	4440      	add	r0, r8
1000ff88:	f101 31ff 	add.w	r1, r1, #4294967295	@ 0xffffffff
1000ff8c:	6018      	str	r0, [r3, #0]
1000ff8e:	4684      	mov	ip, r0
1000ff90:	f040 80fc 	bne.w	1001018c <_malloc_r+0x3f8>
1000ff94:	ea1a 0f01 	tst.w	sl, r1
1000ff98:	f040 80f8 	bne.w	1001018c <_malloc_r+0x3f8>
1000ff9c:	f8d7 a008 	ldr.w	sl, [r7, #8]
1000ffa0:	44c8      	add	r8, r9
1000ffa2:	f048 0201 	orr.w	r2, r8, #1
1000ffa6:	f8ca 2004 	str.w	r2, [sl, #4]
1000ffaa:	4b42      	ldr	r3, [pc, #264]	@ (100100b4 <_malloc_r+0x320>)
1000ffac:	6819      	ldr	r1, [r3, #0]
1000ffae:	4281      	cmp	r1, r0
1000ffb0:	bf38      	it	cc
1000ffb2:	6018      	strcc	r0, [r3, #0]
1000ffb4:	4b40      	ldr	r3, [pc, #256]	@ (100100b8 <_malloc_r+0x324>)
1000ffb6:	6819      	ldr	r1, [r3, #0]
1000ffb8:	4281      	cmp	r1, r0
1000ffba:	bf38      	it	cc
1000ffbc:	6018      	strcc	r0, [r3, #0]
1000ffbe:	4654      	mov	r4, sl
1000ffc0:	f022 0803 	bic.w	r8, r2, #3
1000ffc4:	45a8      	cmp	r8, r5
1000ffc6:	eba8 0305 	sub.w	r3, r8, r5
1000ffca:	d301      	bcc.n	1000ffd0 <_malloc_r+0x23c>
1000ffcc:	2b0f      	cmp	r3, #15
1000ffce:	dc06      	bgt.n	1000ffde <_malloc_r+0x24a>
1000ffd0:	4630      	mov	r0, r6
1000ffd2:	f000 fa61 	bl	10010498 <__malloc_unlock>
1000ffd6:	e79b      	b.n	1000ff10 <_malloc_r+0x17c>
1000ffd8:	f8d7 e004 	ldr.w	lr, [r7, #4]
1000ffdc:	e766      	b.n	1000feac <_malloc_r+0x118>
1000ffde:	1962      	adds	r2, r4, r5
1000ffe0:	f043 0301 	orr.w	r3, r3, #1
1000ffe4:	f045 0501 	orr.w	r5, r5, #1
1000ffe8:	6065      	str	r5, [r4, #4]
1000ffea:	4630      	mov	r0, r6
1000ffec:	60ba      	str	r2, [r7, #8]
1000ffee:	6053      	str	r3, [r2, #4]
1000fff0:	f000 fa52 	bl	10010498 <__malloc_unlock>
1000fff4:	3408      	adds	r4, #8
1000fff6:	4620      	mov	r0, r4
1000fff8:	b005      	add	sp, #20
1000fffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1000fffe:	68a2      	ldr	r2, [r4, #8]
10010000:	4423      	add	r3, r4
10010002:	60d1      	str	r1, [r2, #12]
10010004:	4630      	mov	r0, r6
10010006:	608a      	str	r2, [r1, #8]
10010008:	e6e6      	b.n	1000fdd8 <_malloc_r+0x44>
1001000a:	68dc      	ldr	r4, [r3, #12]
1001000c:	42a3      	cmp	r3, r4
1001000e:	f47f aeda 	bne.w	1000fdc6 <_malloc_r+0x32>
10010012:	f10c 0c02 	add.w	ip, ip, #2
10010016:	e71a      	b.n	1000fe4e <_malloc_r+0xba>
10010018:	f5b9 6f20 	cmp.w	r9, #2560	@ 0xa00
1001001c:	ea4f 2259 	mov.w	r2, r9, lsr #9
10010020:	d37e      	bcc.n	10010120 <_malloc_r+0x38c>
10010022:	2a14      	cmp	r2, #20
10010024:	f200 8115 	bhi.w	10010252 <_malloc_r+0x4be>
10010028:	f102 035c 	add.w	r3, r2, #92	@ 0x5c
1001002c:	00db      	lsls	r3, r3, #3
1001002e:	325b      	adds	r2, #91	@ 0x5b
10010030:	18f9      	adds	r1, r7, r3
10010032:	58fb      	ldr	r3, [r7, r3]
10010034:	3908      	subs	r1, #8
10010036:	4299      	cmp	r1, r3
10010038:	d103      	bne.n	10010042 <_malloc_r+0x2ae>
1001003a:	e0f0      	b.n	1001021e <_malloc_r+0x48a>
1001003c:	689b      	ldr	r3, [r3, #8]
1001003e:	4299      	cmp	r1, r3
10010040:	d004      	beq.n	1001004c <_malloc_r+0x2b8>
10010042:	685a      	ldr	r2, [r3, #4]
10010044:	f022 0203 	bic.w	r2, r2, #3
10010048:	454a      	cmp	r2, r9
1001004a:	d8f7      	bhi.n	1001003c <_malloc_r+0x2a8>
1001004c:	68d9      	ldr	r1, [r3, #12]
1001004e:	e9c4 3102 	strd	r3, r1, [r4, #8]
10010052:	608c      	str	r4, [r1, #8]
10010054:	60dc      	str	r4, [r3, #12]
10010056:	e729      	b.n	1000feac <_malloc_r+0x118>
10010058:	2b14      	cmp	r3, #20
1001005a:	d96d      	bls.n	10010138 <_malloc_r+0x3a4>
1001005c:	2b54      	cmp	r3, #84	@ 0x54
1001005e:	f200 8101 	bhi.w	10010264 <_malloc_r+0x4d0>
10010062:	0b2b      	lsrs	r3, r5, #12
10010064:	f103 0c6f 	add.w	ip, r3, #111	@ 0x6f
10010068:	f103 0e6e 	add.w	lr, r3, #110	@ 0x6e
1001006c:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10010070:	e6d7      	b.n	1000fe22 <_malloc_r+0x8e>
10010072:	4630      	mov	r0, r6
10010074:	68a6      	ldr	r6, [r4, #8]
10010076:	1962      	adds	r2, r4, r5
10010078:	f045 0501 	orr.w	r5, r5, #1
1001007c:	6065      	str	r5, [r4, #4]
1001007e:	60f1      	str	r1, [r6, #12]
10010080:	608e      	str	r6, [r1, #8]
10010082:	f04e 0101 	orr.w	r1, lr, #1
10010086:	e9c7 2204 	strd	r2, r2, [r7, #16]
1001008a:	f8c2 8008 	str.w	r8, [r2, #8]
1001008e:	f8c2 800c 	str.w	r8, [r2, #12]
10010092:	6051      	str	r1, [r2, #4]
10010094:	f844 e003 	str.w	lr, [r4, r3]
10010098:	f000 f9fe 	bl	10010498 <__malloc_unlock>
1001009c:	3408      	adds	r4, #8
1001009e:	e6a2      	b.n	1000fde6 <_malloc_r+0x52>
100100a0:	20000010 	.word	0x20000010
100100a4:	20000018 	.word	0x20000018
100100a8:	20000b74 	.word	0x20000b74
100100ac:	20000008 	.word	0x20000008
100100b0:	20000b44 	.word	0x20000b44
100100b4:	20000b70 	.word	0x20000b70
100100b8:	20000b6c 	.word	0x20000b6c
100100bc:	4423      	add	r3, r4
100100be:	4630      	mov	r0, r6
100100c0:	685a      	ldr	r2, [r3, #4]
100100c2:	f042 0201 	orr.w	r2, r2, #1
100100c6:	605a      	str	r2, [r3, #4]
100100c8:	f854 3f08 	ldr.w	r3, [r4, #8]!
100100cc:	60d9      	str	r1, [r3, #12]
100100ce:	608b      	str	r3, [r1, #8]
100100d0:	f000 f9e2 	bl	10010498 <__malloc_unlock>
100100d4:	e687      	b.n	1000fde6 <_malloc_r+0x52>
100100d6:	44a1      	add	r9, r4
100100d8:	4630      	mov	r0, r6
100100da:	f8d9 3004 	ldr.w	r3, [r9, #4]
100100de:	f043 0301 	orr.w	r3, r3, #1
100100e2:	f8c9 3004 	str.w	r3, [r9, #4]
100100e6:	3408      	adds	r4, #8
100100e8:	f000 f9d6 	bl	10010498 <__malloc_unlock>
100100ec:	e67b      	b.n	1000fde6 <_malloc_r+0x52>
100100ee:	ea4f 0cd5 	mov.w	ip, r5, lsr #3
100100f2:	f105 0308 	add.w	r3, r5, #8
100100f6:	e65e      	b.n	1000fdb6 <_malloc_r+0x22>
100100f8:	1962      	adds	r2, r4, r5
100100fa:	f043 0101 	orr.w	r1, r3, #1
100100fe:	f045 0501 	orr.w	r5, r5, #1
10010102:	6065      	str	r5, [r4, #4]
10010104:	4630      	mov	r0, r6
10010106:	e9c7 2204 	strd	r2, r2, [r7, #16]
1001010a:	f8c2 8008 	str.w	r8, [r2, #8]
1001010e:	f8c2 800c 	str.w	r8, [r2, #12]
10010112:	6051      	str	r1, [r2, #4]
10010114:	f844 3009 	str.w	r3, [r4, r9]
10010118:	f000 f9be 	bl	10010498 <__malloc_unlock>
1001011c:	3408      	adds	r4, #8
1001011e:	e662      	b.n	1000fde6 <_malloc_r+0x52>
10010120:	ea4f 1299 	mov.w	r2, r9, lsr #6
10010124:	f102 0339 	add.w	r3, r2, #57	@ 0x39
10010128:	00db      	lsls	r3, r3, #3
1001012a:	3238      	adds	r2, #56	@ 0x38
1001012c:	e780      	b.n	10010030 <_malloc_r+0x29c>
1001012e:	42bc      	cmp	r4, r7
10010130:	d024      	beq.n	1001017c <_malloc_r+0x3e8>
10010132:	68bc      	ldr	r4, [r7, #8]
10010134:	6862      	ldr	r2, [r4, #4]
10010136:	e743      	b.n	1000ffc0 <_malloc_r+0x22c>
10010138:	f103 0c5c 	add.w	ip, r3, #92	@ 0x5c
1001013c:	f103 0e5b 	add.w	lr, r3, #91	@ 0x5b
10010140:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10010144:	e66d      	b.n	1000fe22 <_malloc_r+0x8e>
10010146:	f85a 3908 	ldr.w	r3, [sl], #-8
1001014a:	4553      	cmp	r3, sl
1001014c:	f040 80d8 	bne.w	10010300 <_malloc_r+0x56c>
10010150:	f01c 0f03 	tst.w	ip, #3
10010154:	f10c 3cff 	add.w	ip, ip, #4294967295	@ 0xffffffff
10010158:	d1f5      	bne.n	10010146 <_malloc_r+0x3b2>
1001015a:	687b      	ldr	r3, [r7, #4]
1001015c:	ea23 0300 	bic.w	r3, r3, r0
10010160:	607b      	str	r3, [r7, #4]
10010162:	0040      	lsls	r0, r0, #1
10010164:	4298      	cmp	r0, r3
10010166:	f63f aedc 	bhi.w	1000ff22 <_malloc_r+0x18e>
1001016a:	b918      	cbnz	r0, 10010174 <_malloc_r+0x3e0>
1001016c:	e6d9      	b.n	1000ff22 <_malloc_r+0x18e>
1001016e:	0040      	lsls	r0, r0, #1
10010170:	f109 0904 	add.w	r9, r9, #4
10010174:	4218      	tst	r0, r3
10010176:	d0fa      	beq.n	1001016e <_malloc_r+0x3da>
10010178:	46cc      	mov	ip, r9
1001017a:	e6a8      	b.n	1000fece <_malloc_r+0x13a>
1001017c:	4b61      	ldr	r3, [pc, #388]	@ (10010304 <_malloc_r+0x570>)
1001017e:	9901      	ldr	r1, [sp, #4]
10010180:	6818      	ldr	r0, [r3, #0]
10010182:	eb08 0c00 	add.w	ip, r8, r0
10010186:	3901      	subs	r1, #1
10010188:	f8c3 c000 	str.w	ip, [r3]
1001018c:	f8db 0000 	ldr.w	r0, [fp]
10010190:	3001      	adds	r0, #1
10010192:	bf1b      	ittet	ne
10010194:	ebaa 0202 	subne.w	r2, sl, r2
10010198:	4462      	addne	r2, ip
1001019a:	f8cb a000 	streq.w	sl, [fp]
1001019e:	601a      	strne	r2, [r3, #0]
100101a0:	f01a 0207 	ands.w	r2, sl, #7
100101a4:	e9cd 2302 	strd	r2, r3, [sp, #8]
100101a8:	d042      	beq.n	10010230 <_malloc_r+0x49c>
100101aa:	f1c2 0208 	rsb	r2, r2, #8
100101ae:	9b01      	ldr	r3, [sp, #4]
100101b0:	4492      	add	sl, r2
100101b2:	44d0      	add	r8, sl
100101b4:	4413      	add	r3, r2
100101b6:	ea08 0001 	and.w	r0, r8, r1
100101ba:	1a1a      	subs	r2, r3, r0
100101bc:	ea02 0b01 	and.w	fp, r2, r1
100101c0:	4659      	mov	r1, fp
100101c2:	4630      	mov	r0, r6
100101c4:	f000 fcea 	bl	10010b9c <_sbrk_r>
100101c8:	1c42      	adds	r2, r0, #1
100101ca:	9b03      	ldr	r3, [sp, #12]
100101cc:	d07a      	beq.n	100102c4 <_malloc_r+0x530>
100101ce:	eba0 000a 	sub.w	r0, r0, sl
100101d2:	eb00 080b 	add.w	r8, r0, fp
100101d6:	6818      	ldr	r0, [r3, #0]
100101d8:	f8c7 a008 	str.w	sl, [r7, #8]
100101dc:	f048 0201 	orr.w	r2, r8, #1
100101e0:	4458      	add	r0, fp
100101e2:	42bc      	cmp	r4, r7
100101e4:	f8ca 2004 	str.w	r2, [sl, #4]
100101e8:	6018      	str	r0, [r3, #0]
100101ea:	f43f aede 	beq.w	1000ffaa <_malloc_r+0x216>
100101ee:	f1b9 0f0f 	cmp.w	r9, #15
100101f2:	d942      	bls.n	1001027a <_malloc_r+0x4e6>
100101f4:	6861      	ldr	r1, [r4, #4]
100101f6:	f1a9 020c 	sub.w	r2, r9, #12
100101fa:	f022 0207 	bic.w	r2, r2, #7
100101fe:	f001 0101 	and.w	r1, r1, #1
10010202:	4311      	orrs	r1, r2
10010204:	6061      	str	r1, [r4, #4]
10010206:	18a1      	adds	r1, r4, r2
10010208:	f04f 0c05 	mov.w	ip, #5
1001020c:	2a0f      	cmp	r2, #15
1001020e:	f8c1 c004 	str.w	ip, [r1, #4]
10010212:	f8c1 c008 	str.w	ip, [r1, #8]
10010216:	d84a      	bhi.n	100102ae <_malloc_r+0x51a>
10010218:	f8da 2004 	ldr.w	r2, [sl, #4]
1001021c:	e6c5      	b.n	1000ffaa <_malloc_r+0x216>
1001021e:	1092      	asrs	r2, r2, #2
10010220:	2001      	movs	r0, #1
10010222:	fa00 f202 	lsl.w	r2, r0, r2
10010226:	ea4e 0e02 	orr.w	lr, lr, r2
1001022a:	f8c7 e004 	str.w	lr, [r7, #4]
1001022e:	e70e      	b.n	1001004e <_malloc_r+0x2ba>
10010230:	9b01      	ldr	r3, [sp, #4]
10010232:	eb0a 0208 	add.w	r2, sl, r8
10010236:	400a      	ands	r2, r1
10010238:	1a9a      	subs	r2, r3, r2
1001023a:	ea02 0b01 	and.w	fp, r2, r1
1001023e:	4659      	mov	r1, fp
10010240:	4630      	mov	r0, r6
10010242:	f000 fcab 	bl	10010b9c <_sbrk_r>
10010246:	1c43      	adds	r3, r0, #1
10010248:	9b03      	ldr	r3, [sp, #12]
1001024a:	d1c0      	bne.n	100101ce <_malloc_r+0x43a>
1001024c:	f8dd b008 	ldr.w	fp, [sp, #8]
10010250:	e7c1      	b.n	100101d6 <_malloc_r+0x442>
10010252:	2a54      	cmp	r2, #84	@ 0x54
10010254:	d815      	bhi.n	10010282 <_malloc_r+0x4ee>
10010256:	ea4f 3219 	mov.w	r2, r9, lsr #12
1001025a:	f102 036f 	add.w	r3, r2, #111	@ 0x6f
1001025e:	00db      	lsls	r3, r3, #3
10010260:	326e      	adds	r2, #110	@ 0x6e
10010262:	e6e5      	b.n	10010030 <_malloc_r+0x29c>
10010264:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10010268:	d815      	bhi.n	10010296 <_malloc_r+0x502>
1001026a:	0beb      	lsrs	r3, r5, #15
1001026c:	f103 0c78 	add.w	ip, r3, #120	@ 0x78
10010270:	f103 0e77 	add.w	lr, r3, #119	@ 0x77
10010274:	ea4f 03cc 	mov.w	r3, ip, lsl #3
10010278:	e5d3      	b.n	1000fe22 <_malloc_r+0x8e>
1001027a:	2301      	movs	r3, #1
1001027c:	f8ca 3004 	str.w	r3, [sl, #4]
10010280:	e6a6      	b.n	1000ffd0 <_malloc_r+0x23c>
10010282:	f5b2 7faa 	cmp.w	r2, #340	@ 0x154
10010286:	d825      	bhi.n	100102d4 <_malloc_r+0x540>
10010288:	ea4f 32d9 	mov.w	r2, r9, lsr #15
1001028c:	f102 0378 	add.w	r3, r2, #120	@ 0x78
10010290:	00db      	lsls	r3, r3, #3
10010292:	3277      	adds	r2, #119	@ 0x77
10010294:	e6cc      	b.n	10010030 <_malloc_r+0x29c>
10010296:	f240 5254 	movw	r2, #1364	@ 0x554
1001029a:	4293      	cmp	r3, r2
1001029c:	d825      	bhi.n	100102ea <_malloc_r+0x556>
1001029e:	0cab      	lsrs	r3, r5, #18
100102a0:	f103 0c7d 	add.w	ip, r3, #125	@ 0x7d
100102a4:	f103 0e7c 	add.w	lr, r3, #124	@ 0x7c
100102a8:	ea4f 03cc 	mov.w	r3, ip, lsl #3
100102ac:	e5b9      	b.n	1000fe22 <_malloc_r+0x8e>
100102ae:	4630      	mov	r0, r6
100102b0:	f104 0108 	add.w	r1, r4, #8
100102b4:	9301      	str	r3, [sp, #4]
100102b6:	f000 fb2b 	bl	10010910 <_free_r>
100102ba:	9b01      	ldr	r3, [sp, #4]
100102bc:	f8d7 a008 	ldr.w	sl, [r7, #8]
100102c0:	6818      	ldr	r0, [r3, #0]
100102c2:	e7a9      	b.n	10010218 <_malloc_r+0x484>
100102c4:	9a02      	ldr	r2, [sp, #8]
100102c6:	3a08      	subs	r2, #8
100102c8:	4490      	add	r8, r2
100102ca:	eba8 080a 	sub.w	r8, r8, sl
100102ce:	f04f 0b00 	mov.w	fp, #0
100102d2:	e780      	b.n	100101d6 <_malloc_r+0x442>
100102d4:	f240 5354 	movw	r3, #1364	@ 0x554
100102d8:	429a      	cmp	r2, r3
100102da:	d80d      	bhi.n	100102f8 <_malloc_r+0x564>
100102dc:	ea4f 4299 	mov.w	r2, r9, lsr #18
100102e0:	f102 037d 	add.w	r3, r2, #125	@ 0x7d
100102e4:	00db      	lsls	r3, r3, #3
100102e6:	327c      	adds	r2, #124	@ 0x7c
100102e8:	e6a2      	b.n	10010030 <_malloc_r+0x29c>
100102ea:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100102ee:	f04f 0c7f 	mov.w	ip, #127	@ 0x7f
100102f2:	f04f 0e7e 	mov.w	lr, #126	@ 0x7e
100102f6:	e594      	b.n	1000fe22 <_malloc_r+0x8e>
100102f8:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
100102fc:	227e      	movs	r2, #126	@ 0x7e
100102fe:	e697      	b.n	10010030 <_malloc_r+0x29c>
10010300:	687b      	ldr	r3, [r7, #4]
10010302:	e72e      	b.n	10010162 <_malloc_r+0x3ce>
10010304:	20000b44 	.word	0x20000b44

10010308 <register_fini>:
10010308:	4b02      	ldr	r3, [pc, #8]	@ (10010314 <register_fini+0xc>)
1001030a:	b113      	cbz	r3, 10010312 <register_fini+0xa>
1001030c:	4802      	ldr	r0, [pc, #8]	@ (10010318 <register_fini+0x10>)
1001030e:	f000 b8c9 	b.w	100104a4 <atexit>
10010312:	4770      	bx	lr
10010314:	00000000 	.word	0x00000000
10010318:	10010411 	.word	0x10010411

1001031c <memset>:
1001031c:	0783      	lsls	r3, r0, #30
1001031e:	b530      	push	{r4, r5, lr}
10010320:	d047      	beq.n	100103b2 <memset+0x96>
10010322:	1e54      	subs	r4, r2, #1
10010324:	2a00      	cmp	r2, #0
10010326:	d03e      	beq.n	100103a6 <memset+0x8a>
10010328:	b2ca      	uxtb	r2, r1
1001032a:	4603      	mov	r3, r0
1001032c:	e001      	b.n	10010332 <memset+0x16>
1001032e:	3c01      	subs	r4, #1
10010330:	d339      	bcc.n	100103a6 <memset+0x8a>
10010332:	f803 2b01 	strb.w	r2, [r3], #1
10010336:	079d      	lsls	r5, r3, #30
10010338:	d1f9      	bne.n	1001032e <memset+0x12>
1001033a:	2c03      	cmp	r4, #3
1001033c:	d92c      	bls.n	10010398 <memset+0x7c>
1001033e:	b2cd      	uxtb	r5, r1
10010340:	eb05 2505 	add.w	r5, r5, r5, lsl #8
10010344:	2c0f      	cmp	r4, #15
10010346:	eb05 4505 	add.w	r5, r5, r5, lsl #16
1001034a:	d935      	bls.n	100103b8 <memset+0x9c>
1001034c:	f1a4 0210 	sub.w	r2, r4, #16
10010350:	f022 0c0f 	bic.w	ip, r2, #15
10010354:	f103 0e10 	add.w	lr, r3, #16
10010358:	44e6      	add	lr, ip
1001035a:	ea4f 1c12 	mov.w	ip, r2, lsr #4
1001035e:	461a      	mov	r2, r3
10010360:	6015      	str	r5, [r2, #0]
10010362:	6055      	str	r5, [r2, #4]
10010364:	6095      	str	r5, [r2, #8]
10010366:	60d5      	str	r5, [r2, #12]
10010368:	3210      	adds	r2, #16
1001036a:	4572      	cmp	r2, lr
1001036c:	d1f8      	bne.n	10010360 <memset+0x44>
1001036e:	f10c 0201 	add.w	r2, ip, #1
10010372:	f014 0f0c 	tst.w	r4, #12
10010376:	eb03 1202 	add.w	r2, r3, r2, lsl #4
1001037a:	f004 0c0f 	and.w	ip, r4, #15
1001037e:	d013      	beq.n	100103a8 <memset+0x8c>
10010380:	f1ac 0304 	sub.w	r3, ip, #4
10010384:	f023 0303 	bic.w	r3, r3, #3
10010388:	3304      	adds	r3, #4
1001038a:	4413      	add	r3, r2
1001038c:	f842 5b04 	str.w	r5, [r2], #4
10010390:	429a      	cmp	r2, r3
10010392:	d1fb      	bne.n	1001038c <memset+0x70>
10010394:	f00c 0403 	and.w	r4, ip, #3
10010398:	b12c      	cbz	r4, 100103a6 <memset+0x8a>
1001039a:	b2c9      	uxtb	r1, r1
1001039c:	441c      	add	r4, r3
1001039e:	f803 1b01 	strb.w	r1, [r3], #1
100103a2:	429c      	cmp	r4, r3
100103a4:	d1fb      	bne.n	1001039e <memset+0x82>
100103a6:	bd30      	pop	{r4, r5, pc}
100103a8:	4664      	mov	r4, ip
100103aa:	4613      	mov	r3, r2
100103ac:	2c00      	cmp	r4, #0
100103ae:	d1f4      	bne.n	1001039a <memset+0x7e>
100103b0:	e7f9      	b.n	100103a6 <memset+0x8a>
100103b2:	4603      	mov	r3, r0
100103b4:	4614      	mov	r4, r2
100103b6:	e7c0      	b.n	1001033a <memset+0x1e>
100103b8:	461a      	mov	r2, r3
100103ba:	46a4      	mov	ip, r4
100103bc:	e7e0      	b.n	10010380 <memset+0x64>
100103be:	bf00      	nop

100103c0 <__libc_init_array>:
100103c0:	b570      	push	{r4, r5, r6, lr}
100103c2:	4b0f      	ldr	r3, [pc, #60]	@ (10010400 <__libc_init_array+0x40>)
100103c4:	4d0f      	ldr	r5, [pc, #60]	@ (10010404 <__libc_init_array+0x44>)
100103c6:	42ab      	cmp	r3, r5
100103c8:	eba3 0605 	sub.w	r6, r3, r5
100103cc:	d007      	beq.n	100103de <__libc_init_array+0x1e>
100103ce:	10b6      	asrs	r6, r6, #2
100103d0:	2400      	movs	r4, #0
100103d2:	f855 3b04 	ldr.w	r3, [r5], #4
100103d6:	3401      	adds	r4, #1
100103d8:	4798      	blx	r3
100103da:	42a6      	cmp	r6, r4
100103dc:	d8f9      	bhi.n	100103d2 <__libc_init_array+0x12>
100103de:	f007 f83f 	bl	10017460 <_init>
100103e2:	4d09      	ldr	r5, [pc, #36]	@ (10010408 <__libc_init_array+0x48>)
100103e4:	4b09      	ldr	r3, [pc, #36]	@ (1001040c <__libc_init_array+0x4c>)
100103e6:	1b5e      	subs	r6, r3, r5
100103e8:	42ab      	cmp	r3, r5
100103ea:	ea4f 06a6 	mov.w	r6, r6, asr #2
100103ee:	d006      	beq.n	100103fe <__libc_init_array+0x3e>
100103f0:	2400      	movs	r4, #0
100103f2:	f855 3b04 	ldr.w	r3, [r5], #4
100103f6:	3401      	adds	r4, #1
100103f8:	4798      	blx	r3
100103fa:	42a6      	cmp	r6, r4
100103fc:	d8f9      	bhi.n	100103f2 <__libc_init_array+0x32>
100103fe:	bd70      	pop	{r4, r5, r6, pc}
10010400:	200006b8 	.word	0x200006b8
10010404:	200006b8 	.word	0x200006b8
10010408:	200006b8 	.word	0x200006b8
1001040c:	200006c0 	.word	0x200006c0

10010410 <__libc_fini_array>:
10010410:	b538      	push	{r3, r4, r5, lr}
10010412:	4d07      	ldr	r5, [pc, #28]	@ (10010430 <__libc_fini_array+0x20>)
10010414:	4c07      	ldr	r4, [pc, #28]	@ (10010434 <__libc_fini_array+0x24>)
10010416:	1b2c      	subs	r4, r5, r4
10010418:	10a4      	asrs	r4, r4, #2
1001041a:	d005      	beq.n	10010428 <__libc_fini_array+0x18>
1001041c:	3c01      	subs	r4, #1
1001041e:	f855 3d04 	ldr.w	r3, [r5, #-4]!
10010422:	4798      	blx	r3
10010424:	2c00      	cmp	r4, #0
10010426:	d1f9      	bne.n	1001041c <__libc_fini_array+0xc>
10010428:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
1001042c:	f007 b81e 	b.w	1001746c <_fini>
10010430:	200006c4 	.word	0x200006c4
10010434:	200006c0 	.word	0x200006c0

10010438 <__retarget_lock_init_recursive>:
10010438:	4770      	bx	lr
1001043a:	bf00      	nop

1001043c <__retarget_lock_close_recursive>:
1001043c:	4770      	bx	lr
1001043e:	bf00      	nop

10010440 <__retarget_lock_acquire_recursive>:
10010440:	4770      	bx	lr
10010442:	bf00      	nop

10010444 <__retarget_lock_release_recursive>:
10010444:	4770      	bx	lr
10010446:	bf00      	nop

10010448 <sysconf>:
10010448:	2808      	cmp	r0, #8
1001044a:	d102      	bne.n	10010452 <sysconf+0xa>
1001044c:	f44f 5080 	mov.w	r0, #4096	@ 0x1000
10010450:	4770      	bx	lr
10010452:	b508      	push	{r3, lr}
10010454:	f7ff fc98 	bl	1000fd88 <__errno>
10010458:	2316      	movs	r3, #22
1001045a:	6003      	str	r3, [r0, #0]
1001045c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010460:	bd08      	pop	{r3, pc}
10010462:	bf00      	nop

10010464 <printf>:
10010464:	b40f      	push	{r0, r1, r2, r3}
10010466:	b500      	push	{lr}
10010468:	4907      	ldr	r1, [pc, #28]	@ (10010488 <printf+0x24>)
1001046a:	b083      	sub	sp, #12
1001046c:	ab04      	add	r3, sp, #16
1001046e:	6808      	ldr	r0, [r1, #0]
10010470:	f853 2b04 	ldr.w	r2, [r3], #4
10010474:	6881      	ldr	r1, [r0, #8]
10010476:	9301      	str	r3, [sp, #4]
10010478:	f000 fd58 	bl	10010f2c <_vfprintf_r>
1001047c:	b003      	add	sp, #12
1001047e:	f85d eb04 	ldr.w	lr, [sp], #4
10010482:	b004      	add	sp, #16
10010484:	4770      	bx	lr
10010486:	bf00      	nop
10010488:	2000041c 	.word	0x2000041c

1001048c <__malloc_lock>:
1001048c:	4801      	ldr	r0, [pc, #4]	@ (10010494 <__malloc_lock+0x8>)
1001048e:	f7ff bfd7 	b.w	10010440 <__retarget_lock_acquire_recursive>
10010492:	bf00      	nop
10010494:	20000b7c 	.word	0x20000b7c

10010498 <__malloc_unlock>:
10010498:	4801      	ldr	r0, [pc, #4]	@ (100104a0 <__malloc_unlock+0x8>)
1001049a:	f7ff bfd3 	b.w	10010444 <__retarget_lock_release_recursive>
1001049e:	bf00      	nop
100104a0:	20000b7c 	.word	0x20000b7c

100104a4 <atexit>:
100104a4:	2300      	movs	r3, #0
100104a6:	4601      	mov	r1, r0
100104a8:	461a      	mov	r2, r3
100104aa:	4618      	mov	r0, r3
100104ac:	f003 bbfe 	b.w	10013cac <__register_exitproc>

100104b0 <stdio_exit_handler>:
100104b0:	4a02      	ldr	r2, [pc, #8]	@ (100104bc <stdio_exit_handler+0xc>)
100104b2:	4903      	ldr	r1, [pc, #12]	@ (100104c0 <stdio_exit_handler+0x10>)
100104b4:	4803      	ldr	r0, [pc, #12]	@ (100104c4 <stdio_exit_handler+0x14>)
100104b6:	f000 bd15 	b.w	10010ee4 <_fwalk_sglue>
100104ba:	bf00      	nop
100104bc:	20000540 	.word	0x20000540
100104c0:	10013e8d 	.word	0x10013e8d
100104c4:	20000420 	.word	0x20000420

100104c8 <cleanup_stdio>:
100104c8:	4b0c      	ldr	r3, [pc, #48]	@ (100104fc <cleanup_stdio+0x34>)
100104ca:	6841      	ldr	r1, [r0, #4]
100104cc:	4299      	cmp	r1, r3
100104ce:	b510      	push	{r4, lr}
100104d0:	4604      	mov	r4, r0
100104d2:	d001      	beq.n	100104d8 <cleanup_stdio+0x10>
100104d4:	f003 fcda 	bl	10013e8c <_fclose_r>
100104d8:	68a1      	ldr	r1, [r4, #8]
100104da:	4b09      	ldr	r3, [pc, #36]	@ (10010500 <cleanup_stdio+0x38>)
100104dc:	4299      	cmp	r1, r3
100104de:	d002      	beq.n	100104e6 <cleanup_stdio+0x1e>
100104e0:	4620      	mov	r0, r4
100104e2:	f003 fcd3 	bl	10013e8c <_fclose_r>
100104e6:	68e1      	ldr	r1, [r4, #12]
100104e8:	4b06      	ldr	r3, [pc, #24]	@ (10010504 <cleanup_stdio+0x3c>)
100104ea:	4299      	cmp	r1, r3
100104ec:	d004      	beq.n	100104f8 <cleanup_stdio+0x30>
100104ee:	4620      	mov	r0, r4
100104f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
100104f4:	f003 bcca 	b.w	10013e8c <_fclose_r>
100104f8:	bd10      	pop	{r4, pc}
100104fa:	bf00      	nop
100104fc:	20000b88 	.word	0x20000b88
10010500:	20000bf0 	.word	0x20000bf0
10010504:	20000c58 	.word	0x20000c58

10010508 <global_stdio_init.part.0>:
10010508:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001050c:	4c31      	ldr	r4, [pc, #196]	@ (100105d4 <global_stdio_init.part.0+0xcc>)
1001050e:	4b32      	ldr	r3, [pc, #200]	@ (100105d8 <global_stdio_init.part.0+0xd0>)
10010510:	4832      	ldr	r0, [pc, #200]	@ (100105dc <global_stdio_init.part.0+0xd4>)
10010512:	f8df 90cc 	ldr.w	r9, [pc, #204]	@ 100105e0 <global_stdio_init.part.0+0xd8>
10010516:	f8df 80cc 	ldr.w	r8, [pc, #204]	@ 100105e4 <global_stdio_init.part.0+0xdc>
1001051a:	4f33      	ldr	r7, [pc, #204]	@ (100105e8 <global_stdio_init.part.0+0xe0>)
1001051c:	6018      	str	r0, [r3, #0]
1001051e:	2500      	movs	r5, #0
10010520:	4629      	mov	r1, r5
10010522:	2304      	movs	r3, #4
10010524:	2208      	movs	r2, #8
10010526:	f104 005c 	add.w	r0, r4, #92	@ 0x5c
1001052a:	4e30      	ldr	r6, [pc, #192]	@ (100105ec <global_stdio_init.part.0+0xe4>)
1001052c:	60e3      	str	r3, [r4, #12]
1001052e:	e9c4 5500 	strd	r5, r5, [r4]
10010532:	e9c4 5504 	strd	r5, r5, [r4, #16]
10010536:	60a5      	str	r5, [r4, #8]
10010538:	6665      	str	r5, [r4, #100]	@ 0x64
1001053a:	61a5      	str	r5, [r4, #24]
1001053c:	f7ff feee 	bl	1001031c <memset>
10010540:	f104 0058 	add.w	r0, r4, #88	@ 0x58
10010544:	e9c4 4907 	strd	r4, r9, [r4, #28]
10010548:	e9c4 8709 	strd	r8, r7, [r4, #36]	@ 0x24
1001054c:	62e6      	str	r6, [r4, #44]	@ 0x2c
1001054e:	f7ff ff73 	bl	10010438 <__retarget_lock_init_recursive>
10010552:	4629      	mov	r1, r5
10010554:	4b26      	ldr	r3, [pc, #152]	@ (100105f0 <global_stdio_init.part.0+0xe8>)
10010556:	6763      	str	r3, [r4, #116]	@ 0x74
10010558:	2208      	movs	r2, #8
1001055a:	f104 00c4 	add.w	r0, r4, #196	@ 0xc4
1001055e:	e9c4 551a 	strd	r5, r5, [r4, #104]	@ 0x68
10010562:	e9c4 551e 	strd	r5, r5, [r4, #120]	@ 0x78
10010566:	6725      	str	r5, [r4, #112]	@ 0x70
10010568:	f8c4 50cc 	str.w	r5, [r4, #204]	@ 0xcc
1001056c:	f8c4 5080 	str.w	r5, [r4, #128]	@ 0x80
10010570:	f7ff fed4 	bl	1001031c <memset>
10010574:	f104 0368 	add.w	r3, r4, #104	@ 0x68
10010578:	f104 00c0 	add.w	r0, r4, #192	@ 0xc0
1001057c:	f8c4 3084 	str.w	r3, [r4, #132]	@ 0x84
10010580:	e9c4 9822 	strd	r9, r8, [r4, #136]	@ 0x88
10010584:	e9c4 7624 	strd	r7, r6, [r4, #144]	@ 0x90
10010588:	f7ff ff56 	bl	10010438 <__retarget_lock_init_recursive>
1001058c:	4b19      	ldr	r3, [pc, #100]	@ (100105f4 <global_stdio_init.part.0+0xec>)
1001058e:	f8c4 30dc 	str.w	r3, [r4, #220]	@ 0xdc
10010592:	4629      	mov	r1, r5
10010594:	f504 7096 	add.w	r0, r4, #300	@ 0x12c
10010598:	2208      	movs	r2, #8
1001059a:	e9c4 5534 	strd	r5, r5, [r4, #208]	@ 0xd0
1001059e:	e9c4 5538 	strd	r5, r5, [r4, #224]	@ 0xe0
100105a2:	f8c4 50d8 	str.w	r5, [r4, #216]	@ 0xd8
100105a6:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
100105aa:	f8c4 50e8 	str.w	r5, [r4, #232]	@ 0xe8
100105ae:	f7ff feb5 	bl	1001031c <memset>
100105b2:	f104 03d0 	add.w	r3, r4, #208	@ 0xd0
100105b6:	e9c4 873d 	strd	r8, r7, [r4, #244]	@ 0xf4
100105ba:	f8c4 90f0 	str.w	r9, [r4, #240]	@ 0xf0
100105be:	f504 7094 	add.w	r0, r4, #296	@ 0x128
100105c2:	f8c4 60fc 	str.w	r6, [r4, #252]	@ 0xfc
100105c6:	f8c4 30ec 	str.w	r3, [r4, #236]	@ 0xec
100105ca:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
100105ce:	f7ff bf33 	b.w	10010438 <__retarget_lock_init_recursive>
100105d2:	bf00      	nop
100105d4:	20000b88 	.word	0x20000b88
100105d8:	20000cc0 	.word	0x20000cc0
100105dc:	100104b1 	.word	0x100104b1
100105e0:	10010b0d 	.word	0x10010b0d
100105e4:	10010b31 	.word	0x10010b31
100105e8:	10010b71 	.word	0x10010b71
100105ec:	10010b95 	.word	0x10010b95
100105f0:	00010009 	.word	0x00010009
100105f4:	00020012 	.word	0x00020012

100105f8 <__sinit>:
100105f8:	b510      	push	{r4, lr}
100105fa:	4604      	mov	r4, r0
100105fc:	480a      	ldr	r0, [pc, #40]	@ (10010628 <__sinit+0x30>)
100105fe:	f7ff ff1f 	bl	10010440 <__retarget_lock_acquire_recursive>
10010602:	6b63      	ldr	r3, [r4, #52]	@ 0x34
10010604:	b923      	cbnz	r3, 10010610 <__sinit+0x18>
10010606:	4b09      	ldr	r3, [pc, #36]	@ (1001062c <__sinit+0x34>)
10010608:	4a09      	ldr	r2, [pc, #36]	@ (10010630 <__sinit+0x38>)
1001060a:	681b      	ldr	r3, [r3, #0]
1001060c:	6362      	str	r2, [r4, #52]	@ 0x34
1001060e:	b123      	cbz	r3, 1001061a <__sinit+0x22>
10010610:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10010614:	4804      	ldr	r0, [pc, #16]	@ (10010628 <__sinit+0x30>)
10010616:	f7ff bf15 	b.w	10010444 <__retarget_lock_release_recursive>
1001061a:	f7ff ff75 	bl	10010508 <global_stdio_init.part.0>
1001061e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10010622:	4801      	ldr	r0, [pc, #4]	@ (10010628 <__sinit+0x30>)
10010624:	f7ff bf0e 	b.w	10010444 <__retarget_lock_release_recursive>
10010628:	20000b84 	.word	0x20000b84
1001062c:	20000cc0 	.word	0x20000cc0
10010630:	100104c9 	.word	0x100104c9

10010634 <__sfp_lock_acquire>:
10010634:	4801      	ldr	r0, [pc, #4]	@ (1001063c <__sfp_lock_acquire+0x8>)
10010636:	f7ff bf03 	b.w	10010440 <__retarget_lock_acquire_recursive>
1001063a:	bf00      	nop
1001063c:	20000b84 	.word	0x20000b84

10010640 <__sfp_lock_release>:
10010640:	4801      	ldr	r0, [pc, #4]	@ (10010648 <__sfp_lock_release+0x8>)
10010642:	f7ff beff 	b.w	10010444 <__retarget_lock_release_recursive>
10010646:	bf00      	nop
10010648:	20000b84 	.word	0x20000b84

1001064c <memcpy>:
1001064c:	4684      	mov	ip, r0
1001064e:	ea41 0300 	orr.w	r3, r1, r0
10010652:	f013 0303 	ands.w	r3, r3, #3
10010656:	d16d      	bne.n	10010734 <memcpy+0xe8>
10010658:	3a40      	subs	r2, #64	@ 0x40
1001065a:	d341      	bcc.n	100106e0 <memcpy+0x94>
1001065c:	f851 3b04 	ldr.w	r3, [r1], #4
10010660:	f840 3b04 	str.w	r3, [r0], #4
10010664:	f851 3b04 	ldr.w	r3, [r1], #4
10010668:	f840 3b04 	str.w	r3, [r0], #4
1001066c:	f851 3b04 	ldr.w	r3, [r1], #4
10010670:	f840 3b04 	str.w	r3, [r0], #4
10010674:	f851 3b04 	ldr.w	r3, [r1], #4
10010678:	f840 3b04 	str.w	r3, [r0], #4
1001067c:	f851 3b04 	ldr.w	r3, [r1], #4
10010680:	f840 3b04 	str.w	r3, [r0], #4
10010684:	f851 3b04 	ldr.w	r3, [r1], #4
10010688:	f840 3b04 	str.w	r3, [r0], #4
1001068c:	f851 3b04 	ldr.w	r3, [r1], #4
10010690:	f840 3b04 	str.w	r3, [r0], #4
10010694:	f851 3b04 	ldr.w	r3, [r1], #4
10010698:	f840 3b04 	str.w	r3, [r0], #4
1001069c:	f851 3b04 	ldr.w	r3, [r1], #4
100106a0:	f840 3b04 	str.w	r3, [r0], #4
100106a4:	f851 3b04 	ldr.w	r3, [r1], #4
100106a8:	f840 3b04 	str.w	r3, [r0], #4
100106ac:	f851 3b04 	ldr.w	r3, [r1], #4
100106b0:	f840 3b04 	str.w	r3, [r0], #4
100106b4:	f851 3b04 	ldr.w	r3, [r1], #4
100106b8:	f840 3b04 	str.w	r3, [r0], #4
100106bc:	f851 3b04 	ldr.w	r3, [r1], #4
100106c0:	f840 3b04 	str.w	r3, [r0], #4
100106c4:	f851 3b04 	ldr.w	r3, [r1], #4
100106c8:	f840 3b04 	str.w	r3, [r0], #4
100106cc:	f851 3b04 	ldr.w	r3, [r1], #4
100106d0:	f840 3b04 	str.w	r3, [r0], #4
100106d4:	f851 3b04 	ldr.w	r3, [r1], #4
100106d8:	f840 3b04 	str.w	r3, [r0], #4
100106dc:	3a40      	subs	r2, #64	@ 0x40
100106de:	d2bd      	bcs.n	1001065c <memcpy+0x10>
100106e0:	3230      	adds	r2, #48	@ 0x30
100106e2:	d311      	bcc.n	10010708 <memcpy+0xbc>
100106e4:	f851 3b04 	ldr.w	r3, [r1], #4
100106e8:	f840 3b04 	str.w	r3, [r0], #4
100106ec:	f851 3b04 	ldr.w	r3, [r1], #4
100106f0:	f840 3b04 	str.w	r3, [r0], #4
100106f4:	f851 3b04 	ldr.w	r3, [r1], #4
100106f8:	f840 3b04 	str.w	r3, [r0], #4
100106fc:	f851 3b04 	ldr.w	r3, [r1], #4
10010700:	f840 3b04 	str.w	r3, [r0], #4
10010704:	3a10      	subs	r2, #16
10010706:	d2ed      	bcs.n	100106e4 <memcpy+0x98>
10010708:	320c      	adds	r2, #12
1001070a:	d305      	bcc.n	10010718 <memcpy+0xcc>
1001070c:	f851 3b04 	ldr.w	r3, [r1], #4
10010710:	f840 3b04 	str.w	r3, [r0], #4
10010714:	3a04      	subs	r2, #4
10010716:	d2f9      	bcs.n	1001070c <memcpy+0xc0>
10010718:	3204      	adds	r2, #4
1001071a:	d008      	beq.n	1001072e <memcpy+0xe2>
1001071c:	07d2      	lsls	r2, r2, #31
1001071e:	bf1c      	itt	ne
10010720:	f811 3b01 	ldrbne.w	r3, [r1], #1
10010724:	f800 3b01 	strbne.w	r3, [r0], #1
10010728:	d301      	bcc.n	1001072e <memcpy+0xe2>
1001072a:	880b      	ldrh	r3, [r1, #0]
1001072c:	8003      	strh	r3, [r0, #0]
1001072e:	4660      	mov	r0, ip
10010730:	4770      	bx	lr
10010732:	bf00      	nop
10010734:	2a08      	cmp	r2, #8
10010736:	d313      	bcc.n	10010760 <memcpy+0x114>
10010738:	078b      	lsls	r3, r1, #30
1001073a:	d08d      	beq.n	10010658 <memcpy+0xc>
1001073c:	f010 0303 	ands.w	r3, r0, #3
10010740:	d08a      	beq.n	10010658 <memcpy+0xc>
10010742:	f1c3 0304 	rsb	r3, r3, #4
10010746:	1ad2      	subs	r2, r2, r3
10010748:	07db      	lsls	r3, r3, #31
1001074a:	bf1c      	itt	ne
1001074c:	f811 3b01 	ldrbne.w	r3, [r1], #1
10010750:	f800 3b01 	strbne.w	r3, [r0], #1
10010754:	d380      	bcc.n	10010658 <memcpy+0xc>
10010756:	f831 3b02 	ldrh.w	r3, [r1], #2
1001075a:	f820 3b02 	strh.w	r3, [r0], #2
1001075e:	e77b      	b.n	10010658 <memcpy+0xc>
10010760:	3a04      	subs	r2, #4
10010762:	d3d9      	bcc.n	10010718 <memcpy+0xcc>
10010764:	3a01      	subs	r2, #1
10010766:	f811 3b01 	ldrb.w	r3, [r1], #1
1001076a:	f800 3b01 	strb.w	r3, [r0], #1
1001076e:	d2f9      	bcs.n	10010764 <memcpy+0x118>
10010770:	780b      	ldrb	r3, [r1, #0]
10010772:	7003      	strb	r3, [r0, #0]
10010774:	784b      	ldrb	r3, [r1, #1]
10010776:	7043      	strb	r3, [r0, #1]
10010778:	788b      	ldrb	r3, [r1, #2]
1001077a:	7083      	strb	r3, [r0, #2]
1001077c:	4660      	mov	r0, ip
1001077e:	4770      	bx	lr

10010780 <strlen>:
10010780:	b430      	push	{r4, r5}
10010782:	f890 f000 	pld	[r0]
10010786:	f020 0107 	bic.w	r1, r0, #7
1001078a:	f06f 0c00 	mvn.w	ip, #0
1001078e:	f010 0407 	ands.w	r4, r0, #7
10010792:	f891 f020 	pld	[r1, #32]
10010796:	f040 8048 	bne.w	1001082a <strlen+0xaa>
1001079a:	f04f 0400 	mov.w	r4, #0
1001079e:	f06f 0007 	mvn.w	r0, #7
100107a2:	e9d1 2300 	ldrd	r2, r3, [r1]
100107a6:	f891 f040 	pld	[r1, #64]	@ 0x40
100107aa:	f100 0008 	add.w	r0, r0, #8
100107ae:	fa82 f24c 	uadd8	r2, r2, ip
100107b2:	faa4 f28c 	sel	r2, r4, ip
100107b6:	fa83 f34c 	uadd8	r3, r3, ip
100107ba:	faa2 f38c 	sel	r3, r2, ip
100107be:	bb4b      	cbnz	r3, 10010814 <strlen+0x94>
100107c0:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
100107c4:	fa82 f24c 	uadd8	r2, r2, ip
100107c8:	f100 0008 	add.w	r0, r0, #8
100107cc:	faa4 f28c 	sel	r2, r4, ip
100107d0:	fa83 f34c 	uadd8	r3, r3, ip
100107d4:	faa2 f38c 	sel	r3, r2, ip
100107d8:	b9e3      	cbnz	r3, 10010814 <strlen+0x94>
100107da:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
100107de:	fa82 f24c 	uadd8	r2, r2, ip
100107e2:	f100 0008 	add.w	r0, r0, #8
100107e6:	faa4 f28c 	sel	r2, r4, ip
100107ea:	fa83 f34c 	uadd8	r3, r3, ip
100107ee:	faa2 f38c 	sel	r3, r2, ip
100107f2:	b97b      	cbnz	r3, 10010814 <strlen+0x94>
100107f4:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
100107f8:	f101 0120 	add.w	r1, r1, #32
100107fc:	fa82 f24c 	uadd8	r2, r2, ip
10010800:	f100 0008 	add.w	r0, r0, #8
10010804:	faa4 f28c 	sel	r2, r4, ip
10010808:	fa83 f34c 	uadd8	r3, r3, ip
1001080c:	faa2 f38c 	sel	r3, r2, ip
10010810:	2b00      	cmp	r3, #0
10010812:	d0c6      	beq.n	100107a2 <strlen+0x22>
10010814:	2a00      	cmp	r2, #0
10010816:	bf04      	itt	eq
10010818:	3004      	addeq	r0, #4
1001081a:	461a      	moveq	r2, r3
1001081c:	ba12      	rev	r2, r2
1001081e:	fab2 f282 	clz	r2, r2
10010822:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
10010826:	bc30      	pop	{r4, r5}
10010828:	4770      	bx	lr
1001082a:	e9d1 2300 	ldrd	r2, r3, [r1]
1001082e:	f004 0503 	and.w	r5, r4, #3
10010832:	f1c4 0000 	rsb	r0, r4, #0
10010836:	ea4f 05c5 	mov.w	r5, r5, lsl #3
1001083a:	f014 0f04 	tst.w	r4, #4
1001083e:	f891 f040 	pld	[r1, #64]	@ 0x40
10010842:	fa0c f505 	lsl.w	r5, ip, r5
10010846:	ea62 0205 	orn	r2, r2, r5
1001084a:	bf1c      	itt	ne
1001084c:	ea63 0305 	ornne	r3, r3, r5
10010850:	4662      	movne	r2, ip
10010852:	f04f 0400 	mov.w	r4, #0
10010856:	e7aa      	b.n	100107ae <strlen+0x2e>

10010858 <_malloc_trim_r>:
10010858:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1001085c:	4606      	mov	r6, r0
1001085e:	2008      	movs	r0, #8
10010860:	4689      	mov	r9, r1
10010862:	f7ff fdf1 	bl	10010448 <sysconf>
10010866:	f8df 809c 	ldr.w	r8, [pc, #156]	@ 10010904 <_malloc_trim_r+0xac>
1001086a:	4605      	mov	r5, r0
1001086c:	4630      	mov	r0, r6
1001086e:	f7ff fe0d 	bl	1001048c <__malloc_lock>
10010872:	f8d8 3008 	ldr.w	r3, [r8, #8]
10010876:	685f      	ldr	r7, [r3, #4]
10010878:	f027 0703 	bic.w	r7, r7, #3
1001087c:	f1a7 0411 	sub.w	r4, r7, #17
10010880:	eba4 0409 	sub.w	r4, r4, r9
10010884:	442c      	add	r4, r5
10010886:	fbb4 f4f5 	udiv	r4, r4, r5
1001088a:	3c01      	subs	r4, #1
1001088c:	fb05 f404 	mul.w	r4, r5, r4
10010890:	42a5      	cmp	r5, r4
10010892:	dc08      	bgt.n	100108a6 <_malloc_trim_r+0x4e>
10010894:	2100      	movs	r1, #0
10010896:	4630      	mov	r0, r6
10010898:	f000 f980 	bl	10010b9c <_sbrk_r>
1001089c:	f8d8 3008 	ldr.w	r3, [r8, #8]
100108a0:	443b      	add	r3, r7
100108a2:	4298      	cmp	r0, r3
100108a4:	d005      	beq.n	100108b2 <_malloc_trim_r+0x5a>
100108a6:	4630      	mov	r0, r6
100108a8:	f7ff fdf6 	bl	10010498 <__malloc_unlock>
100108ac:	2000      	movs	r0, #0
100108ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100108b2:	4261      	negs	r1, r4
100108b4:	4630      	mov	r0, r6
100108b6:	f000 f971 	bl	10010b9c <_sbrk_r>
100108ba:	3001      	adds	r0, #1
100108bc:	d00f      	beq.n	100108de <_malloc_trim_r+0x86>
100108be:	4a12      	ldr	r2, [pc, #72]	@ (10010908 <_malloc_trim_r+0xb0>)
100108c0:	f8d8 3008 	ldr.w	r3, [r8, #8]
100108c4:	1b3f      	subs	r7, r7, r4
100108c6:	f047 0701 	orr.w	r7, r7, #1
100108ca:	605f      	str	r7, [r3, #4]
100108cc:	6813      	ldr	r3, [r2, #0]
100108ce:	4630      	mov	r0, r6
100108d0:	1b1b      	subs	r3, r3, r4
100108d2:	6013      	str	r3, [r2, #0]
100108d4:	f7ff fde0 	bl	10010498 <__malloc_unlock>
100108d8:	2001      	movs	r0, #1
100108da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
100108de:	2100      	movs	r1, #0
100108e0:	4630      	mov	r0, r6
100108e2:	f000 f95b 	bl	10010b9c <_sbrk_r>
100108e6:	f8d8 2008 	ldr.w	r2, [r8, #8]
100108ea:	1a83      	subs	r3, r0, r2
100108ec:	2b0f      	cmp	r3, #15
100108ee:	ddda      	ble.n	100108a6 <_malloc_trim_r+0x4e>
100108f0:	f043 0301 	orr.w	r3, r3, #1
100108f4:	6053      	str	r3, [r2, #4]
100108f6:	4b05      	ldr	r3, [pc, #20]	@ (1001090c <_malloc_trim_r+0xb4>)
100108f8:	4903      	ldr	r1, [pc, #12]	@ (10010908 <_malloc_trim_r+0xb0>)
100108fa:	681b      	ldr	r3, [r3, #0]
100108fc:	1ac0      	subs	r0, r0, r3
100108fe:	6008      	str	r0, [r1, #0]
10010900:	e7d1      	b.n	100108a6 <_malloc_trim_r+0x4e>
10010902:	bf00      	nop
10010904:	20000010 	.word	0x20000010
10010908:	20000b44 	.word	0x20000b44
1001090c:	20000008 	.word	0x20000008

10010910 <_free_r>:
10010910:	2900      	cmp	r1, #0
10010912:	d07c      	beq.n	10010a0e <_free_r+0xfe>
10010914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10010916:	460c      	mov	r4, r1
10010918:	4606      	mov	r6, r0
1001091a:	f7ff fdb7 	bl	1001048c <__malloc_lock>
1001091e:	f854 3c04 	ldr.w	r3, [r4, #-4]
10010922:	4f77      	ldr	r7, [pc, #476]	@ (10010b00 <_free_r+0x1f0>)
10010924:	f1a4 0508 	sub.w	r5, r4, #8
10010928:	f023 0101 	bic.w	r1, r3, #1
1001092c:	1868      	adds	r0, r5, r1
1001092e:	f8d7 c008 	ldr.w	ip, [r7, #8]
10010932:	6842      	ldr	r2, [r0, #4]
10010934:	4584      	cmp	ip, r0
10010936:	f022 0203 	bic.w	r2, r2, #3
1001093a:	f000 8083 	beq.w	10010a44 <_free_r+0x134>
1001093e:	07db      	lsls	r3, r3, #31
10010940:	6042      	str	r2, [r0, #4]
10010942:	eb00 0c02 	add.w	ip, r0, r2
10010946:	d433      	bmi.n	100109b0 <_free_r+0xa0>
10010948:	f854 4c08 	ldr.w	r4, [r4, #-8]
1001094c:	f8dc 3004 	ldr.w	r3, [ip, #4]
10010950:	1b2d      	subs	r5, r5, r4
10010952:	4421      	add	r1, r4
10010954:	68ac      	ldr	r4, [r5, #8]
10010956:	f107 0c08 	add.w	ip, r7, #8
1001095a:	4564      	cmp	r4, ip
1001095c:	f003 0301 	and.w	r3, r3, #1
10010960:	d064      	beq.n	10010a2c <_free_r+0x11c>
10010962:	f8d5 e00c 	ldr.w	lr, [r5, #12]
10010966:	f8c4 e00c 	str.w	lr, [r4, #12]
1001096a:	f8ce 4008 	str.w	r4, [lr, #8]
1001096e:	2b00      	cmp	r3, #0
10010970:	f000 8081 	beq.w	10010a76 <_free_r+0x166>
10010974:	f041 0301 	orr.w	r3, r1, #1
10010978:	606b      	str	r3, [r5, #4]
1001097a:	6001      	str	r1, [r0, #0]
1001097c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10010980:	d222      	bcs.n	100109c8 <_free_r+0xb8>
10010982:	6878      	ldr	r0, [r7, #4]
10010984:	08cb      	lsrs	r3, r1, #3
10010986:	2201      	movs	r2, #1
10010988:	0949      	lsrs	r1, r1, #5
1001098a:	3301      	adds	r3, #1
1001098c:	408a      	lsls	r2, r1
1001098e:	4302      	orrs	r2, r0
10010990:	f857 1033 	ldr.w	r1, [r7, r3, lsl #3]
10010994:	607a      	str	r2, [r7, #4]
10010996:	eb07 02c3 	add.w	r2, r7, r3, lsl #3
1001099a:	3a08      	subs	r2, #8
1001099c:	e9c5 1202 	strd	r1, r2, [r5, #8]
100109a0:	f847 5033 	str.w	r5, [r7, r3, lsl #3]
100109a4:	60cd      	str	r5, [r1, #12]
100109a6:	4630      	mov	r0, r6
100109a8:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
100109ac:	f7ff bd74 	b.w	10010498 <__malloc_unlock>
100109b0:	f8dc 3004 	ldr.w	r3, [ip, #4]
100109b4:	07db      	lsls	r3, r3, #31
100109b6:	d52b      	bpl.n	10010a10 <_free_r+0x100>
100109b8:	f041 0301 	orr.w	r3, r1, #1
100109bc:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
100109c0:	f844 3c04 	str.w	r3, [r4, #-4]
100109c4:	6001      	str	r1, [r0, #0]
100109c6:	d3dc      	bcc.n	10010982 <_free_r+0x72>
100109c8:	f5b1 6f20 	cmp.w	r1, #2560	@ 0xa00
100109cc:	ea4f 2351 	mov.w	r3, r1, lsr #9
100109d0:	d253      	bcs.n	10010a7a <_free_r+0x16a>
100109d2:	098b      	lsrs	r3, r1, #6
100109d4:	f103 0039 	add.w	r0, r3, #57	@ 0x39
100109d8:	f103 0238 	add.w	r2, r3, #56	@ 0x38
100109dc:	00c3      	lsls	r3, r0, #3
100109de:	18f8      	adds	r0, r7, r3
100109e0:	58fb      	ldr	r3, [r7, r3]
100109e2:	3808      	subs	r0, #8
100109e4:	4298      	cmp	r0, r3
100109e6:	d103      	bne.n	100109f0 <_free_r+0xe0>
100109e8:	e063      	b.n	10010ab2 <_free_r+0x1a2>
100109ea:	689b      	ldr	r3, [r3, #8]
100109ec:	4298      	cmp	r0, r3
100109ee:	d004      	beq.n	100109fa <_free_r+0xea>
100109f0:	685a      	ldr	r2, [r3, #4]
100109f2:	f022 0203 	bic.w	r2, r2, #3
100109f6:	428a      	cmp	r2, r1
100109f8:	d8f7      	bhi.n	100109ea <_free_r+0xda>
100109fa:	68d8      	ldr	r0, [r3, #12]
100109fc:	e9c5 3002 	strd	r3, r0, [r5, #8]
10010a00:	6085      	str	r5, [r0, #8]
10010a02:	60dd      	str	r5, [r3, #12]
10010a04:	4630      	mov	r0, r6
10010a06:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
10010a0a:	f7ff bd45 	b.w	10010498 <__malloc_unlock>
10010a0e:	4770      	bx	lr
10010a10:	4411      	add	r1, r2
10010a12:	f107 0c08 	add.w	ip, r7, #8
10010a16:	6883      	ldr	r3, [r0, #8]
10010a18:	4563      	cmp	r3, ip
10010a1a:	d03f      	beq.n	10010a9c <_free_r+0x18c>
10010a1c:	68c2      	ldr	r2, [r0, #12]
10010a1e:	60da      	str	r2, [r3, #12]
10010a20:	6093      	str	r3, [r2, #8]
10010a22:	f041 0301 	orr.w	r3, r1, #1
10010a26:	606b      	str	r3, [r5, #4]
10010a28:	5069      	str	r1, [r5, r1]
10010a2a:	e7a7      	b.n	1001097c <_free_r+0x6c>
10010a2c:	2b00      	cmp	r3, #0
10010a2e:	d161      	bne.n	10010af4 <_free_r+0x1e4>
10010a30:	440a      	add	r2, r1
10010a32:	e9d0 1302 	ldrd	r1, r3, [r0, #8]
10010a36:	60cb      	str	r3, [r1, #12]
10010a38:	6099      	str	r1, [r3, #8]
10010a3a:	f042 0301 	orr.w	r3, r2, #1
10010a3e:	606b      	str	r3, [r5, #4]
10010a40:	50aa      	str	r2, [r5, r2]
10010a42:	e7b0      	b.n	100109a6 <_free_r+0x96>
10010a44:	440a      	add	r2, r1
10010a46:	07d9      	lsls	r1, r3, #31
10010a48:	d407      	bmi.n	10010a5a <_free_r+0x14a>
10010a4a:	f854 3c08 	ldr.w	r3, [r4, #-8]
10010a4e:	1aed      	subs	r5, r5, r3
10010a50:	441a      	add	r2, r3
10010a52:	e9d5 1302 	ldrd	r1, r3, [r5, #8]
10010a56:	60cb      	str	r3, [r1, #12]
10010a58:	6099      	str	r1, [r3, #8]
10010a5a:	f042 0301 	orr.w	r3, r2, #1
10010a5e:	606b      	str	r3, [r5, #4]
10010a60:	4b28      	ldr	r3, [pc, #160]	@ (10010b04 <_free_r+0x1f4>)
10010a62:	60bd      	str	r5, [r7, #8]
10010a64:	681b      	ldr	r3, [r3, #0]
10010a66:	4293      	cmp	r3, r2
10010a68:	d89d      	bhi.n	100109a6 <_free_r+0x96>
10010a6a:	4b27      	ldr	r3, [pc, #156]	@ (10010b08 <_free_r+0x1f8>)
10010a6c:	4630      	mov	r0, r6
10010a6e:	6819      	ldr	r1, [r3, #0]
10010a70:	f7ff fef2 	bl	10010858 <_malloc_trim_r>
10010a74:	e797      	b.n	100109a6 <_free_r+0x96>
10010a76:	4411      	add	r1, r2
10010a78:	e7cd      	b.n	10010a16 <_free_r+0x106>
10010a7a:	2b14      	cmp	r3, #20
10010a7c:	d908      	bls.n	10010a90 <_free_r+0x180>
10010a7e:	2b54      	cmp	r3, #84	@ 0x54
10010a80:	d81f      	bhi.n	10010ac2 <_free_r+0x1b2>
10010a82:	0b0b      	lsrs	r3, r1, #12
10010a84:	f103 006f 	add.w	r0, r3, #111	@ 0x6f
10010a88:	f103 026e 	add.w	r2, r3, #110	@ 0x6e
10010a8c:	00c3      	lsls	r3, r0, #3
10010a8e:	e7a6      	b.n	100109de <_free_r+0xce>
10010a90:	f103 005c 	add.w	r0, r3, #92	@ 0x5c
10010a94:	f103 025b 	add.w	r2, r3, #91	@ 0x5b
10010a98:	00c3      	lsls	r3, r0, #3
10010a9a:	e7a0      	b.n	100109de <_free_r+0xce>
10010a9c:	f041 0301 	orr.w	r3, r1, #1
10010aa0:	613d      	str	r5, [r7, #16]
10010aa2:	617d      	str	r5, [r7, #20]
10010aa4:	f8c5 c008 	str.w	ip, [r5, #8]
10010aa8:	f8c5 c00c 	str.w	ip, [r5, #12]
10010aac:	606b      	str	r3, [r5, #4]
10010aae:	5069      	str	r1, [r5, r1]
10010ab0:	e779      	b.n	100109a6 <_free_r+0x96>
10010ab2:	6879      	ldr	r1, [r7, #4]
10010ab4:	1092      	asrs	r2, r2, #2
10010ab6:	2401      	movs	r4, #1
10010ab8:	fa04 f202 	lsl.w	r2, r4, r2
10010abc:	430a      	orrs	r2, r1
10010abe:	607a      	str	r2, [r7, #4]
10010ac0:	e79c      	b.n	100109fc <_free_r+0xec>
10010ac2:	f5b3 7faa 	cmp.w	r3, #340	@ 0x154
10010ac6:	d806      	bhi.n	10010ad6 <_free_r+0x1c6>
10010ac8:	0bcb      	lsrs	r3, r1, #15
10010aca:	f103 0078 	add.w	r0, r3, #120	@ 0x78
10010ace:	f103 0277 	add.w	r2, r3, #119	@ 0x77
10010ad2:	00c3      	lsls	r3, r0, #3
10010ad4:	e783      	b.n	100109de <_free_r+0xce>
10010ad6:	f240 5254 	movw	r2, #1364	@ 0x554
10010ada:	4293      	cmp	r3, r2
10010adc:	d806      	bhi.n	10010aec <_free_r+0x1dc>
10010ade:	0c8b      	lsrs	r3, r1, #18
10010ae0:	f103 007d 	add.w	r0, r3, #125	@ 0x7d
10010ae4:	f103 027c 	add.w	r2, r3, #124	@ 0x7c
10010ae8:	00c3      	lsls	r3, r0, #3
10010aea:	e778      	b.n	100109de <_free_r+0xce>
10010aec:	f44f 737e 	mov.w	r3, #1016	@ 0x3f8
10010af0:	227e      	movs	r2, #126	@ 0x7e
10010af2:	e774      	b.n	100109de <_free_r+0xce>
10010af4:	f041 0301 	orr.w	r3, r1, #1
10010af8:	606b      	str	r3, [r5, #4]
10010afa:	6001      	str	r1, [r0, #0]
10010afc:	e753      	b.n	100109a6 <_free_r+0x96>
10010afe:	bf00      	nop
10010b00:	20000010 	.word	0x20000010
10010b04:	2000000c 	.word	0x2000000c
10010b08:	20000b74 	.word	0x20000b74

10010b0c <__sread>:
10010b0c:	b510      	push	{r4, lr}
10010b0e:	460c      	mov	r4, r1
10010b10:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10010b14:	f004 fe20 	bl	10015758 <_read_r>
10010b18:	2800      	cmp	r0, #0
10010b1a:	db03      	blt.n	10010b24 <__sread+0x18>
10010b1c:	6d23      	ldr	r3, [r4, #80]	@ 0x50
10010b1e:	4403      	add	r3, r0
10010b20:	6523      	str	r3, [r4, #80]	@ 0x50
10010b22:	bd10      	pop	{r4, pc}
10010b24:	89a3      	ldrh	r3, [r4, #12]
10010b26:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
10010b2a:	81a3      	strh	r3, [r4, #12]
10010b2c:	bd10      	pop	{r4, pc}
10010b2e:	bf00      	nop

10010b30 <__swrite>:
10010b30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10010b34:	460c      	mov	r4, r1
10010b36:	f9b1 100c 	ldrsh.w	r1, [r1, #12]
10010b3a:	461f      	mov	r7, r3
10010b3c:	05cb      	lsls	r3, r1, #23
10010b3e:	4605      	mov	r5, r0
10010b40:	4616      	mov	r6, r2
10010b42:	d40b      	bmi.n	10010b5c <__swrite+0x2c>
10010b44:	f421 5180 	bic.w	r1, r1, #4096	@ 0x1000
10010b48:	81a1      	strh	r1, [r4, #12]
10010b4a:	463b      	mov	r3, r7
10010b4c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10010b50:	4632      	mov	r2, r6
10010b52:	4628      	mov	r0, r5
10010b54:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10010b58:	f000 b9ae 	b.w	10010eb8 <_write_r>
10010b5c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10010b60:	2302      	movs	r3, #2
10010b62:	2200      	movs	r2, #0
10010b64:	f004 fde2 	bl	1001572c <_lseek_r>
10010b68:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
10010b6c:	e7ea      	b.n	10010b44 <__swrite+0x14>
10010b6e:	bf00      	nop

10010b70 <__sseek>:
10010b70:	b510      	push	{r4, lr}
10010b72:	460c      	mov	r4, r1
10010b74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10010b78:	f004 fdd8 	bl	1001572c <_lseek_r>
10010b7c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10010b80:	1c42      	adds	r2, r0, #1
10010b82:	bf0e      	itee	eq
10010b84:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
10010b88:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
10010b8c:	6520      	strne	r0, [r4, #80]	@ 0x50
10010b8e:	81a3      	strh	r3, [r4, #12]
10010b90:	bd10      	pop	{r4, pc}
10010b92:	bf00      	nop

10010b94 <__sclose>:
10010b94:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10010b98:	f004 ba6e 	b.w	10015078 <_close_r>

10010b9c <_sbrk_r>:
10010b9c:	b538      	push	{r3, r4, r5, lr}
10010b9e:	4d07      	ldr	r5, [pc, #28]	@ (10010bbc <_sbrk_r+0x20>)
10010ba0:	2200      	movs	r2, #0
10010ba2:	4604      	mov	r4, r0
10010ba4:	4608      	mov	r0, r1
10010ba6:	602a      	str	r2, [r5, #0]
10010ba8:	f7fd fd7e 	bl	1000e6a8 <_sbrk>
10010bac:	1c43      	adds	r3, r0, #1
10010bae:	d000      	beq.n	10010bb2 <_sbrk_r+0x16>
10010bb0:	bd38      	pop	{r3, r4, r5, pc}
10010bb2:	682b      	ldr	r3, [r5, #0]
10010bb4:	2b00      	cmp	r3, #0
10010bb6:	d0fb      	beq.n	10010bb0 <_sbrk_r+0x14>
10010bb8:	6023      	str	r3, [r4, #0]
10010bba:	bd38      	pop	{r3, r4, r5, pc}
10010bbc:	20000e54 	.word	0x20000e54

10010bc0 <__sfvwrite_r>:
10010bc0:	6893      	ldr	r3, [r2, #8]
10010bc2:	2b00      	cmp	r3, #0
10010bc4:	f000 80f6 	beq.w	10010db4 <__sfvwrite_r+0x1f4>
10010bc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10010bcc:	f9b1 c00c 	ldrsh.w	ip, [r1, #12]
10010bd0:	f01c 0f08 	tst.w	ip, #8
10010bd4:	b083      	sub	sp, #12
10010bd6:	4690      	mov	r8, r2
10010bd8:	4681      	mov	r9, r0
10010bda:	460c      	mov	r4, r1
10010bdc:	d031      	beq.n	10010c42 <__sfvwrite_r+0x82>
10010bde:	690b      	ldr	r3, [r1, #16]
10010be0:	b37b      	cbz	r3, 10010c42 <__sfvwrite_r+0x82>
10010be2:	f01c 0702 	ands.w	r7, ip, #2
10010be6:	f8d8 6000 	ldr.w	r6, [r8]
10010bea:	d038      	beq.n	10010c5e <__sfvwrite_r+0x9e>
10010bec:	2700      	movs	r7, #0
10010bee:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10010bf2:	69e1      	ldr	r1, [r4, #28]
10010bf4:	f8df a2bc 	ldr.w	sl, [pc, #700]	@ 10010eb4 <__sfvwrite_r+0x2f4>
10010bf8:	463d      	mov	r5, r7
10010bfa:	4555      	cmp	r5, sl
10010bfc:	462b      	mov	r3, r5
10010bfe:	463a      	mov	r2, r7
10010c00:	bf28      	it	cs
10010c02:	4653      	movcs	r3, sl
10010c04:	4648      	mov	r0, r9
10010c06:	b1c5      	cbz	r5, 10010c3a <__sfvwrite_r+0x7a>
10010c08:	47d8      	blx	fp
10010c0a:	2800      	cmp	r0, #0
10010c0c:	f340 80c8 	ble.w	10010da0 <__sfvwrite_r+0x1e0>
10010c10:	f8d8 3008 	ldr.w	r3, [r8, #8]
10010c14:	1a1b      	subs	r3, r3, r0
10010c16:	4407      	add	r7, r0
10010c18:	1a2d      	subs	r5, r5, r0
10010c1a:	f8c8 3008 	str.w	r3, [r8, #8]
10010c1e:	2b00      	cmp	r3, #0
10010c20:	f000 80b4 	beq.w	10010d8c <__sfvwrite_r+0x1cc>
10010c24:	4555      	cmp	r5, sl
10010c26:	462b      	mov	r3, r5
10010c28:	f8d4 b024 	ldr.w	fp, [r4, #36]	@ 0x24
10010c2c:	69e1      	ldr	r1, [r4, #28]
10010c2e:	bf28      	it	cs
10010c30:	4653      	movcs	r3, sl
10010c32:	463a      	mov	r2, r7
10010c34:	4648      	mov	r0, r9
10010c36:	2d00      	cmp	r5, #0
10010c38:	d1e6      	bne.n	10010c08 <__sfvwrite_r+0x48>
10010c3a:	e9d6 7500 	ldrd	r7, r5, [r6]
10010c3e:	3608      	adds	r6, #8
10010c40:	e7db      	b.n	10010bfa <__sfvwrite_r+0x3a>
10010c42:	4621      	mov	r1, r4
10010c44:	4648      	mov	r0, r9
10010c46:	f003 f981 	bl	10013f4c <__swsetup_r>
10010c4a:	2800      	cmp	r0, #0
10010c4c:	f040 80ad 	bne.w	10010daa <__sfvwrite_r+0x1ea>
10010c50:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10010c54:	f8d8 6000 	ldr.w	r6, [r8]
10010c58:	f01c 0702 	ands.w	r7, ip, #2
10010c5c:	d1c6      	bne.n	10010bec <__sfvwrite_r+0x2c>
10010c5e:	f01c 0a01 	ands.w	sl, ip, #1
10010c62:	d163      	bne.n	10010d2c <__sfvwrite_r+0x16c>
10010c64:	6823      	ldr	r3, [r4, #0]
10010c66:	68a1      	ldr	r1, [r4, #8]
10010c68:	4657      	mov	r7, sl
10010c6a:	4618      	mov	r0, r3
10010c6c:	468b      	mov	fp, r1
10010c6e:	2f00      	cmp	r7, #0
10010c70:	d058      	beq.n	10010d24 <__sfvwrite_r+0x164>
10010c72:	f41c 7f00 	tst.w	ip, #512	@ 0x200
10010c76:	f000 80b1 	beq.w	10010ddc <__sfvwrite_r+0x21c>
10010c7a:	42b9      	cmp	r1, r7
10010c7c:	460a      	mov	r2, r1
10010c7e:	f200 80dd 	bhi.w	10010e3c <__sfvwrite_r+0x27c>
10010c82:	f41c 6f90 	tst.w	ip, #1152	@ 0x480
10010c86:	d02f      	beq.n	10010ce8 <__sfvwrite_r+0x128>
10010c88:	6921      	ldr	r1, [r4, #16]
10010c8a:	6962      	ldr	r2, [r4, #20]
10010c8c:	1a5d      	subs	r5, r3, r1
10010c8e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
10010c92:	eb02 72d2 	add.w	r2, r2, r2, lsr #31
10010c96:	1c6b      	adds	r3, r5, #1
10010c98:	1052      	asrs	r2, r2, #1
10010c9a:	443b      	add	r3, r7
10010c9c:	4293      	cmp	r3, r2
10010c9e:	bf92      	itee	ls
10010ca0:	4693      	movls	fp, r2
10010ca2:	469b      	movhi	fp, r3
10010ca4:	461a      	movhi	r2, r3
10010ca6:	f41c 6f80 	tst.w	ip, #1024	@ 0x400
10010caa:	f000 80e6 	beq.w	10010e7a <__sfvwrite_r+0x2ba>
10010cae:	4611      	mov	r1, r2
10010cb0:	4648      	mov	r0, r9
10010cb2:	f7ff f86f 	bl	1000fd94 <_malloc_r>
10010cb6:	2800      	cmp	r0, #0
10010cb8:	f000 80f5 	beq.w	10010ea6 <__sfvwrite_r+0x2e6>
10010cbc:	462a      	mov	r2, r5
10010cbe:	6921      	ldr	r1, [r4, #16]
10010cc0:	9001      	str	r0, [sp, #4]
10010cc2:	f7ff fcc3 	bl	1001064c <memcpy>
10010cc6:	89a2      	ldrh	r2, [r4, #12]
10010cc8:	9b01      	ldr	r3, [sp, #4]
10010cca:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
10010cce:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
10010cd2:	81a2      	strh	r2, [r4, #12]
10010cd4:	1958      	adds	r0, r3, r5
10010cd6:	ebab 0505 	sub.w	r5, fp, r5
10010cda:	f8c4 b014 	str.w	fp, [r4, #20]
10010cde:	6123      	str	r3, [r4, #16]
10010ce0:	60a5      	str	r5, [r4, #8]
10010ce2:	6020      	str	r0, [r4, #0]
10010ce4:	46bb      	mov	fp, r7
10010ce6:	463a      	mov	r2, r7
10010ce8:	4651      	mov	r1, sl
10010cea:	9201      	str	r2, [sp, #4]
10010cec:	f003 f81e 	bl	10013d2c <memmove>
10010cf0:	68a1      	ldr	r1, [r4, #8]
10010cf2:	6823      	ldr	r3, [r4, #0]
10010cf4:	9a01      	ldr	r2, [sp, #4]
10010cf6:	eba1 010b 	sub.w	r1, r1, fp
10010cfa:	441a      	add	r2, r3
10010cfc:	463d      	mov	r5, r7
10010cfe:	60a1      	str	r1, [r4, #8]
10010d00:	6022      	str	r2, [r4, #0]
10010d02:	2700      	movs	r7, #0
10010d04:	f8d8 3008 	ldr.w	r3, [r8, #8]
10010d08:	1b5b      	subs	r3, r3, r5
10010d0a:	44aa      	add	sl, r5
10010d0c:	f8c8 3008 	str.w	r3, [r8, #8]
10010d10:	2b00      	cmp	r3, #0
10010d12:	d03b      	beq.n	10010d8c <__sfvwrite_r+0x1cc>
10010d14:	6823      	ldr	r3, [r4, #0]
10010d16:	68a1      	ldr	r1, [r4, #8]
10010d18:	f9b4 c00c 	ldrsh.w	ip, [r4, #12]
10010d1c:	4618      	mov	r0, r3
10010d1e:	468b      	mov	fp, r1
10010d20:	2f00      	cmp	r7, #0
10010d22:	d1a6      	bne.n	10010c72 <__sfvwrite_r+0xb2>
10010d24:	e9d6 a700 	ldrd	sl, r7, [r6]
10010d28:	3608      	adds	r6, #8
10010d2a:	e79e      	b.n	10010c6a <__sfvwrite_r+0xaa>
10010d2c:	4638      	mov	r0, r7
10010d2e:	46bb      	mov	fp, r7
10010d30:	463d      	mov	r5, r7
10010d32:	2d00      	cmp	r5, #0
10010d34:	d040      	beq.n	10010db8 <__sfvwrite_r+0x1f8>
10010d36:	2800      	cmp	r0, #0
10010d38:	d045      	beq.n	10010dc6 <__sfvwrite_r+0x206>
10010d3a:	463a      	mov	r2, r7
10010d3c:	e9d4 c304 	ldrd	ip, r3, [r4, #16]
10010d40:	6820      	ldr	r0, [r4, #0]
10010d42:	68a1      	ldr	r1, [r4, #8]
10010d44:	42aa      	cmp	r2, r5
10010d46:	bf28      	it	cs
10010d48:	462a      	movcs	r2, r5
10010d4a:	4560      	cmp	r0, ip
10010d4c:	d904      	bls.n	10010d58 <__sfvwrite_r+0x198>
10010d4e:	eb01 0a03 	add.w	sl, r1, r3
10010d52:	4552      	cmp	r2, sl
10010d54:	f300 8082 	bgt.w	10010e5c <__sfvwrite_r+0x29c>
10010d58:	4293      	cmp	r3, r2
10010d5a:	dc72      	bgt.n	10010e42 <__sfvwrite_r+0x282>
10010d5c:	69e1      	ldr	r1, [r4, #28]
10010d5e:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
10010d62:	465a      	mov	r2, fp
10010d64:	4648      	mov	r0, r9
10010d66:	47e0      	blx	ip
10010d68:	f1b0 0a00 	subs.w	sl, r0, #0
10010d6c:	dd18      	ble.n	10010da0 <__sfvwrite_r+0x1e0>
10010d6e:	ebb7 070a 	subs.w	r7, r7, sl
10010d72:	d00f      	beq.n	10010d94 <__sfvwrite_r+0x1d4>
10010d74:	2001      	movs	r0, #1
10010d76:	f8d8 3008 	ldr.w	r3, [r8, #8]
10010d7a:	eba3 030a 	sub.w	r3, r3, sl
10010d7e:	44d3      	add	fp, sl
10010d80:	eba5 050a 	sub.w	r5, r5, sl
10010d84:	f8c8 3008 	str.w	r3, [r8, #8]
10010d88:	2b00      	cmp	r3, #0
10010d8a:	d1d2      	bne.n	10010d32 <__sfvwrite_r+0x172>
10010d8c:	2000      	movs	r0, #0
10010d8e:	b003      	add	sp, #12
10010d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010d94:	4621      	mov	r1, r4
10010d96:	4648      	mov	r0, r9
10010d98:	f004 fa14 	bl	100151c4 <_fflush_r>
10010d9c:	2800      	cmp	r0, #0
10010d9e:	d0ea      	beq.n	10010d76 <__sfvwrite_r+0x1b6>
10010da0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10010da4:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10010da8:	81a3      	strh	r3, [r4, #12]
10010daa:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10010dae:	b003      	add	sp, #12
10010db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10010db4:	2000      	movs	r0, #0
10010db6:	4770      	bx	lr
10010db8:	6875      	ldr	r5, [r6, #4]
10010dba:	4633      	mov	r3, r6
10010dbc:	3608      	adds	r6, #8
10010dbe:	2d00      	cmp	r5, #0
10010dc0:	d0fa      	beq.n	10010db8 <__sfvwrite_r+0x1f8>
10010dc2:	f8d3 b000 	ldr.w	fp, [r3]
10010dc6:	462a      	mov	r2, r5
10010dc8:	210a      	movs	r1, #10
10010dca:	4658      	mov	r0, fp
10010dcc:	f004 fa28 	bl	10015220 <memchr>
10010dd0:	2800      	cmp	r0, #0
10010dd2:	d065      	beq.n	10010ea0 <__sfvwrite_r+0x2e0>
10010dd4:	3001      	adds	r0, #1
10010dd6:	eba0 070b 	sub.w	r7, r0, fp
10010dda:	e7ae      	b.n	10010d3a <__sfvwrite_r+0x17a>
10010ddc:	6922      	ldr	r2, [r4, #16]
10010dde:	429a      	cmp	r2, r3
10010de0:	d314      	bcc.n	10010e0c <__sfvwrite_r+0x24c>
10010de2:	6962      	ldr	r2, [r4, #20]
10010de4:	42ba      	cmp	r2, r7
10010de6:	d811      	bhi.n	10010e0c <__sfvwrite_r+0x24c>
10010de8:	f06f 4300 	mvn.w	r3, #2147483648	@ 0x80000000
10010dec:	42bb      	cmp	r3, r7
10010dee:	bf28      	it	cs
10010df0:	463b      	movcs	r3, r7
10010df2:	6a65      	ldr	r5, [r4, #36]	@ 0x24
10010df4:	fb93 f3f2 	sdiv	r3, r3, r2
10010df8:	69e1      	ldr	r1, [r4, #28]
10010dfa:	fb02 f303 	mul.w	r3, r2, r3
10010dfe:	4648      	mov	r0, r9
10010e00:	4652      	mov	r2, sl
10010e02:	47a8      	blx	r5
10010e04:	1e05      	subs	r5, r0, #0
10010e06:	ddcb      	ble.n	10010da0 <__sfvwrite_r+0x1e0>
10010e08:	1b7f      	subs	r7, r7, r5
10010e0a:	e77b      	b.n	10010d04 <__sfvwrite_r+0x144>
10010e0c:	42b9      	cmp	r1, r7
10010e0e:	bf28      	it	cs
10010e10:	4639      	movcs	r1, r7
10010e12:	460d      	mov	r5, r1
10010e14:	4618      	mov	r0, r3
10010e16:	460a      	mov	r2, r1
10010e18:	4651      	mov	r1, sl
10010e1a:	f002 ff87 	bl	10013d2c <memmove>
10010e1e:	68a1      	ldr	r1, [r4, #8]
10010e20:	6823      	ldr	r3, [r4, #0]
10010e22:	1b49      	subs	r1, r1, r5
10010e24:	442b      	add	r3, r5
10010e26:	60a1      	str	r1, [r4, #8]
10010e28:	6023      	str	r3, [r4, #0]
10010e2a:	2900      	cmp	r1, #0
10010e2c:	d1ec      	bne.n	10010e08 <__sfvwrite_r+0x248>
10010e2e:	4621      	mov	r1, r4
10010e30:	4648      	mov	r0, r9
10010e32:	f004 f9c7 	bl	100151c4 <_fflush_r>
10010e36:	2800      	cmp	r0, #0
10010e38:	d0e6      	beq.n	10010e08 <__sfvwrite_r+0x248>
10010e3a:	e7b1      	b.n	10010da0 <__sfvwrite_r+0x1e0>
10010e3c:	46bb      	mov	fp, r7
10010e3e:	463a      	mov	r2, r7
10010e40:	e752      	b.n	10010ce8 <__sfvwrite_r+0x128>
10010e42:	4659      	mov	r1, fp
10010e44:	9201      	str	r2, [sp, #4]
10010e46:	f002 ff71 	bl	10013d2c <memmove>
10010e4a:	9a01      	ldr	r2, [sp, #4]
10010e4c:	68a3      	ldr	r3, [r4, #8]
10010e4e:	1a9b      	subs	r3, r3, r2
10010e50:	60a3      	str	r3, [r4, #8]
10010e52:	6823      	ldr	r3, [r4, #0]
10010e54:	4413      	add	r3, r2
10010e56:	6023      	str	r3, [r4, #0]
10010e58:	4692      	mov	sl, r2
10010e5a:	e788      	b.n	10010d6e <__sfvwrite_r+0x1ae>
10010e5c:	4659      	mov	r1, fp
10010e5e:	4652      	mov	r2, sl
10010e60:	f002 ff64 	bl	10013d2c <memmove>
10010e64:	6823      	ldr	r3, [r4, #0]
10010e66:	4453      	add	r3, sl
10010e68:	6023      	str	r3, [r4, #0]
10010e6a:	4621      	mov	r1, r4
10010e6c:	4648      	mov	r0, r9
10010e6e:	f004 f9a9 	bl	100151c4 <_fflush_r>
10010e72:	2800      	cmp	r0, #0
10010e74:	f43f af7b 	beq.w	10010d6e <__sfvwrite_r+0x1ae>
10010e78:	e792      	b.n	10010da0 <__sfvwrite_r+0x1e0>
10010e7a:	4648      	mov	r0, r9
10010e7c:	f004 fa58 	bl	10015330 <_realloc_r>
10010e80:	4603      	mov	r3, r0
10010e82:	2800      	cmp	r0, #0
10010e84:	f47f af26 	bne.w	10010cd4 <__sfvwrite_r+0x114>
10010e88:	6921      	ldr	r1, [r4, #16]
10010e8a:	4648      	mov	r0, r9
10010e8c:	f7ff fd40 	bl	10010910 <_free_r>
10010e90:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10010e94:	220c      	movs	r2, #12
10010e96:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
10010e9a:	f8c9 2000 	str.w	r2, [r9]
10010e9e:	e781      	b.n	10010da4 <__sfvwrite_r+0x1e4>
10010ea0:	1c6a      	adds	r2, r5, #1
10010ea2:	4617      	mov	r7, r2
10010ea4:	e74a      	b.n	10010d3c <__sfvwrite_r+0x17c>
10010ea6:	220c      	movs	r2, #12
10010ea8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10010eac:	f8c9 2000 	str.w	r2, [r9]
10010eb0:	e778      	b.n	10010da4 <__sfvwrite_r+0x1e4>
10010eb2:	bf00      	nop
10010eb4:	7ffffc00 	.word	0x7ffffc00

10010eb8 <_write_r>:
10010eb8:	b538      	push	{r3, r4, r5, lr}
10010eba:	460c      	mov	r4, r1
10010ebc:	4d08      	ldr	r5, [pc, #32]	@ (10010ee0 <_write_r+0x28>)
10010ebe:	4684      	mov	ip, r0
10010ec0:	4611      	mov	r1, r2
10010ec2:	4620      	mov	r0, r4
10010ec4:	461a      	mov	r2, r3
10010ec6:	2300      	movs	r3, #0
10010ec8:	602b      	str	r3, [r5, #0]
10010eca:	4664      	mov	r4, ip
10010ecc:	f7fd fac4 	bl	1000e458 <_write>
10010ed0:	1c43      	adds	r3, r0, #1
10010ed2:	d000      	beq.n	10010ed6 <_write_r+0x1e>
10010ed4:	bd38      	pop	{r3, r4, r5, pc}
10010ed6:	682b      	ldr	r3, [r5, #0]
10010ed8:	2b00      	cmp	r3, #0
10010eda:	d0fb      	beq.n	10010ed4 <_write_r+0x1c>
10010edc:	6023      	str	r3, [r4, #0]
10010ede:	bd38      	pop	{r3, r4, r5, pc}
10010ee0:	20000e54 	.word	0x20000e54

10010ee4 <_fwalk_sglue>:
10010ee4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10010ee8:	4680      	mov	r8, r0
10010eea:	460f      	mov	r7, r1
10010eec:	4616      	mov	r6, r2
10010eee:	f04f 0900 	mov.w	r9, #0
10010ef2:	e9d6 5401 	ldrd	r5, r4, [r6, #4]
10010ef6:	3d01      	subs	r5, #1
10010ef8:	d411      	bmi.n	10010f1e <_fwalk_sglue+0x3a>
10010efa:	89a3      	ldrh	r3, [r4, #12]
10010efc:	2b01      	cmp	r3, #1
10010efe:	f105 35ff 	add.w	r5, r5, #4294967295	@ 0xffffffff
10010f02:	d908      	bls.n	10010f16 <_fwalk_sglue+0x32>
10010f04:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
10010f08:	3301      	adds	r3, #1
10010f0a:	4621      	mov	r1, r4
10010f0c:	d003      	beq.n	10010f16 <_fwalk_sglue+0x32>
10010f0e:	4640      	mov	r0, r8
10010f10:	47b8      	blx	r7
10010f12:	ea49 0900 	orr.w	r9, r9, r0
10010f16:	1c6b      	adds	r3, r5, #1
10010f18:	f104 0468 	add.w	r4, r4, #104	@ 0x68
10010f1c:	d1ed      	bne.n	10010efa <_fwalk_sglue+0x16>
10010f1e:	6836      	ldr	r6, [r6, #0]
10010f20:	2e00      	cmp	r6, #0
10010f22:	d1e6      	bne.n	10010ef2 <_fwalk_sglue+0xe>
10010f24:	4648      	mov	r0, r9
10010f26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10010f2a:	bf00      	nop

10010f2c <_vfprintf_r>:
10010f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10010f30:	b0df      	sub	sp, #380	@ 0x17c
10010f32:	461c      	mov	r4, r3
10010f34:	9107      	str	r1, [sp, #28]
10010f36:	4691      	mov	r9, r2
10010f38:	4683      	mov	fp, r0
10010f3a:	f002 ffa3 	bl	10013e84 <_localeconv_r>
10010f3e:	6803      	ldr	r3, [r0, #0]
10010f40:	9319      	str	r3, [sp, #100]	@ 0x64
10010f42:	4618      	mov	r0, r3
10010f44:	f7ff fc1c 	bl	10010780 <strlen>
10010f48:	2208      	movs	r2, #8
10010f4a:	9018      	str	r0, [sp, #96]	@ 0x60
10010f4c:	2100      	movs	r1, #0
10010f4e:	a82e      	add	r0, sp, #184	@ 0xb8
10010f50:	940d      	str	r4, [sp, #52]	@ 0x34
10010f52:	f7ff f9e3 	bl	1001031c <memset>
10010f56:	f1bb 0f00 	cmp.w	fp, #0
10010f5a:	d004      	beq.n	10010f66 <_vfprintf_r+0x3a>
10010f5c:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10010f60:	2b00      	cmp	r3, #0
10010f62:	f001 807f 	beq.w	10012064 <_vfprintf_r+0x1138>
10010f66:	9b07      	ldr	r3, [sp, #28]
10010f68:	6e5a      	ldr	r2, [r3, #100]	@ 0x64
10010f6a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10010f6e:	07d5      	lsls	r5, r2, #31
10010f70:	d402      	bmi.n	10010f78 <_vfprintf_r+0x4c>
10010f72:	0598      	lsls	r0, r3, #22
10010f74:	f140 869f 	bpl.w	10011cb6 <_vfprintf_r+0xd8a>
10010f78:	0499      	lsls	r1, r3, #18
10010f7a:	d407      	bmi.n	10010f8c <_vfprintf_r+0x60>
10010f7c:	9907      	ldr	r1, [sp, #28]
10010f7e:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10010f80:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10010f84:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
10010f88:	818b      	strh	r3, [r1, #12]
10010f8a:	664a      	str	r2, [r1, #100]	@ 0x64
10010f8c:	071a      	lsls	r2, r3, #28
10010f8e:	f140 80cc 	bpl.w	1001112a <_vfprintf_r+0x1fe>
10010f92:	9a07      	ldr	r2, [sp, #28]
10010f94:	6912      	ldr	r2, [r2, #16]
10010f96:	2a00      	cmp	r2, #0
10010f98:	f000 80c7 	beq.w	1001112a <_vfprintf_r+0x1fe>
10010f9c:	f003 021a 	and.w	r2, r3, #26
10010fa0:	2a0a      	cmp	r2, #10
10010fa2:	f000 80d1 	beq.w	10011148 <_vfprintf_r+0x21c>
10010fa6:	2300      	movs	r3, #0
10010fa8:	e9cd 3333 	strd	r3, r3, [sp, #204]	@ 0xcc
10010fac:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10010fb0:	e9cd 331d 	strd	r3, r3, [sp, #116]	@ 0x74
10010fb4:	9313      	str	r3, [sp, #76]	@ 0x4c
10010fb6:	931a      	str	r3, [sp, #104]	@ 0x68
10010fb8:	930a      	str	r3, [sp, #40]	@ 0x28
10010fba:	2400      	movs	r4, #0
10010fbc:	2300      	movs	r3, #0
10010fbe:	e9cd 3416 	strd	r3, r4, [sp, #88]	@ 0x58
10010fc2:	aa35      	add	r2, sp, #212	@ 0xd4
10010fc4:	9232      	str	r2, [sp, #200]	@ 0xc8
10010fc6:	4690      	mov	r8, r2
10010fc8:	f8cd b020 	str.w	fp, [sp, #32]
10010fcc:	464d      	mov	r5, r9
10010fce:	9f08      	ldr	r7, [sp, #32]
10010fd0:	462e      	mov	r6, r5
10010fd2:	4b8d      	ldr	r3, [pc, #564]	@ (10011208 <_vfprintf_r+0x2dc>)
10010fd4:	f8d3 40e4 	ldr.w	r4, [r3, #228]	@ 0xe4
10010fd8:	f002 ff4e 	bl	10013e78 <__locale_mb_cur_max>
10010fdc:	4603      	mov	r3, r0
10010fde:	a82e      	add	r0, sp, #184	@ 0xb8
10010fe0:	9000      	str	r0, [sp, #0]
10010fe2:	4632      	mov	r2, r6
10010fe4:	a92a      	add	r1, sp, #168	@ 0xa8
10010fe6:	4638      	mov	r0, r7
10010fe8:	47a0      	blx	r4
10010fea:	2800      	cmp	r0, #0
10010fec:	f000 80cb 	beq.w	10011186 <_vfprintf_r+0x25a>
10010ff0:	f2c0 80c1 	blt.w	10011176 <_vfprintf_r+0x24a>
10010ff4:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10010ff6:	2a25      	cmp	r2, #37	@ 0x25
10010ff8:	4603      	mov	r3, r0
10010ffa:	d001      	beq.n	10011000 <_vfprintf_r+0xd4>
10010ffc:	441e      	add	r6, r3
10010ffe:	e7e8      	b.n	10010fd2 <_vfprintf_r+0xa6>
10011000:	1b77      	subs	r7, r6, r5
10011002:	4604      	mov	r4, r0
10011004:	f040 80c2 	bne.w	1001118c <_vfprintf_r+0x260>
10011008:	2300      	movs	r3, #0
1001100a:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
1001100e:	4699      	mov	r9, r3
10011010:	930b      	str	r3, [sp, #44]	@ 0x2c
10011012:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10011016:	7873      	ldrb	r3, [r6, #1]
10011018:	9209      	str	r2, [sp, #36]	@ 0x24
1001101a:	1c74      	adds	r4, r6, #1
1001101c:	3401      	adds	r4, #1
1001101e:	f1a3 0220 	sub.w	r2, r3, #32
10011022:	2a5a      	cmp	r2, #90	@ 0x5a
10011024:	f200 80f2 	bhi.w	1001120c <_vfprintf_r+0x2e0>
10011028:	e8df f012 	tbh	[pc, r2, lsl #1]
1001102c:	00f002c7 	.word	0x00f002c7
10011030:	02c300f0 	.word	0x02c300f0
10011034:	00f000f0 	.word	0x00f000f0
10011038:	006a00f0 	.word	0x006a00f0
1001103c:	00f000f0 	.word	0x00f000f0
10011040:	02a0027d 	.word	0x02a0027d
10011044:	028800f0 	.word	0x028800f0
10011048:	00f002a9 	.word	0x00f002a9
1001104c:	005b02a5 	.word	0x005b02a5
10011050:	005b005b 	.word	0x005b005b
10011054:	005b005b 	.word	0x005b005b
10011058:	005b005b 	.word	0x005b005b
1001105c:	005b005b 	.word	0x005b005b
10011060:	00f000f0 	.word	0x00f000f0
10011064:	00f000f0 	.word	0x00f000f0
10011068:	00f000f0 	.word	0x00f000f0
1001106c:	017100f0 	.word	0x017100f0
10011070:	020800f0 	.word	0x020800f0
10011074:	01710322 	.word	0x01710322
10011078:	01710171 	.word	0x01710171
1001107c:	00f000f0 	.word	0x00f000f0
10011080:	00f000f0 	.word	0x00f000f0
10011084:	00f0031e 	.word	0x00f0031e
10011088:	02da00f0 	.word	0x02da00f0
1001108c:	00f000f0 	.word	0x00f000f0
10011090:	022600f0 	.word	0x022600f0
10011094:	030b00f0 	.word	0x030b00f0
10011098:	00f000f0 	.word	0x00f000f0
1001109c:	00f00717 	.word	0x00f00717
100110a0:	00f000f0 	.word	0x00f000f0
100110a4:	00f000f0 	.word	0x00f000f0
100110a8:	00f000f0 	.word	0x00f000f0
100110ac:	017100f0 	.word	0x017100f0
100110b0:	020800f0 	.word	0x020800f0
100110b4:	01710258 	.word	0x01710258
100110b8:	01710171 	.word	0x01710171
100110bc:	02580296 	.word	0x02580296
100110c0:	00f00204 	.word	0x00f00204
100110c4:	00f0028c 	.word	0x00f0028c
100110c8:	073f034d 	.word	0x073f034d
100110cc:	0204033b 	.word	0x0204033b
100110d0:	022600f0 	.word	0x022600f0
100110d4:	073a007d 	.word	0x073a007d
100110d8:	00f000f0 	.word	0x00f000f0
100110dc:	00f00743 	.word	0x00f00743
100110e0:	007d      	.short	0x007d
100110e2:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100110e6:	2100      	movs	r1, #0
100110e8:	f814 3b01 	ldrb.w	r3, [r4], #1
100110ec:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100110f0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100110f4:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100110f8:	2a09      	cmp	r2, #9
100110fa:	d9f5      	bls.n	100110e8 <_vfprintf_r+0x1bc>
100110fc:	910b      	str	r1, [sp, #44]	@ 0x2c
100110fe:	e78e      	b.n	1001101e <_vfprintf_r+0xf2>
10011100:	9f08      	ldr	r7, [sp, #32]
10011102:	4638      	mov	r0, r7
10011104:	f002 febe 	bl	10013e84 <_localeconv_r>
10011108:	6843      	ldr	r3, [r0, #4]
1001110a:	931d      	str	r3, [sp, #116]	@ 0x74
1001110c:	4618      	mov	r0, r3
1001110e:	f7ff fb37 	bl	10010780 <strlen>
10011112:	901e      	str	r0, [sp, #120]	@ 0x78
10011114:	4606      	mov	r6, r0
10011116:	4638      	mov	r0, r7
10011118:	f002 feb4 	bl	10013e84 <_localeconv_r>
1001111c:	6883      	ldr	r3, [r0, #8]
1001111e:	931b      	str	r3, [sp, #108]	@ 0x6c
10011120:	2e00      	cmp	r6, #0
10011122:	f040 8621 	bne.w	10011d68 <_vfprintf_r+0xe3c>
10011126:	7823      	ldrb	r3, [r4, #0]
10011128:	e778      	b.n	1001101c <_vfprintf_r+0xf0>
1001112a:	9d07      	ldr	r5, [sp, #28]
1001112c:	4658      	mov	r0, fp
1001112e:	4629      	mov	r1, r5
10011130:	f002 ff0c 	bl	10013f4c <__swsetup_r>
10011134:	2800      	cmp	r0, #0
10011136:	f041 83a6 	bne.w	10012886 <_vfprintf_r+0x195a>
1001113a:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
1001113e:	f003 021a 	and.w	r2, r3, #26
10011142:	2a0a      	cmp	r2, #10
10011144:	f47f af2f 	bne.w	10010fa6 <_vfprintf_r+0x7a>
10011148:	9907      	ldr	r1, [sp, #28]
1001114a:	f9b1 200e 	ldrsh.w	r2, [r1, #14]
1001114e:	2a00      	cmp	r2, #0
10011150:	f6ff af29 	blt.w	10010fa6 <_vfprintf_r+0x7a>
10011154:	6e4a      	ldr	r2, [r1, #100]	@ 0x64
10011156:	07d5      	lsls	r5, r2, #31
10011158:	d402      	bmi.n	10011160 <_vfprintf_r+0x234>
1001115a:	0598      	lsls	r0, r3, #22
1001115c:	f141 81bf 	bpl.w	100124de <_vfprintf_r+0x15b2>
10011160:	9907      	ldr	r1, [sp, #28]
10011162:	4623      	mov	r3, r4
10011164:	464a      	mov	r2, r9
10011166:	4658      	mov	r0, fp
10011168:	f001 fd04 	bl	10012b74 <__sbprintf>
1001116c:	900a      	str	r0, [sp, #40]	@ 0x28
1001116e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10011170:	b05f      	add	sp, #380	@ 0x17c
10011172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011176:	2208      	movs	r2, #8
10011178:	2100      	movs	r1, #0
1001117a:	a82e      	add	r0, sp, #184	@ 0xb8
1001117c:	f7ff f8ce 	bl	1001031c <memset>
10011180:	2301      	movs	r3, #1
10011182:	441e      	add	r6, r3
10011184:	e725      	b.n	10010fd2 <_vfprintf_r+0xa6>
10011186:	1b77      	subs	r7, r6, r5
10011188:	4604      	mov	r4, r0
1001118a:	d011      	beq.n	100111b0 <_vfprintf_r+0x284>
1001118c:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
1001118e:	443b      	add	r3, r7
10011190:	9334      	str	r3, [sp, #208]	@ 0xd0
10011192:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011194:	3301      	adds	r3, #1
10011196:	2b07      	cmp	r3, #7
10011198:	e9c8 5700 	strd	r5, r7, [r8]
1001119c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001119e:	dc13      	bgt.n	100111c8 <_vfprintf_r+0x29c>
100111a0:	f108 0808 	add.w	r8, r8, #8
100111a4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100111a6:	443b      	add	r3, r7
100111a8:	930a      	str	r3, [sp, #40]	@ 0x28
100111aa:	2c00      	cmp	r4, #0
100111ac:	f47f af2c 	bne.w	10011008 <_vfprintf_r+0xdc>
100111b0:	9b34      	ldr	r3, [sp, #208]	@ 0xd0
100111b2:	f8dd b020 	ldr.w	fp, [sp, #32]
100111b6:	2b00      	cmp	r3, #0
100111b8:	f041 80d6 	bne.w	10012368 <_vfprintf_r+0x143c>
100111bc:	9b07      	ldr	r3, [sp, #28]
100111be:	2200      	movs	r2, #0
100111c0:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100111c4:	9233      	str	r2, [sp, #204]	@ 0xcc
100111c6:	e012      	b.n	100111ee <_vfprintf_r+0x2c2>
100111c8:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100111cc:	aa32      	add	r2, sp, #200	@ 0xc8
100111ce:	f001 fd4d 	bl	10012c6c <__sprint_r>
100111d2:	b948      	cbnz	r0, 100111e8 <_vfprintf_r+0x2bc>
100111d4:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100111d8:	e7e4      	b.n	100111a4 <_vfprintf_r+0x278>
100111da:	46bb      	mov	fp, r7
100111dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100111de:	b11b      	cbz	r3, 100111e8 <_vfprintf_r+0x2bc>
100111e0:	990c      	ldr	r1, [sp, #48]	@ 0x30
100111e2:	4658      	mov	r0, fp
100111e4:	f7ff fb94 	bl	10010910 <_free_r>
100111e8:	9b07      	ldr	r3, [sp, #28]
100111ea:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
100111ee:	9a07      	ldr	r2, [sp, #28]
100111f0:	6e52      	ldr	r2, [r2, #100]	@ 0x64
100111f2:	07d4      	lsls	r4, r2, #31
100111f4:	f140 8114 	bpl.w	10011420 <_vfprintf_r+0x4f4>
100111f8:	0659      	lsls	r1, r3, #25
100111fa:	f101 8350 	bmi.w	1001289e <_vfprintf_r+0x1972>
100111fe:	980a      	ldr	r0, [sp, #40]	@ 0x28
10011200:	b05f      	add	sp, #380	@ 0x17c
10011202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10011206:	bf00      	nop
10011208:	2000054c 	.word	0x2000054c
1001120c:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011210:	2b00      	cmp	r3, #0
10011212:	d0cd      	beq.n	100111b0 <_vfprintf_r+0x284>
10011214:	2200      	movs	r2, #0
10011216:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001121a:	2301      	movs	r3, #1
1001121c:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
10011220:	9306      	str	r3, [sp, #24]
10011222:	920c      	str	r2, [sp, #48]	@ 0x30
10011224:	469b      	mov	fp, r3
10011226:	9209      	str	r2, [sp, #36]	@ 0x24
10011228:	9214      	str	r2, [sp, #80]	@ 0x50
1001122a:	9210      	str	r2, [sp, #64]	@ 0x40
1001122c:	9212      	str	r2, [sp, #72]	@ 0x48
1001122e:	ad45      	add	r5, sp, #276	@ 0x114
10011230:	f019 0302 	ands.w	r3, r9, #2
10011234:	d002      	beq.n	1001123c <_vfprintf_r+0x310>
10011236:	9906      	ldr	r1, [sp, #24]
10011238:	3102      	adds	r1, #2
1001123a:	9106      	str	r1, [sp, #24]
1001123c:	f019 0784 	ands.w	r7, r9, #132	@ 0x84
10011240:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011242:	d105      	bne.n	10011250 <_vfprintf_r+0x324>
10011244:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10011246:	9806      	ldr	r0, [sp, #24]
10011248:	1a0e      	subs	r6, r1, r0
1001124a:	2e00      	cmp	r6, #0
1001124c:	f300 80a7 	bgt.w	1001139e <_vfprintf_r+0x472>
10011250:	b182      	cbz	r2, 10011274 <_vfprintf_r+0x348>
10011252:	2201      	movs	r2, #1
10011254:	f8c8 2004 	str.w	r2, [r8, #4]
10011258:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
1001125a:	3201      	adds	r2, #1
1001125c:	3401      	adds	r4, #1
1001125e:	f10d 019f 	add.w	r1, sp, #159	@ 0x9f
10011262:	2a07      	cmp	r2, #7
10011264:	9434      	str	r4, [sp, #208]	@ 0xd0
10011266:	9233      	str	r2, [sp, #204]	@ 0xcc
10011268:	f8c8 1000 	str.w	r1, [r8]
1001126c:	f300 83e1 	bgt.w	10011a32 <_vfprintf_r+0xb06>
10011270:	f108 0808 	add.w	r8, r8, #8
10011274:	b183      	cbz	r3, 10011298 <_vfprintf_r+0x36c>
10011276:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011278:	aa28      	add	r2, sp, #160	@ 0xa0
1001127a:	3301      	adds	r3, #1
1001127c:	3402      	adds	r4, #2
1001127e:	f8c8 2000 	str.w	r2, [r8]
10011282:	2b07      	cmp	r3, #7
10011284:	f04f 0202 	mov.w	r2, #2
10011288:	9434      	str	r4, [sp, #208]	@ 0xd0
1001128a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001128c:	f8c8 2004 	str.w	r2, [r8, #4]
10011290:	f300 83dd 	bgt.w	10011a4e <_vfprintf_r+0xb22>
10011294:	f108 0808 	add.w	r8, r8, #8
10011298:	2f80      	cmp	r7, #128	@ 0x80
1001129a:	f000 82be 	beq.w	1001181a <_vfprintf_r+0x8ee>
1001129e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100112a0:	eba3 060b 	sub.w	r6, r3, fp
100112a4:	2e00      	cmp	r6, #0
100112a6:	f300 82fd 	bgt.w	100118a4 <_vfprintf_r+0x978>
100112aa:	f419 7f80 	tst.w	r9, #256	@ 0x100
100112ae:	f040 8219 	bne.w	100116e4 <_vfprintf_r+0x7b8>
100112b2:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100112b4:	f8c8 5000 	str.w	r5, [r8]
100112b8:	3301      	adds	r3, #1
100112ba:	445c      	add	r4, fp
100112bc:	2b07      	cmp	r3, #7
100112be:	f8c8 b004 	str.w	fp, [r8, #4]
100112c2:	9434      	str	r4, [sp, #208]	@ 0xd0
100112c4:	9333      	str	r3, [sp, #204]	@ 0xcc
100112c6:	f300 834d 	bgt.w	10011964 <_vfprintf_r+0xa38>
100112ca:	f108 0808 	add.w	r8, r8, #8
100112ce:	f019 0f04 	tst.w	r9, #4
100112d2:	d005      	beq.n	100112e0 <_vfprintf_r+0x3b4>
100112d4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100112d6:	9a06      	ldr	r2, [sp, #24]
100112d8:	1a9d      	subs	r5, r3, r2
100112da:	2d00      	cmp	r5, #0
100112dc:	f300 83c3 	bgt.w	10011a66 <_vfprintf_r+0xb3a>
100112e0:	e9dd 320a 	ldrd	r3, r2, [sp, #40]	@ 0x28
100112e4:	9906      	ldr	r1, [sp, #24]
100112e6:	428a      	cmp	r2, r1
100112e8:	bfac      	ite	ge
100112ea:	189b      	addge	r3, r3, r2
100112ec:	185b      	addlt	r3, r3, r1
100112ee:	930a      	str	r3, [sp, #40]	@ 0x28
100112f0:	2c00      	cmp	r4, #0
100112f2:	f040 830f 	bne.w	10011914 <_vfprintf_r+0x9e8>
100112f6:	2300      	movs	r3, #0
100112f8:	9333      	str	r3, [sp, #204]	@ 0xcc
100112fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100112fc:	b11b      	cbz	r3, 10011306 <_vfprintf_r+0x3da>
100112fe:	990c      	ldr	r1, [sp, #48]	@ 0x30
10011300:	9808      	ldr	r0, [sp, #32]
10011302:	f7ff fb05 	bl	10010910 <_free_r>
10011306:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001130a:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
1001130c:	e65f      	b.n	10010fce <_vfprintf_r+0xa2>
1001130e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011312:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011314:	3307      	adds	r3, #7
10011316:	f023 0307 	bic.w	r3, r3, #7
1001131a:	e8f3 6702 	ldrd	r6, r7, [r3], #8
1001131e:	930d      	str	r3, [sp, #52]	@ 0x34
10011320:	f027 4300 	bic.w	r3, r7, #2147483648	@ 0x80000000
10011324:	9323      	str	r3, [sp, #140]	@ 0x8c
10011326:	9622      	str	r6, [sp, #136]	@ 0x88
10011328:	e9dd ab22 	ldrd	sl, fp, [sp, #136]	@ 0x88
1001132c:	4ba8      	ldr	r3, [pc, #672]	@ (100115d0 <_vfprintf_r+0x6a4>)
1001132e:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
10011332:	4650      	mov	r0, sl
10011334:	4659      	mov	r1, fp
10011336:	e9cd 6716 	strd	r6, r7, [sp, #88]	@ 0x58
1001133a:	f005 fc69 	bl	10016c10 <__aeabi_dcmpun>
1001133e:	2800      	cmp	r0, #0
10011340:	f040 8530 	bne.w	10011da4 <_vfprintf_r+0xe78>
10011344:	4ba2      	ldr	r3, [pc, #648]	@ (100115d0 <_vfprintf_r+0x6a4>)
10011346:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
1001134a:	4650      	mov	r0, sl
1001134c:	4659      	mov	r1, fp
1001134e:	f005 fc41 	bl	10016bd4 <__aeabi_dcmple>
10011352:	2800      	cmp	r0, #0
10011354:	f040 8526 	bne.w	10011da4 <_vfprintf_r+0xe78>
10011358:	2200      	movs	r2, #0
1001135a:	2300      	movs	r3, #0
1001135c:	4630      	mov	r0, r6
1001135e:	4639      	mov	r1, r7
10011360:	f005 fc2e 	bl	10016bc0 <__aeabi_dcmplt>
10011364:	2800      	cmp	r0, #0
10011366:	f041 810f 	bne.w	10012588 <_vfprintf_r+0x165c>
1001136a:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001136e:	4d99      	ldr	r5, [pc, #612]	@ (100115d4 <_vfprintf_r+0x6a8>)
10011370:	4b99      	ldr	r3, [pc, #612]	@ (100115d8 <_vfprintf_r+0x6ac>)
10011372:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10011376:	990e      	ldr	r1, [sp, #56]	@ 0x38
10011378:	2947      	cmp	r1, #71	@ 0x47
1001137a:	bfc8      	it	gt
1001137c:	461d      	movgt	r5, r3
1001137e:	2300      	movs	r3, #0
10011380:	2103      	movs	r1, #3
10011382:	930c      	str	r3, [sp, #48]	@ 0x30
10011384:	9106      	str	r1, [sp, #24]
10011386:	468b      	mov	fp, r1
10011388:	9309      	str	r3, [sp, #36]	@ 0x24
1001138a:	9314      	str	r3, [sp, #80]	@ 0x50
1001138c:	9310      	str	r3, [sp, #64]	@ 0x40
1001138e:	9312      	str	r3, [sp, #72]	@ 0x48
10011390:	2a00      	cmp	r2, #0
10011392:	f43f af4d 	beq.w	10011230 <_vfprintf_r+0x304>
10011396:	9b06      	ldr	r3, [sp, #24]
10011398:	3301      	adds	r3, #1
1001139a:	9306      	str	r3, [sp, #24]
1001139c:	e748      	b.n	10011230 <_vfprintf_r+0x304>
1001139e:	2e10      	cmp	r6, #16
100113a0:	9a33      	ldr	r2, [sp, #204]	@ 0xcc
100113a2:	f341 823d 	ble.w	10012820 <_vfprintf_r+0x18f4>
100113a6:	488d      	ldr	r0, [pc, #564]	@ (100115dc <_vfprintf_r+0x6b0>)
100113a8:	9521      	str	r5, [sp, #132]	@ 0x84
100113aa:	e9cd 371f 	strd	r3, r7, [sp, #124]	@ 0x7c
100113ae:	4621      	mov	r1, r4
100113b0:	9d07      	ldr	r5, [sp, #28]
100113b2:	9c08      	ldr	r4, [sp, #32]
100113b4:	9015      	str	r0, [sp, #84]	@ 0x54
100113b6:	f04f 0a10 	mov.w	sl, #16
100113ba:	4607      	mov	r7, r0
100113bc:	e004      	b.n	100113c8 <_vfprintf_r+0x49c>
100113be:	3e10      	subs	r6, #16
100113c0:	2e10      	cmp	r6, #16
100113c2:	f108 0808 	add.w	r8, r8, #8
100113c6:	dd16      	ble.n	100113f6 <_vfprintf_r+0x4ca>
100113c8:	3201      	adds	r2, #1
100113ca:	3110      	adds	r1, #16
100113cc:	2a07      	cmp	r2, #7
100113ce:	e9c8 7a00 	strd	r7, sl, [r8]
100113d2:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
100113d6:	ddf2      	ble.n	100113be <_vfprintf_r+0x492>
100113d8:	aa32      	add	r2, sp, #200	@ 0xc8
100113da:	4629      	mov	r1, r5
100113dc:	4620      	mov	r0, r4
100113de:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100113e2:	f001 fc43 	bl	10012c6c <__sprint_r>
100113e6:	2800      	cmp	r0, #0
100113e8:	f040 8636 	bne.w	10012058 <_vfprintf_r+0x112c>
100113ec:	3e10      	subs	r6, #16
100113ee:	2e10      	cmp	r6, #16
100113f0:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
100113f4:	dce8      	bgt.n	100113c8 <_vfprintf_r+0x49c>
100113f6:	e9dd 371f 	ldrd	r3, r7, [sp, #124]	@ 0x7c
100113fa:	9d21      	ldr	r5, [sp, #132]	@ 0x84
100113fc:	460c      	mov	r4, r1
100113fe:	3201      	adds	r2, #1
10011400:	9915      	ldr	r1, [sp, #84]	@ 0x54
10011402:	f8c8 1000 	str.w	r1, [r8]
10011406:	4434      	add	r4, r6
10011408:	2a07      	cmp	r2, #7
1001140a:	e9cd 2433 	strd	r2, r4, [sp, #204]	@ 0xcc
1001140e:	f8c8 6004 	str.w	r6, [r8, #4]
10011412:	f300 8610 	bgt.w	10012036 <_vfprintf_r+0x110a>
10011416:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001141a:	f108 0808 	add.w	r8, r8, #8
1001141e:	e717      	b.n	10011250 <_vfprintf_r+0x324>
10011420:	0598      	lsls	r0, r3, #22
10011422:	f53f aee9 	bmi.w	100111f8 <_vfprintf_r+0x2cc>
10011426:	9c07      	ldr	r4, [sp, #28]
10011428:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001142a:	f7ff f80b 	bl	10010444 <__retarget_lock_release_recursive>
1001142e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10011432:	e6e1      	b.n	100111f8 <_vfprintf_r+0x2cc>
10011434:	7823      	ldrb	r3, [r4, #0]
10011436:	f049 0920 	orr.w	r9, r9, #32
1001143a:	e5ef      	b.n	1001101c <_vfprintf_r+0xf0>
1001143c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
1001143e:	2b43      	cmp	r3, #67	@ 0x43
10011440:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011444:	f102 0404 	add.w	r4, r2, #4
10011448:	f000 8562 	beq.w	10011f10 <_vfprintf_r+0xfe4>
1001144c:	f019 0f10 	tst.w	r9, #16
10011450:	f040 855e 	bne.w	10011f10 <_vfprintf_r+0xfe4>
10011454:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011456:	681b      	ldr	r3, [r3, #0]
10011458:	f88d 3114 	strb.w	r3, [sp, #276]	@ 0x114
1001145c:	2301      	movs	r3, #1
1001145e:	9306      	str	r3, [sp, #24]
10011460:	469b      	mov	fp, r3
10011462:	ad45      	add	r5, sp, #276	@ 0x114
10011464:	2200      	movs	r2, #0
10011466:	940d      	str	r4, [sp, #52]	@ 0x34
10011468:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001146c:	920c      	str	r2, [sp, #48]	@ 0x30
1001146e:	9209      	str	r2, [sp, #36]	@ 0x24
10011470:	9214      	str	r2, [sp, #80]	@ 0x50
10011472:	9210      	str	r2, [sp, #64]	@ 0x40
10011474:	9212      	str	r2, [sp, #72]	@ 0x48
10011476:	e6db      	b.n	10011230 <_vfprintf_r+0x304>
10011478:	9e0d      	ldr	r6, [sp, #52]	@ 0x34
1001147a:	f856 5b04 	ldr.w	r5, [r6], #4
1001147e:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011482:	2300      	movs	r3, #0
10011484:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10011488:	2d00      	cmp	r5, #0
1001148a:	f000 8530 	beq.w	10011eee <_vfprintf_r+0xfc2>
1001148e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011490:	2b53      	cmp	r3, #83	@ 0x53
10011492:	f000 8601 	beq.w	10012098 <_vfprintf_r+0x116c>
10011496:	f019 0310 	ands.w	r3, r9, #16
1001149a:	9312      	str	r3, [sp, #72]	@ 0x48
1001149c:	f040 85fc 	bne.w	10012098 <_vfprintf_r+0x116c>
100114a0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100114a2:	1c5a      	adds	r2, r3, #1
100114a4:	f000 876a 	beq.w	1001237c <_vfprintf_r+0x1450>
100114a8:	9912      	ldr	r1, [sp, #72]	@ 0x48
100114aa:	461a      	mov	r2, r3
100114ac:	4628      	mov	r0, r5
100114ae:	f003 feb7 	bl	10015220 <memchr>
100114b2:	900c      	str	r0, [sp, #48]	@ 0x30
100114b4:	2800      	cmp	r0, #0
100114b6:	f001 82c5 	beq.w	10012a44 <_vfprintf_r+0x1b18>
100114ba:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100114bc:	960d      	str	r6, [sp, #52]	@ 0x34
100114be:	eba3 0b05 	sub.w	fp, r3, r5
100114c2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
100114c4:	9309      	str	r3, [sp, #36]	@ 0x24
100114c6:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
100114ca:	9314      	str	r3, [sp, #80]	@ 0x50
100114cc:	9310      	str	r3, [sp, #64]	@ 0x40
100114ce:	930c      	str	r3, [sp, #48]	@ 0x30
100114d0:	2373      	movs	r3, #115	@ 0x73
100114d2:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100114d6:	9106      	str	r1, [sp, #24]
100114d8:	930e      	str	r3, [sp, #56]	@ 0x38
100114da:	e759      	b.n	10011390 <_vfprintf_r+0x464>
100114dc:	f019 0f20 	tst.w	r9, #32
100114e0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100114e4:	f000 80cc 	beq.w	10011680 <_vfprintf_r+0x754>
100114e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100114ea:	3307      	adds	r3, #7
100114ec:	f023 0307 	bic.w	r3, r3, #7
100114f0:	461a      	mov	r2, r3
100114f2:	6859      	ldr	r1, [r3, #4]
100114f4:	f852 3b08 	ldr.w	r3, [r2], #8
100114f8:	920d      	str	r2, [sp, #52]	@ 0x34
100114fa:	460a      	mov	r2, r1
100114fc:	2900      	cmp	r1, #0
100114fe:	f2c0 8425 	blt.w	10011d4c <_vfprintf_r+0xe20>
10011502:	9909      	ldr	r1, [sp, #36]	@ 0x24
10011504:	3101      	adds	r1, #1
10011506:	f000 8285 	beq.w	10011a14 <_vfprintf_r+0xae8>
1001150a:	ea53 0102 	orrs.w	r1, r3, r2
1001150e:	f029 0480 	bic.w	r4, r9, #128	@ 0x80
10011512:	f040 8280 	bne.w	10011a16 <_vfprintf_r+0xaea>
10011516:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10011518:	2a00      	cmp	r2, #0
1001151a:	f040 8281 	bne.w	10011a20 <_vfprintf_r+0xaf4>
1001151e:	46a1      	mov	r9, r4
10011520:	4693      	mov	fp, r2
10011522:	ad5e      	add	r5, sp, #376	@ 0x178
10011524:	e150      	b.n	100117c8 <_vfprintf_r+0x89c>
10011526:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011528:	f853 2b04 	ldr.w	r2, [r3], #4
1001152c:	920b      	str	r2, [sp, #44]	@ 0x2c
1001152e:	2a00      	cmp	r2, #0
10011530:	f280 83ce 	bge.w	10011cd0 <_vfprintf_r+0xda4>
10011534:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10011536:	930d      	str	r3, [sp, #52]	@ 0x34
10011538:	4252      	negs	r2, r2
1001153a:	920b      	str	r2, [sp, #44]	@ 0x2c
1001153c:	7823      	ldrb	r3, [r4, #0]
1001153e:	f049 0904 	orr.w	r9, r9, #4
10011542:	e56b      	b.n	1001101c <_vfprintf_r+0xf0>
10011544:	7823      	ldrb	r3, [r4, #0]
10011546:	2b6c      	cmp	r3, #108	@ 0x6c
10011548:	bf03      	ittte	eq
1001154a:	7863      	ldrbeq	r3, [r4, #1]
1001154c:	f049 0920 	orreq.w	r9, r9, #32
10011550:	3401      	addeq	r4, #1
10011552:	f049 0910 	orrne.w	r9, r9, #16
10011556:	e561      	b.n	1001101c <_vfprintf_r+0xf0>
10011558:	7823      	ldrb	r3, [r4, #0]
1001155a:	2b68      	cmp	r3, #104	@ 0x68
1001155c:	bf03      	ittte	eq
1001155e:	7863      	ldrbeq	r3, [r4, #1]
10011560:	f449 7900 	orreq.w	r9, r9, #512	@ 0x200
10011564:	3401      	addeq	r4, #1
10011566:	f049 0940 	orrne.w	r9, r9, #64	@ 0x40
1001156a:	e557      	b.n	1001101c <_vfprintf_r+0xf0>
1001156c:	232b      	movs	r3, #43	@ 0x2b
1001156e:	f88d 309f 	strb.w	r3, [sp, #159]	@ 0x9f
10011572:	7823      	ldrb	r3, [r4, #0]
10011574:	e552      	b.n	1001101c <_vfprintf_r+0xf0>
10011576:	7823      	ldrb	r3, [r4, #0]
10011578:	f049 0980 	orr.w	r9, r9, #128	@ 0x80
1001157c:	e54e      	b.n	1001101c <_vfprintf_r+0xf0>
1001157e:	4621      	mov	r1, r4
10011580:	f811 3b01 	ldrb.w	r3, [r1], #1
10011584:	2b2a      	cmp	r3, #42	@ 0x2a
10011586:	f001 82db 	beq.w	10012b40 <_vfprintf_r+0x1c14>
1001158a:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
1001158e:	2a09      	cmp	r2, #9
10011590:	460c      	mov	r4, r1
10011592:	bf98      	it	ls
10011594:	2100      	movls	r1, #0
10011596:	f201 8172 	bhi.w	1001287e <_vfprintf_r+0x1952>
1001159a:	f814 3b01 	ldrb.w	r3, [r4], #1
1001159e:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100115a2:	eb02 0141 	add.w	r1, r2, r1, lsl #1
100115a6:	f1a3 0230 	sub.w	r2, r3, #48	@ 0x30
100115aa:	2a09      	cmp	r2, #9
100115ac:	d9f5      	bls.n	1001159a <_vfprintf_r+0x66e>
100115ae:	9109      	str	r1, [sp, #36]	@ 0x24
100115b0:	e535      	b.n	1001101e <_vfprintf_r+0xf2>
100115b2:	7823      	ldrb	r3, [r4, #0]
100115b4:	f049 0901 	orr.w	r9, r9, #1
100115b8:	e530      	b.n	1001101c <_vfprintf_r+0xf0>
100115ba:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100115be:	7823      	ldrb	r3, [r4, #0]
100115c0:	2a00      	cmp	r2, #0
100115c2:	f47f ad2b 	bne.w	1001101c <_vfprintf_r+0xf0>
100115c6:	2220      	movs	r2, #32
100115c8:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
100115cc:	e526      	b.n	1001101c <_vfprintf_r+0xf0>
100115ce:	bf00      	nop
100115d0:	7fefffff 	.word	0x7fefffff
100115d4:	10017078 	.word	0x10017078
100115d8:	1001707c 	.word	0x1001707c
100115dc:	100170cc 	.word	0x100170cc
100115e0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
100115e4:	f049 0910 	orr.w	r9, r9, #16
100115e8:	f019 0220 	ands.w	r2, r9, #32
100115ec:	f000 8354 	beq.w	10011c98 <_vfprintf_r+0xd6c>
100115f0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100115f2:	3307      	adds	r3, #7
100115f4:	f023 0307 	bic.w	r3, r3, #7
100115f8:	4619      	mov	r1, r3
100115fa:	685a      	ldr	r2, [r3, #4]
100115fc:	f851 3b08 	ldr.w	r3, [r1], #8
10011600:	910d      	str	r1, [sp, #52]	@ 0x34
10011602:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10011606:	2100      	movs	r1, #0
10011608:	2000      	movs	r0, #0
1001160a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
1001160c:	f88d 009f 	strb.w	r0, [sp, #159]	@ 0x9f
10011610:	1c6f      	adds	r7, r5, #1
10011612:	f000 80c2 	beq.w	1001179a <_vfprintf_r+0x86e>
10011616:	ea53 0002 	orrs.w	r0, r3, r2
1001161a:	f024 0980 	bic.w	r9, r4, #128	@ 0x80
1001161e:	f040 80bb 	bne.w	10011798 <_vfprintf_r+0x86c>
10011622:	2d00      	cmp	r5, #0
10011624:	f040 8523 	bne.w	1001206e <_vfprintf_r+0x1142>
10011628:	2900      	cmp	r1, #0
1001162a:	f040 8496 	bne.w	10011f5a <_vfprintf_r+0x102e>
1001162e:	f014 0b01 	ands.w	fp, r4, #1
10011632:	f000 8351 	beq.w	10011cd8 <_vfprintf_r+0xdac>
10011636:	2330      	movs	r3, #48	@ 0x30
10011638:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
1001163c:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10011640:	e0c2      	b.n	100117c8 <_vfprintf_r+0x89c>
10011642:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011646:	f049 0410 	orr.w	r4, r9, #16
1001164a:	f014 0220 	ands.w	r2, r4, #32
1001164e:	f000 8315 	beq.w	10011c7c <_vfprintf_r+0xd50>
10011652:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011654:	3307      	adds	r3, #7
10011656:	f023 0307 	bic.w	r3, r3, #7
1001165a:	4619      	mov	r1, r3
1001165c:	685a      	ldr	r2, [r3, #4]
1001165e:	f851 3b08 	ldr.w	r3, [r1], #8
10011662:	910d      	str	r1, [sp, #52]	@ 0x34
10011664:	2101      	movs	r1, #1
10011666:	e7cf      	b.n	10011608 <_vfprintf_r+0x6dc>
10011668:	7823      	ldrb	r3, [r4, #0]
1001166a:	f049 0908 	orr.w	r9, r9, #8
1001166e:	e4d5      	b.n	1001101c <_vfprintf_r+0xf0>
10011670:	f049 0910 	orr.w	r9, r9, #16
10011674:	f019 0f20 	tst.w	r9, #32
10011678:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
1001167c:	f47f af34 	bne.w	100114e8 <_vfprintf_r+0x5bc>
10011680:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10011682:	f019 0f10 	tst.w	r9, #16
10011686:	f852 3b04 	ldr.w	r3, [r2], #4
1001168a:	920d      	str	r2, [sp, #52]	@ 0x34
1001168c:	f040 8359 	bne.w	10011d42 <_vfprintf_r+0xe16>
10011690:	f019 0f40 	tst.w	r9, #64	@ 0x40
10011694:	f000 8351 	beq.w	10011d3a <_vfprintf_r+0xe0e>
10011698:	f343 32c0 	sbfx	r2, r3, #15, #1
1001169c:	4611      	mov	r1, r2
1001169e:	b21b      	sxth	r3, r3
100116a0:	e72c      	b.n	100114fc <_vfprintf_r+0x5d0>
100116a2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
100116a4:	940f      	str	r4, [sp, #60]	@ 0x3c
100116a6:	f852 3b04 	ldr.w	r3, [r2], #4
100116aa:	920d      	str	r2, [sp, #52]	@ 0x34
100116ac:	f647 0230 	movw	r2, #30768	@ 0x7830
100116b0:	f8ad 20a0 	strh.w	r2, [sp, #160]	@ 0xa0
100116b4:	2078      	movs	r0, #120	@ 0x78
100116b6:	4ab1      	ldr	r2, [pc, #708]	@ (1001197c <_vfprintf_r+0xa50>)
100116b8:	921a      	str	r2, [sp, #104]	@ 0x68
100116ba:	f049 0402 	orr.w	r4, r9, #2
100116be:	2200      	movs	r2, #0
100116c0:	2102      	movs	r1, #2
100116c2:	900e      	str	r0, [sp, #56]	@ 0x38
100116c4:	e7a0      	b.n	10011608 <_vfprintf_r+0x6dc>
100116c6:	f019 0f20 	tst.w	r9, #32
100116ca:	940f      	str	r4, [sp, #60]	@ 0x3c
100116cc:	f000 8359 	beq.w	10011d82 <_vfprintf_r+0xe56>
100116d0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100116d2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100116d4:	681b      	ldr	r3, [r3, #0]
100116d6:	601a      	str	r2, [r3, #0]
100116d8:	17d2      	asrs	r2, r2, #31
100116da:	605a      	str	r2, [r3, #4]
100116dc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
100116de:	3304      	adds	r3, #4
100116e0:	930d      	str	r3, [sp, #52]	@ 0x34
100116e2:	e612      	b.n	1001130a <_vfprintf_r+0x3de>
100116e4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100116e6:	2b65      	cmp	r3, #101	@ 0x65
100116e8:	f340 814e 	ble.w	10011988 <_vfprintf_r+0xa5c>
100116ec:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100116f0:	2200      	movs	r2, #0
100116f2:	2300      	movs	r3, #0
100116f4:	f005 fa5a 	bl	10016bac <__aeabi_dcmpeq>
100116f8:	2800      	cmp	r0, #0
100116fa:	f000 81ee 	beq.w	10011ada <_vfprintf_r+0xbae>
100116fe:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011700:	4a9f      	ldr	r2, [pc, #636]	@ (10011980 <_vfprintf_r+0xa54>)
10011702:	f8c8 2000 	str.w	r2, [r8]
10011706:	3301      	adds	r3, #1
10011708:	3401      	adds	r4, #1
1001170a:	2201      	movs	r2, #1
1001170c:	2b07      	cmp	r3, #7
1001170e:	9434      	str	r4, [sp, #208]	@ 0xd0
10011710:	9333      	str	r3, [sp, #204]	@ 0xcc
10011712:	f8c8 2004 	str.w	r2, [r8, #4]
10011716:	f300 84af 	bgt.w	10012078 <_vfprintf_r+0x114c>
1001171a:	f108 0808 	add.w	r8, r8, #8
1001171e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10011720:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10011722:	4293      	cmp	r3, r2
10011724:	f280 82cf 	bge.w	10011cc6 <_vfprintf_r+0xd9a>
10011728:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001172a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
1001172c:	441c      	add	r4, r3
1001172e:	e9c8 2300 	strd	r2, r3, [r8]
10011732:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011734:	9434      	str	r4, [sp, #208]	@ 0xd0
10011736:	3301      	adds	r3, #1
10011738:	2b07      	cmp	r3, #7
1001173a:	9333      	str	r3, [sp, #204]	@ 0xcc
1001173c:	f300 83cb 	bgt.w	10011ed6 <_vfprintf_r+0xfaa>
10011740:	f108 0808 	add.w	r8, r8, #8
10011744:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011746:	1e5d      	subs	r5, r3, #1
10011748:	2d00      	cmp	r5, #0
1001174a:	f77f adc0 	ble.w	100112ce <_vfprintf_r+0x3a2>
1001174e:	2d10      	cmp	r5, #16
10011750:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011752:	f340 84fa 	ble.w	1001214a <_vfprintf_r+0x121e>
10011756:	4f8b      	ldr	r7, [pc, #556]	@ (10011984 <_vfprintf_r+0xa58>)
10011758:	9715      	str	r7, [sp, #84]	@ 0x54
1001175a:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
1001175e:	2610      	movs	r6, #16
10011760:	e005      	b.n	1001176e <_vfprintf_r+0x842>
10011762:	f108 0808 	add.w	r8, r8, #8
10011766:	3d10      	subs	r5, #16
10011768:	2d10      	cmp	r5, #16
1001176a:	f340 84f0 	ble.w	1001214e <_vfprintf_r+0x1222>
1001176e:	3301      	adds	r3, #1
10011770:	3410      	adds	r4, #16
10011772:	2b07      	cmp	r3, #7
10011774:	e9c8 7600 	strd	r7, r6, [r8]
10011778:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001177c:	ddf1      	ble.n	10011762 <_vfprintf_r+0x836>
1001177e:	aa32      	add	r2, sp, #200	@ 0xc8
10011780:	4651      	mov	r1, sl
10011782:	4658      	mov	r0, fp
10011784:	f001 fa72 	bl	10012c6c <__sprint_r>
10011788:	2800      	cmp	r0, #0
1001178a:	f47f ad27 	bne.w	100111dc <_vfprintf_r+0x2b0>
1001178e:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011792:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011796:	e7e6      	b.n	10011766 <_vfprintf_r+0x83a>
10011798:	464c      	mov	r4, r9
1001179a:	2901      	cmp	r1, #1
1001179c:	f000 813b 	beq.w	10011a16 <_vfprintf_r+0xaea>
100117a0:	2902      	cmp	r1, #2
100117a2:	ad5e      	add	r5, sp, #376	@ 0x178
100117a4:	d11e      	bne.n	100117e4 <_vfprintf_r+0x8b8>
100117a6:	981a      	ldr	r0, [sp, #104]	@ 0x68
100117a8:	f003 010f 	and.w	r1, r3, #15
100117ac:	091b      	lsrs	r3, r3, #4
100117ae:	5c41      	ldrb	r1, [r0, r1]
100117b0:	f805 1d01 	strb.w	r1, [r5, #-1]!
100117b4:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
100117b8:	0912      	lsrs	r2, r2, #4
100117ba:	ea53 0102 	orrs.w	r1, r3, r2
100117be:	d1f3      	bne.n	100117a8 <_vfprintf_r+0x87c>
100117c0:	ab5e      	add	r3, sp, #376	@ 0x178
100117c2:	46a1      	mov	r9, r4
100117c4:	eba3 0b05 	sub.w	fp, r3, r5
100117c8:	9909      	ldr	r1, [sp, #36]	@ 0x24
100117ca:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
100117ce:	4559      	cmp	r1, fp
100117d0:	f04f 0300 	mov.w	r3, #0
100117d4:	bfb8      	it	lt
100117d6:	4659      	movlt	r1, fp
100117d8:	930c      	str	r3, [sp, #48]	@ 0x30
100117da:	9106      	str	r1, [sp, #24]
100117dc:	9314      	str	r3, [sp, #80]	@ 0x50
100117de:	9310      	str	r3, [sp, #64]	@ 0x40
100117e0:	9312      	str	r3, [sp, #72]	@ 0x48
100117e2:	e5d5      	b.n	10011390 <_vfprintf_r+0x464>
100117e4:	f003 0107 	and.w	r1, r3, #7
100117e8:	08db      	lsrs	r3, r3, #3
100117ea:	ea43 7342 	orr.w	r3, r3, r2, lsl #29
100117ee:	08d2      	lsrs	r2, r2, #3
100117f0:	3130      	adds	r1, #48	@ 0x30
100117f2:	ea53 0602 	orrs.w	r6, r3, r2
100117f6:	4628      	mov	r0, r5
100117f8:	f805 1d01 	strb.w	r1, [r5, #-1]!
100117fc:	d1f2      	bne.n	100117e4 <_vfprintf_r+0x8b8>
100117fe:	07e6      	lsls	r6, r4, #31
10011800:	d5de      	bpl.n	100117c0 <_vfprintf_r+0x894>
10011802:	2930      	cmp	r1, #48	@ 0x30
10011804:	d0dc      	beq.n	100117c0 <_vfprintf_r+0x894>
10011806:	2330      	movs	r3, #48	@ 0x30
10011808:	3802      	subs	r0, #2
1001180a:	f805 3c01 	strb.w	r3, [r5, #-1]
1001180e:	ab5e      	add	r3, sp, #376	@ 0x178
10011810:	46a1      	mov	r9, r4
10011812:	eba3 0b00 	sub.w	fp, r3, r0
10011816:	4605      	mov	r5, r0
10011818:	e7d6      	b.n	100117c8 <_vfprintf_r+0x89c>
1001181a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001181c:	9a06      	ldr	r2, [sp, #24]
1001181e:	1a9e      	subs	r6, r3, r2
10011820:	2e00      	cmp	r6, #0
10011822:	f77f ad3c 	ble.w	1001129e <_vfprintf_r+0x372>
10011826:	2e10      	cmp	r6, #16
10011828:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
1001182a:	f341 80ad 	ble.w	10012988 <_vfprintf_r+0x1a5c>
1001182e:	4855      	ldr	r0, [pc, #340]	@ (10011984 <_vfprintf_r+0xa58>)
10011830:	f8dd a020 	ldr.w	sl, [sp, #32]
10011834:	9015      	str	r0, [sp, #84]	@ 0x54
10011836:	4621      	mov	r1, r4
10011838:	2710      	movs	r7, #16
1001183a:	461a      	mov	r2, r3
1001183c:	4604      	mov	r4, r0
1001183e:	e004      	b.n	1001184a <_vfprintf_r+0x91e>
10011840:	3e10      	subs	r6, #16
10011842:	2e10      	cmp	r6, #16
10011844:	f108 0808 	add.w	r8, r8, #8
10011848:	dd16      	ble.n	10011878 <_vfprintf_r+0x94c>
1001184a:	3201      	adds	r2, #1
1001184c:	3110      	adds	r1, #16
1001184e:	2a07      	cmp	r2, #7
10011850:	e9c8 4700 	strd	r4, r7, [r8]
10011854:	e9cd 2133 	strd	r2, r1, [sp, #204]	@ 0xcc
10011858:	ddf2      	ble.n	10011840 <_vfprintf_r+0x914>
1001185a:	9907      	ldr	r1, [sp, #28]
1001185c:	aa32      	add	r2, sp, #200	@ 0xc8
1001185e:	4650      	mov	r0, sl
10011860:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011864:	f001 fa02 	bl	10012c6c <__sprint_r>
10011868:	2800      	cmp	r0, #0
1001186a:	f040 83f8 	bne.w	1001205e <_vfprintf_r+0x1132>
1001186e:	3e10      	subs	r6, #16
10011870:	2e10      	cmp	r6, #16
10011872:	e9dd 2133 	ldrd	r2, r1, [sp, #204]	@ 0xcc
10011876:	dce8      	bgt.n	1001184a <_vfprintf_r+0x91e>
10011878:	460c      	mov	r4, r1
1001187a:	4613      	mov	r3, r2
1001187c:	3301      	adds	r3, #1
1001187e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011880:	f8c8 2000 	str.w	r2, [r8]
10011884:	4434      	add	r4, r6
10011886:	2b07      	cmp	r3, #7
10011888:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001188c:	f8c8 6004 	str.w	r6, [r8, #4]
10011890:	f300 8314 	bgt.w	10011ebc <_vfprintf_r+0xf90>
10011894:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011896:	eba3 060b 	sub.w	r6, r3, fp
1001189a:	2e00      	cmp	r6, #0
1001189c:	f108 0808 	add.w	r8, r8, #8
100118a0:	f77f ad03 	ble.w	100112aa <_vfprintf_r+0x37e>
100118a4:	4a37      	ldr	r2, [pc, #220]	@ (10011984 <_vfprintf_r+0xa58>)
100118a6:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100118a8:	9215      	str	r2, [sp, #84]	@ 0x54
100118aa:	2e10      	cmp	r6, #16
100118ac:	dd23      	ble.n	100118f6 <_vfprintf_r+0x9ca>
100118ae:	4622      	mov	r2, r4
100118b0:	f04f 0a10 	mov.w	sl, #16
100118b4:	e9dd 4707 	ldrd	r4, r7, [sp, #28]
100118b8:	e004      	b.n	100118c4 <_vfprintf_r+0x998>
100118ba:	3e10      	subs	r6, #16
100118bc:	2e10      	cmp	r6, #16
100118be:	f108 0808 	add.w	r8, r8, #8
100118c2:	dd17      	ble.n	100118f4 <_vfprintf_r+0x9c8>
100118c4:	3301      	adds	r3, #1
100118c6:	492f      	ldr	r1, [pc, #188]	@ (10011984 <_vfprintf_r+0xa58>)
100118c8:	3210      	adds	r2, #16
100118ca:	2b07      	cmp	r3, #7
100118cc:	e9c8 1a00 	strd	r1, sl, [r8]
100118d0:	e9cd 3233 	strd	r3, r2, [sp, #204]	@ 0xcc
100118d4:	ddf1      	ble.n	100118ba <_vfprintf_r+0x98e>
100118d6:	aa32      	add	r2, sp, #200	@ 0xc8
100118d8:	4621      	mov	r1, r4
100118da:	4638      	mov	r0, r7
100118dc:	f001 f9c6 	bl	10012c6c <__sprint_r>
100118e0:	2800      	cmp	r0, #0
100118e2:	f47f ac7a 	bne.w	100111da <_vfprintf_r+0x2ae>
100118e6:	3e10      	subs	r6, #16
100118e8:	2e10      	cmp	r6, #16
100118ea:	e9dd 3233 	ldrd	r3, r2, [sp, #204]	@ 0xcc
100118ee:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100118f2:	dce7      	bgt.n	100118c4 <_vfprintf_r+0x998>
100118f4:	4614      	mov	r4, r2
100118f6:	3301      	adds	r3, #1
100118f8:	9a15      	ldr	r2, [sp, #84]	@ 0x54
100118fa:	f8c8 2000 	str.w	r2, [r8]
100118fe:	4434      	add	r4, r6
10011900:	2b07      	cmp	r3, #7
10011902:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011906:	f8c8 6004 	str.w	r6, [r8, #4]
1001190a:	f300 81aa 	bgt.w	10011c62 <_vfprintf_r+0xd36>
1001190e:	f108 0808 	add.w	r8, r8, #8
10011912:	e4ca      	b.n	100112aa <_vfprintf_r+0x37e>
10011914:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011918:	aa32      	add	r2, sp, #200	@ 0xc8
1001191a:	f001 f9a7 	bl	10012c6c <__sprint_r>
1001191e:	2800      	cmp	r0, #0
10011920:	f43f ace9 	beq.w	100112f6 <_vfprintf_r+0x3ca>
10011924:	f8dd b020 	ldr.w	fp, [sp, #32]
10011928:	e458      	b.n	100111dc <_vfprintf_r+0x2b0>
1001192a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
1001192c:	9919      	ldr	r1, [sp, #100]	@ 0x64
1001192e:	441c      	add	r4, r3
10011930:	e9c8 1300 	strd	r1, r3, [r8]
10011934:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011936:	9434      	str	r4, [sp, #208]	@ 0xd0
10011938:	3301      	adds	r3, #1
1001193a:	2b07      	cmp	r3, #7
1001193c:	9333      	str	r3, [sp, #204]	@ 0xcc
1001193e:	f300 85bf 	bgt.w	100124c0 <_vfprintf_r+0x1594>
10011942:	f108 0808 	add.w	r8, r8, #8
10011946:	2a00      	cmp	r2, #0
10011948:	f2c0 87ae 	blt.w	100128a8 <_vfprintf_r+0x197c>
1001194c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
1001194e:	f8c8 5000 	str.w	r5, [r8]
10011952:	3301      	adds	r3, #1
10011954:	4414      	add	r4, r2
10011956:	2b07      	cmp	r3, #7
10011958:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001195c:	f8c8 2004 	str.w	r2, [r8, #4]
10011960:	f77f acb3 	ble.w	100112ca <_vfprintf_r+0x39e>
10011964:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011968:	aa32      	add	r2, sp, #200	@ 0xc8
1001196a:	f001 f97f 	bl	10012c6c <__sprint_r>
1001196e:	2800      	cmp	r0, #0
10011970:	d1d8      	bne.n	10011924 <_vfprintf_r+0x9f8>
10011972:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011974:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011978:	e4a9      	b.n	100112ce <_vfprintf_r+0x3a2>
1001197a:	bf00      	nop
1001197c:	10017088 	.word	0x10017088
10011980:	100170b8 	.word	0x100170b8
10011984:	100170bc 	.word	0x100170bc
10011988:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001198a:	9e33      	ldr	r6, [sp, #204]	@ 0xcc
1001198c:	2b01      	cmp	r3, #1
1001198e:	f104 0401 	add.w	r4, r4, #1
10011992:	f106 0601 	add.w	r6, r6, #1
10011996:	f108 0708 	add.w	r7, r8, #8
1001199a:	f340 811d 	ble.w	10011bd8 <_vfprintf_r+0xcac>
1001199e:	2301      	movs	r3, #1
100119a0:	2e07      	cmp	r6, #7
100119a2:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100119a6:	f8c8 5000 	str.w	r5, [r8]
100119aa:	f8c8 3004 	str.w	r3, [r8, #4]
100119ae:	f300 82e4 	bgt.w	10011f7a <_vfprintf_r+0x104e>
100119b2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100119b4:	9a19      	ldr	r2, [sp, #100]	@ 0x64
100119b6:	3601      	adds	r6, #1
100119b8:	441c      	add	r4, r3
100119ba:	2e07      	cmp	r6, #7
100119bc:	e9c7 2300 	strd	r2, r3, [r7]
100119c0:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100119c4:	f300 82cd 	bgt.w	10011f62 <_vfprintf_r+0x1036>
100119c8:	3708      	adds	r7, #8
100119ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100119cc:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
100119d0:	f103 38ff 	add.w	r8, r3, #4294967295	@ 0xffffffff
100119d4:	2200      	movs	r2, #0
100119d6:	2300      	movs	r3, #0
100119d8:	f005 f8e8 	bl	10016bac <__aeabi_dcmpeq>
100119dc:	2800      	cmp	r0, #0
100119de:	f040 8115 	bne.w	10011c0c <_vfprintf_r+0xce0>
100119e2:	3601      	adds	r6, #1
100119e4:	3501      	adds	r5, #1
100119e6:	4444      	add	r4, r8
100119e8:	2e07      	cmp	r6, #7
100119ea:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
100119ee:	603d      	str	r5, [r7, #0]
100119f0:	f8c7 8004 	str.w	r8, [r7, #4]
100119f4:	f300 80fe 	bgt.w	10011bf4 <_vfprintf_r+0xcc8>
100119f8:	3708      	adds	r7, #8
100119fa:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
100119fc:	607b      	str	r3, [r7, #4]
100119fe:	3601      	adds	r6, #1
10011a00:	441c      	add	r4, r3
10011a02:	2e07      	cmp	r6, #7
10011a04:	ab2c      	add	r3, sp, #176	@ 0xb0
10011a06:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011a0a:	603b      	str	r3, [r7, #0]
10011a0c:	dcaa      	bgt.n	10011964 <_vfprintf_r+0xa38>
10011a0e:	f107 0808 	add.w	r8, r7, #8
10011a12:	e45c      	b.n	100112ce <_vfprintf_r+0x3a2>
10011a14:	464c      	mov	r4, r9
10011a16:	2b0a      	cmp	r3, #10
10011a18:	f172 0100 	sbcs.w	r1, r2, #0
10011a1c:	f080 82b9 	bcs.w	10011f92 <_vfprintf_r+0x1066>
10011a20:	3330      	adds	r3, #48	@ 0x30
10011a22:	f88d 3177 	strb.w	r3, [sp, #375]	@ 0x177
10011a26:	46a1      	mov	r9, r4
10011a28:	f04f 0b01 	mov.w	fp, #1
10011a2c:	f20d 1577 	addw	r5, sp, #375	@ 0x177
10011a30:	e6ca      	b.n	100117c8 <_vfprintf_r+0x89c>
10011a32:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011a36:	aa32      	add	r2, sp, #200	@ 0xc8
10011a38:	9315      	str	r3, [sp, #84]	@ 0x54
10011a3a:	f001 f917 	bl	10012c6c <__sprint_r>
10011a3e:	2800      	cmp	r0, #0
10011a40:	f47f af70 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011a44:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011a46:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10011a48:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011a4c:	e412      	b.n	10011274 <_vfprintf_r+0x348>
10011a4e:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011a52:	aa32      	add	r2, sp, #200	@ 0xc8
10011a54:	f001 f90a 	bl	10012c6c <__sprint_r>
10011a58:	2800      	cmp	r0, #0
10011a5a:	f47f af63 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011a5e:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011a60:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011a64:	e418      	b.n	10011298 <_vfprintf_r+0x36c>
10011a66:	2d10      	cmp	r5, #16
10011a68:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011a6a:	f340 8752 	ble.w	10012912 <_vfprintf_r+0x19e6>
10011a6e:	4fbb      	ldr	r7, [pc, #748]	@ (10011d5c <_vfprintf_r+0xe30>)
10011a70:	9715      	str	r7, [sp, #84]	@ 0x54
10011a72:	e9dd a907 	ldrd	sl, r9, [sp, #28]
10011a76:	2610      	movs	r6, #16
10011a78:	e004      	b.n	10011a84 <_vfprintf_r+0xb58>
10011a7a:	3d10      	subs	r5, #16
10011a7c:	2d10      	cmp	r5, #16
10011a7e:	f108 0808 	add.w	r8, r8, #8
10011a82:	dd16      	ble.n	10011ab2 <_vfprintf_r+0xb86>
10011a84:	3301      	adds	r3, #1
10011a86:	3410      	adds	r4, #16
10011a88:	2b07      	cmp	r3, #7
10011a8a:	e9c8 7600 	strd	r7, r6, [r8]
10011a8e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011a92:	ddf2      	ble.n	10011a7a <_vfprintf_r+0xb4e>
10011a94:	aa32      	add	r2, sp, #200	@ 0xc8
10011a96:	4651      	mov	r1, sl
10011a98:	4648      	mov	r0, r9
10011a9a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011a9e:	f001 f8e5 	bl	10012c6c <__sprint_r>
10011aa2:	2800      	cmp	r0, #0
10011aa4:	f040 82f5 	bne.w	10012092 <_vfprintf_r+0x1166>
10011aa8:	3d10      	subs	r5, #16
10011aaa:	2d10      	cmp	r5, #16
10011aac:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011ab0:	dce8      	bgt.n	10011a84 <_vfprintf_r+0xb58>
10011ab2:	3301      	adds	r3, #1
10011ab4:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10011ab6:	442c      	add	r4, r5
10011ab8:	2b07      	cmp	r3, #7
10011aba:	e9c8 2500 	strd	r2, r5, [r8]
10011abe:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011ac2:	f77f ac0d 	ble.w	100112e0 <_vfprintf_r+0x3b4>
10011ac6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011aca:	aa32      	add	r2, sp, #200	@ 0xc8
10011acc:	f001 f8ce 	bl	10012c6c <__sprint_r>
10011ad0:	2800      	cmp	r0, #0
10011ad2:	f47f af27 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011ad6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011ad8:	e402      	b.n	100112e0 <_vfprintf_r+0x3b4>
10011ada:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10011adc:	2a00      	cmp	r2, #0
10011ade:	f340 80fd 	ble.w	10011cdc <_vfprintf_r+0xdb0>
10011ae2:	e9dd 7312 	ldrd	r7, r3, [sp, #72]	@ 0x48
10011ae6:	429f      	cmp	r7, r3
10011ae8:	bfa8      	it	ge
10011aea:	461f      	movge	r7, r3
10011aec:	2f00      	cmp	r7, #0
10011aee:	eb05 0b03 	add.w	fp, r5, r3
10011af2:	dd0b      	ble.n	10011b0c <_vfprintf_r+0xbe0>
10011af4:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011af6:	3301      	adds	r3, #1
10011af8:	443c      	add	r4, r7
10011afa:	2b07      	cmp	r3, #7
10011afc:	e9c8 5700 	strd	r5, r7, [r8]
10011b00:	9434      	str	r4, [sp, #208]	@ 0xd0
10011b02:	9333      	str	r3, [sp, #204]	@ 0xcc
10011b04:	f300 866f 	bgt.w	100127e6 <_vfprintf_r+0x18ba>
10011b08:	f108 0808 	add.w	r8, r8, #8
10011b0c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10011b0e:	2f00      	cmp	r7, #0
10011b10:	bfa8      	it	ge
10011b12:	1bf6      	subge	r6, r6, r7
10011b14:	2e00      	cmp	r6, #0
10011b16:	f300 8347 	bgt.w	100121a8 <_vfprintf_r+0x127c>
10011b1a:	f8dd a048 	ldr.w	sl, [sp, #72]	@ 0x48
10011b1e:	f419 6f80 	tst.w	r9, #1024	@ 0x400
10011b22:	44aa      	add	sl, r5
10011b24:	f040 857a 	bne.w	1001261c <_vfprintf_r+0x16f0>
10011b28:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10011b2a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011b2c:	429d      	cmp	r5, r3
10011b2e:	db03      	blt.n	10011b38 <_vfprintf_r+0xc0c>
10011b30:	f019 0f01 	tst.w	r9, #1
10011b34:	f000 8404 	beq.w	10012340 <_vfprintf_r+0x1414>
10011b38:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011b3a:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10011b3c:	441c      	add	r4, r3
10011b3e:	e9c8 2300 	strd	r2, r3, [r8]
10011b42:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011b44:	9434      	str	r4, [sp, #208]	@ 0xd0
10011b46:	3301      	adds	r3, #1
10011b48:	2b07      	cmp	r3, #7
10011b4a:	9333      	str	r3, [sp, #204]	@ 0xcc
10011b4c:	f300 865a 	bgt.w	10012804 <_vfprintf_r+0x18d8>
10011b50:	f108 0808 	add.w	r8, r8, #8
10011b54:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011b56:	ebab 060a 	sub.w	r6, fp, sl
10011b5a:	1b5d      	subs	r5, r3, r5
10011b5c:	42ae      	cmp	r6, r5
10011b5e:	bfa8      	it	ge
10011b60:	462e      	movge	r6, r5
10011b62:	2e00      	cmp	r6, #0
10011b64:	dd0d      	ble.n	10011b82 <_vfprintf_r+0xc56>
10011b66:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011b68:	f8c8 a000 	str.w	sl, [r8]
10011b6c:	3301      	adds	r3, #1
10011b6e:	4434      	add	r4, r6
10011b70:	2b07      	cmp	r3, #7
10011b72:	f8c8 6004 	str.w	r6, [r8, #4]
10011b76:	9434      	str	r4, [sp, #208]	@ 0xd0
10011b78:	9333      	str	r3, [sp, #204]	@ 0xcc
10011b7a:	f300 8655 	bgt.w	10012828 <_vfprintf_r+0x18fc>
10011b7e:	f108 0808 	add.w	r8, r8, #8
10011b82:	2e00      	cmp	r6, #0
10011b84:	bfa8      	it	ge
10011b86:	1bad      	subge	r5, r5, r6
10011b88:	2d00      	cmp	r5, #0
10011b8a:	f77f aba0 	ble.w	100112ce <_vfprintf_r+0x3a2>
10011b8e:	2d10      	cmp	r5, #16
10011b90:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011b92:	f340 82da 	ble.w	1001214a <_vfprintf_r+0x121e>
10011b96:	4f72      	ldr	r7, [pc, #456]	@ (10011d60 <_vfprintf_r+0xe34>)
10011b98:	9715      	str	r7, [sp, #84]	@ 0x54
10011b9a:	e9dd ab07 	ldrd	sl, fp, [sp, #28]
10011b9e:	2610      	movs	r6, #16
10011ba0:	e005      	b.n	10011bae <_vfprintf_r+0xc82>
10011ba2:	f108 0808 	add.w	r8, r8, #8
10011ba6:	3d10      	subs	r5, #16
10011ba8:	2d10      	cmp	r5, #16
10011baa:	f340 82d0 	ble.w	1001214e <_vfprintf_r+0x1222>
10011bae:	3301      	adds	r3, #1
10011bb0:	3410      	adds	r4, #16
10011bb2:	2b07      	cmp	r3, #7
10011bb4:	e9c8 7600 	strd	r7, r6, [r8]
10011bb8:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10011bbc:	ddf1      	ble.n	10011ba2 <_vfprintf_r+0xc76>
10011bbe:	aa32      	add	r2, sp, #200	@ 0xc8
10011bc0:	4651      	mov	r1, sl
10011bc2:	4658      	mov	r0, fp
10011bc4:	f001 f852 	bl	10012c6c <__sprint_r>
10011bc8:	2800      	cmp	r0, #0
10011bca:	f47f ab07 	bne.w	100111dc <_vfprintf_r+0x2b0>
10011bce:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10011bd2:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011bd6:	e7e6      	b.n	10011ba6 <_vfprintf_r+0xc7a>
10011bd8:	f019 0f01 	tst.w	r9, #1
10011bdc:	f47f aedf 	bne.w	1001199e <_vfprintf_r+0xa72>
10011be0:	2301      	movs	r3, #1
10011be2:	2e07      	cmp	r6, #7
10011be4:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011be8:	f8c8 5000 	str.w	r5, [r8]
10011bec:	f8c8 3004 	str.w	r3, [r8, #4]
10011bf0:	f77f af03 	ble.w	100119fa <_vfprintf_r+0xace>
10011bf4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011bf8:	aa32      	add	r2, sp, #200	@ 0xc8
10011bfa:	f001 f837 	bl	10012c6c <__sprint_r>
10011bfe:	2800      	cmp	r0, #0
10011c00:	f47f ae90 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011c04:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10011c08:	af35      	add	r7, sp, #212	@ 0xd4
10011c0a:	e6f6      	b.n	100119fa <_vfprintf_r+0xace>
10011c0c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10011c0e:	2b01      	cmp	r3, #1
10011c10:	f77f aef3 	ble.w	100119fa <_vfprintf_r+0xace>
10011c14:	2b11      	cmp	r3, #17
10011c16:	4b52      	ldr	r3, [pc, #328]	@ (10011d60 <_vfprintf_r+0xe34>)
10011c18:	9315      	str	r3, [sp, #84]	@ 0x54
10011c1a:	f340 82b9 	ble.w	10012190 <_vfprintf_r+0x1264>
10011c1e:	f8cd 9024 	str.w	r9, [sp, #36]	@ 0x24
10011c22:	e9dd ba07 	ldrd	fp, sl, [sp, #28]
10011c26:	2510      	movs	r5, #16
10011c28:	4699      	mov	r9, r3
10011c2a:	e006      	b.n	10011c3a <_vfprintf_r+0xd0e>
10011c2c:	3708      	adds	r7, #8
10011c2e:	f1a8 0810 	sub.w	r8, r8, #16
10011c32:	f1b8 0f10 	cmp.w	r8, #16
10011c36:	f340 82a9 	ble.w	1001218c <_vfprintf_r+0x1260>
10011c3a:	3601      	adds	r6, #1
10011c3c:	3410      	adds	r4, #16
10011c3e:	2e07      	cmp	r6, #7
10011c40:	e9c7 9500 	strd	r9, r5, [r7]
10011c44:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
10011c48:	ddf0      	ble.n	10011c2c <_vfprintf_r+0xd00>
10011c4a:	aa32      	add	r2, sp, #200	@ 0xc8
10011c4c:	4659      	mov	r1, fp
10011c4e:	4650      	mov	r0, sl
10011c50:	f001 f80c 	bl	10012c6c <__sprint_r>
10011c54:	2800      	cmp	r0, #0
10011c56:	f040 8202 	bne.w	1001205e <_vfprintf_r+0x1132>
10011c5a:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10011c5e:	af35      	add	r7, sp, #212	@ 0xd4
10011c60:	e7e5      	b.n	10011c2e <_vfprintf_r+0xd02>
10011c62:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011c66:	aa32      	add	r2, sp, #200	@ 0xc8
10011c68:	f001 f800 	bl	10012c6c <__sprint_r>
10011c6c:	2800      	cmp	r0, #0
10011c6e:	f47f ae59 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011c72:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011c74:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011c78:	f7ff bb17 	b.w	100112aa <_vfprintf_r+0x37e>
10011c7c:	990d      	ldr	r1, [sp, #52]	@ 0x34
10011c7e:	f851 3b04 	ldr.w	r3, [r1], #4
10011c82:	910d      	str	r1, [sp, #52]	@ 0x34
10011c84:	f014 0110 	ands.w	r1, r4, #16
10011c88:	d155      	bne.n	10011d36 <_vfprintf_r+0xe0a>
10011c8a:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10011c8e:	d04d      	beq.n	10011d2c <_vfprintf_r+0xe00>
10011c90:	460a      	mov	r2, r1
10011c92:	b29b      	uxth	r3, r3
10011c94:	2101      	movs	r1, #1
10011c96:	e4b7      	b.n	10011608 <_vfprintf_r+0x6dc>
10011c98:	990d      	ldr	r1, [sp, #52]	@ 0x34
10011c9a:	f851 3b04 	ldr.w	r3, [r1], #4
10011c9e:	910d      	str	r1, [sp, #52]	@ 0x34
10011ca0:	f019 0110 	ands.w	r1, r9, #16
10011ca4:	f47f acad 	bne.w	10011602 <_vfprintf_r+0x6d6>
10011ca8:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10011cac:	f000 82a9 	beq.w	10012202 <_vfprintf_r+0x12d6>
10011cb0:	b29b      	uxth	r3, r3
10011cb2:	460a      	mov	r2, r1
10011cb4:	e4a5      	b.n	10011602 <_vfprintf_r+0x6d6>
10011cb6:	9d07      	ldr	r5, [sp, #28]
10011cb8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10011cba:	f7fe fbc1 	bl	10010440 <__retarget_lock_acquire_recursive>
10011cbe:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
10011cc2:	f7ff b959 	b.w	10010f78 <_vfprintf_r+0x4c>
10011cc6:	f019 0f01 	tst.w	r9, #1
10011cca:	f43f ab00 	beq.w	100112ce <_vfprintf_r+0x3a2>
10011cce:	e52b      	b.n	10011728 <_vfprintf_r+0x7fc>
10011cd0:	930d      	str	r3, [sp, #52]	@ 0x34
10011cd2:	7823      	ldrb	r3, [r4, #0]
10011cd4:	f7ff b9a2 	b.w	1001101c <_vfprintf_r+0xf0>
10011cd8:	ad5e      	add	r5, sp, #376	@ 0x178
10011cda:	e575      	b.n	100117c8 <_vfprintf_r+0x89c>
10011cdc:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011cde:	4921      	ldr	r1, [pc, #132]	@ (10011d64 <_vfprintf_r+0xe38>)
10011ce0:	f8c8 1000 	str.w	r1, [r8]
10011ce4:	3301      	adds	r3, #1
10011ce6:	3401      	adds	r4, #1
10011ce8:	2101      	movs	r1, #1
10011cea:	2b07      	cmp	r3, #7
10011cec:	9434      	str	r4, [sp, #208]	@ 0xd0
10011cee:	9333      	str	r3, [sp, #204]	@ 0xcc
10011cf0:	f8c8 1004 	str.w	r1, [r8, #4]
10011cf4:	f300 8551 	bgt.w	1001279a <_vfprintf_r+0x186e>
10011cf8:	f108 0808 	add.w	r8, r8, #8
10011cfc:	2a00      	cmp	r2, #0
10011cfe:	f47f ae14 	bne.w	1001192a <_vfprintf_r+0x9fe>
10011d02:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
10011d04:	f009 0301 	and.w	r3, r9, #1
10011d08:	4313      	orrs	r3, r2
10011d0a:	f43f aae0 	beq.w	100112ce <_vfprintf_r+0x3a2>
10011d0e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10011d10:	9a19      	ldr	r2, [sp, #100]	@ 0x64
10011d12:	441c      	add	r4, r3
10011d14:	e9c8 2300 	strd	r2, r3, [r8]
10011d18:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
10011d1a:	9434      	str	r4, [sp, #208]	@ 0xd0
10011d1c:	3301      	adds	r3, #1
10011d1e:	2b07      	cmp	r3, #7
10011d20:	9333      	str	r3, [sp, #204]	@ 0xcc
10011d22:	f300 83cd 	bgt.w	100124c0 <_vfprintf_r+0x1594>
10011d26:	f108 0808 	add.w	r8, r8, #8
10011d2a:	e60f      	b.n	1001194c <_vfprintf_r+0xa20>
10011d2c:	f414 7200 	ands.w	r2, r4, #512	@ 0x200
10011d30:	bf1c      	itt	ne
10011d32:	b2db      	uxtbne	r3, r3
10011d34:	4602      	movne	r2, r0
10011d36:	2101      	movs	r1, #1
10011d38:	e466      	b.n	10011608 <_vfprintf_r+0x6dc>
10011d3a:	f419 7f00 	tst.w	r9, #512	@ 0x200
10011d3e:	f040 8307 	bne.w	10012350 <_vfprintf_r+0x1424>
10011d42:	17da      	asrs	r2, r3, #31
10011d44:	4611      	mov	r1, r2
10011d46:	2900      	cmp	r1, #0
10011d48:	f6bf abdb 	bge.w	10011502 <_vfprintf_r+0x5d6>
10011d4c:	425b      	negs	r3, r3
10011d4e:	eb62 0242 	sbc.w	r2, r2, r2, lsl #1
10011d52:	464c      	mov	r4, r9
10011d54:	202d      	movs	r0, #45	@ 0x2d
10011d56:	2101      	movs	r1, #1
10011d58:	e457      	b.n	1001160a <_vfprintf_r+0x6de>
10011d5a:	bf00      	nop
10011d5c:	100170cc 	.word	0x100170cc
10011d60:	100170bc 	.word	0x100170bc
10011d64:	100170b8 	.word	0x100170b8
10011d68:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
10011d6a:	7823      	ldrb	r3, [r4, #0]
10011d6c:	2a00      	cmp	r2, #0
10011d6e:	f43f a955 	beq.w	1001101c <_vfprintf_r+0xf0>
10011d72:	7812      	ldrb	r2, [r2, #0]
10011d74:	2a00      	cmp	r2, #0
10011d76:	f43f a951 	beq.w	1001101c <_vfprintf_r+0xf0>
10011d7a:	f449 6980 	orr.w	r9, r9, #1024	@ 0x400
10011d7e:	f7ff b94d 	b.w	1001101c <_vfprintf_r+0xf0>
10011d82:	f019 0f10 	tst.w	r9, #16
10011d86:	f040 81fb 	bne.w	10012180 <_vfprintf_r+0x1254>
10011d8a:	f019 0f40 	tst.w	r9, #64	@ 0x40
10011d8e:	f040 82e5 	bne.w	1001235c <_vfprintf_r+0x1430>
10011d92:	f419 7f00 	tst.w	r9, #512	@ 0x200
10011d96:	f000 81f3 	beq.w	10012180 <_vfprintf_r+0x1254>
10011d9a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011d9c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10011d9e:	681b      	ldr	r3, [r3, #0]
10011da0:	701a      	strb	r2, [r3, #0]
10011da2:	e49b      	b.n	100116dc <_vfprintf_r+0x7b0>
10011da4:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	@ 0x58
10011da8:	4602      	mov	r2, r0
10011daa:	460b      	mov	r3, r1
10011dac:	f004 ff30 	bl	10016c10 <__aeabi_dcmpun>
10011db0:	2800      	cmp	r0, #0
10011db2:	f040 8638 	bne.w	10012a26 <_vfprintf_r+0x1afa>
10011db6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011db8:	2b61      	cmp	r3, #97	@ 0x61
10011dba:	f000 8521 	beq.w	10012800 <_vfprintf_r+0x18d4>
10011dbe:	2b41      	cmp	r3, #65	@ 0x41
10011dc0:	f000 82e3 	beq.w	1001238a <_vfprintf_r+0x145e>
10011dc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011dc6:	3301      	adds	r3, #1
10011dc8:	f000 8617 	beq.w	100129fa <_vfprintf_r+0x1ace>
10011dcc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011dce:	f023 0320 	bic.w	r3, r3, #32
10011dd2:	2b47      	cmp	r3, #71	@ 0x47
10011dd4:	d104      	bne.n	10011de0 <_vfprintf_r+0xeb4>
10011dd6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011dd8:	2b00      	cmp	r3, #0
10011dda:	bf08      	it	eq
10011ddc:	2301      	moveq	r3, #1
10011dde:	9309      	str	r3, [sp, #36]	@ 0x24
10011de0:	e9dd 1216 	ldrd	r1, r2, [sp, #88]	@ 0x58
10011de4:	f449 7080 	orr.w	r0, r9, #256	@ 0x100
10011de8:	2a00      	cmp	r2, #0
10011dea:	9015      	str	r0, [sp, #84]	@ 0x54
10011dec:	f8cd 9018 	str.w	r9, [sp, #24]
10011df0:	f04f 0300 	mov.w	r3, #0
10011df4:	f2c0 84df 	blt.w	100127b6 <_vfprintf_r+0x188a>
10011df8:	e9cd 1224 	strd	r1, r2, [sp, #144]	@ 0x90
10011dfc:	931f      	str	r3, [sp, #124]	@ 0x7c
10011dfe:	930c      	str	r3, [sp, #48]	@ 0x30
10011e00:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10011e02:	3b41      	subs	r3, #65	@ 0x41
10011e04:	2b25      	cmp	r3, #37	@ 0x25
10011e06:	f200 8203 	bhi.w	10012210 <_vfprintf_r+0x12e4>
10011e0a:	e8df f013 	tbh	[pc, r3, lsl #1]
10011e0e:	0374      	.short	0x0374
10011e10:	02010201 	.word	0x02010201
10011e14:	036d0201 	.word	0x036d0201
10011e18:	02010371 	.word	0x02010371
10011e1c:	02010201 	.word	0x02010201
10011e20:	02010201 	.word	0x02010201
10011e24:	02010201 	.word	0x02010201
10011e28:	02010201 	.word	0x02010201
10011e2c:	02010201 	.word	0x02010201
10011e30:	02010201 	.word	0x02010201
10011e34:	02010201 	.word	0x02010201
10011e38:	02010201 	.word	0x02010201
10011e3c:	02010201 	.word	0x02010201
10011e40:	02010201 	.word	0x02010201
10011e44:	02010201 	.word	0x02010201
10011e48:	02010201 	.word	0x02010201
10011e4c:	02010201 	.word	0x02010201
10011e50:	02010201 	.word	0x02010201
10011e54:	036d0201 	.word	0x036d0201
10011e58:	0371      	.short	0x0371
10011e5a:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011e5e:	4bc3      	ldr	r3, [pc, #780]	@ (1001216c <_vfprintf_r+0x1240>)
10011e60:	931a      	str	r3, [sp, #104]	@ 0x68
10011e62:	f019 0220 	ands.w	r2, r9, #32
10011e66:	d06a      	beq.n	10011f3e <_vfprintf_r+0x1012>
10011e68:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011e6a:	3307      	adds	r3, #7
10011e6c:	f023 0307 	bic.w	r3, r3, #7
10011e70:	4619      	mov	r1, r3
10011e72:	685a      	ldr	r2, [r3, #4]
10011e74:	f851 3b08 	ldr.w	r3, [r1], #8
10011e78:	910d      	str	r1, [sp, #52]	@ 0x34
10011e7a:	f019 0f01 	tst.w	r9, #1
10011e7e:	d00a      	beq.n	10011e96 <_vfprintf_r+0xf6a>
10011e80:	ea53 0102 	orrs.w	r1, r3, r2
10011e84:	d007      	beq.n	10011e96 <_vfprintf_r+0xf6a>
10011e86:	990e      	ldr	r1, [sp, #56]	@ 0x38
10011e88:	f88d 10a1 	strb.w	r1, [sp, #161]	@ 0xa1
10011e8c:	2130      	movs	r1, #48	@ 0x30
10011e8e:	f049 0902 	orr.w	r9, r9, #2
10011e92:	f88d 10a0 	strb.w	r1, [sp, #160]	@ 0xa0
10011e96:	f429 6480 	bic.w	r4, r9, #1024	@ 0x400
10011e9a:	2102      	movs	r1, #2
10011e9c:	f7ff bbb4 	b.w	10011608 <_vfprintf_r+0x6dc>
10011ea0:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011ea4:	464c      	mov	r4, r9
10011ea6:	f7ff bbd0 	b.w	1001164a <_vfprintf_r+0x71e>
10011eaa:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011eae:	f7ff bb9b 	b.w	100115e8 <_vfprintf_r+0x6bc>
10011eb2:	e9cd 340e 	strd	r3, r4, [sp, #56]	@ 0x38
10011eb6:	4bae      	ldr	r3, [pc, #696]	@ (10012170 <_vfprintf_r+0x1244>)
10011eb8:	931a      	str	r3, [sp, #104]	@ 0x68
10011eba:	e7d2      	b.n	10011e62 <_vfprintf_r+0xf36>
10011ebc:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011ec0:	aa32      	add	r2, sp, #200	@ 0xc8
10011ec2:	f000 fed3 	bl	10012c6c <__sprint_r>
10011ec6:	2800      	cmp	r0, #0
10011ec8:	f47f ad2c 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011ecc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011ece:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011ed2:	f7ff b9e4 	b.w	1001129e <_vfprintf_r+0x372>
10011ed6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011eda:	aa32      	add	r2, sp, #200	@ 0xc8
10011edc:	f000 fec6 	bl	10012c6c <__sprint_r>
10011ee0:	2800      	cmp	r0, #0
10011ee2:	f47f ad1f 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011ee6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10011ee8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10011eec:	e42a      	b.n	10011744 <_vfprintf_r+0x818>
10011eee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10011ef0:	950c      	str	r5, [sp, #48]	@ 0x30
10011ef2:	2b06      	cmp	r3, #6
10011ef4:	4629      	mov	r1, r5
10011ef6:	bf28      	it	cs
10011ef8:	2306      	movcs	r3, #6
10011efa:	9509      	str	r5, [sp, #36]	@ 0x24
10011efc:	462a      	mov	r2, r5
10011efe:	9306      	str	r3, [sp, #24]
10011f00:	4d9c      	ldr	r5, [pc, #624]	@ (10012174 <_vfprintf_r+0x1248>)
10011f02:	960d      	str	r6, [sp, #52]	@ 0x34
10011f04:	469b      	mov	fp, r3
10011f06:	9114      	str	r1, [sp, #80]	@ 0x50
10011f08:	9110      	str	r1, [sp, #64]	@ 0x40
10011f0a:	9112      	str	r1, [sp, #72]	@ 0x48
10011f0c:	f7ff ba40 	b.w	10011390 <_vfprintf_r+0x464>
10011f10:	2208      	movs	r2, #8
10011f12:	2100      	movs	r1, #0
10011f14:	a830      	add	r0, sp, #192	@ 0xc0
10011f16:	f7fe fa01 	bl	1001031c <memset>
10011f1a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10011f1c:	9808      	ldr	r0, [sp, #32]
10011f1e:	681a      	ldr	r2, [r3, #0]
10011f20:	ad45      	add	r5, sp, #276	@ 0x114
10011f22:	ab30      	add	r3, sp, #192	@ 0xc0
10011f24:	4629      	mov	r1, r5
10011f26:	f001 ff81 	bl	10013e2c <_wcrtomb_r>
10011f2a:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
10011f2e:	4683      	mov	fp, r0
10011f30:	f000 8544 	beq.w	100129bc <_vfprintf_r+0x1a90>
10011f34:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10011f38:	9306      	str	r3, [sp, #24]
10011f3a:	f7ff ba93 	b.w	10011464 <_vfprintf_r+0x538>
10011f3e:	990d      	ldr	r1, [sp, #52]	@ 0x34
10011f40:	f851 3b04 	ldr.w	r3, [r1], #4
10011f44:	910d      	str	r1, [sp, #52]	@ 0x34
10011f46:	f019 0110 	ands.w	r1, r9, #16
10011f4a:	d196      	bne.n	10011e7a <_vfprintf_r+0xf4e>
10011f4c:	f019 0040 	ands.w	r0, r9, #64	@ 0x40
10011f50:	f000 8151 	beq.w	100121f6 <_vfprintf_r+0x12ca>
10011f54:	b29b      	uxth	r3, r3
10011f56:	460a      	mov	r2, r1
10011f58:	e78f      	b.n	10011e7a <_vfprintf_r+0xf4e>
10011f5a:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10011f5e:	ad5e      	add	r5, sp, #376	@ 0x178
10011f60:	e432      	b.n	100117c8 <_vfprintf_r+0x89c>
10011f62:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011f66:	aa32      	add	r2, sp, #200	@ 0xc8
10011f68:	f000 fe80 	bl	10012c6c <__sprint_r>
10011f6c:	2800      	cmp	r0, #0
10011f6e:	f47f acd9 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011f72:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10011f76:	af35      	add	r7, sp, #212	@ 0xd4
10011f78:	e527      	b.n	100119ca <_vfprintf_r+0xa9e>
10011f7a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10011f7e:	aa32      	add	r2, sp, #200	@ 0xc8
10011f80:	f000 fe74 	bl	10012c6c <__sprint_r>
10011f84:	2800      	cmp	r0, #0
10011f86:	f47f accd 	bne.w	10011924 <_vfprintf_r+0x9f8>
10011f8a:	e9dd 6433 	ldrd	r6, r4, [sp, #204]	@ 0xcc
10011f8e:	af35      	add	r7, sp, #212	@ 0xd4
10011f90:	e50f      	b.n	100119b2 <_vfprintf_r+0xa86>
10011f92:	f404 6b80 	and.w	fp, r4, #1024	@ 0x400
10011f96:	2100      	movs	r1, #0
10011f98:	f8cd 8030 	str.w	r8, [sp, #48]	@ 0x30
10011f9c:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 10012178 <_vfprintf_r+0x124c>
10011fa0:	f8dd 806c 	ldr.w	r8, [sp, #108]	@ 0x6c
10011fa4:	9406      	str	r4, [sp, #24]
10011fa6:	ad5e      	add	r5, sp, #376	@ 0x178
10011fa8:	f04f 3acc 	mov.w	sl, #3435973836	@ 0xcccccccc
10011fac:	2705      	movs	r7, #5
10011fae:	468c      	mov	ip, r1
10011fb0:	465e      	mov	r6, fp
10011fb2:	e005      	b.n	10011fc0 <_vfprintf_r+0x1094>
10011fb4:	2b0a      	cmp	r3, #10
10011fb6:	f172 0200 	sbcs.w	r2, r2, #0
10011fba:	d333      	bcc.n	10012024 <_vfprintf_r+0x10f8>
10011fbc:	465b      	mov	r3, fp
10011fbe:	4622      	mov	r2, r4
10011fc0:	1899      	adds	r1, r3, r2
10011fc2:	f141 0100 	adc.w	r1, r1, #0
10011fc6:	fba9 0401 	umull	r0, r4, r9, r1
10011fca:	f024 0003 	bic.w	r0, r4, #3
10011fce:	eb00 0094 	add.w	r0, r0, r4, lsr #2
10011fd2:	1a09      	subs	r1, r1, r0
10011fd4:	1a58      	subs	r0, r3, r1
10011fd6:	f162 0e00 	sbc.w	lr, r2, #0
10011fda:	fb0a f400 	mul.w	r4, sl, r0
10011fde:	fba0 b009 	umull	fp, r0, r0, r9
10011fe2:	fb09 440e 	mla	r4, r9, lr, r4
10011fe6:	f00b 0e01 	and.w	lr, fp, #1
10011fea:	4404      	add	r4, r0
10011fec:	fbae 0e07 	umull	r0, lr, lr, r7
10011ff0:	1840      	adds	r0, r0, r1
10011ff2:	ea4f 0b5b 	mov.w	fp, fp, lsr #1
10011ff6:	3030      	adds	r0, #48	@ 0x30
10011ff8:	f805 0c01 	strb.w	r0, [r5, #-1]
10011ffc:	ea4b 7bc4 	orr.w	fp, fp, r4, lsl #31
10012000:	f10c 0c01 	add.w	ip, ip, #1
10012004:	3d01      	subs	r5, #1
10012006:	0864      	lsrs	r4, r4, #1
10012008:	2e00      	cmp	r6, #0
1001200a:	d0d3      	beq.n	10011fb4 <_vfprintf_r+0x1088>
1001200c:	f898 1000 	ldrb.w	r1, [r8]
10012010:	458c      	cmp	ip, r1
10012012:	d1cf      	bne.n	10011fb4 <_vfprintf_r+0x1088>
10012014:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10012018:	d0cc      	beq.n	10011fb4 <_vfprintf_r+0x1088>
1001201a:	2b0a      	cmp	r3, #10
1001201c:	f172 0200 	sbcs.w	r2, r2, #0
10012020:	f080 82c5 	bcs.w	100125ae <_vfprintf_r+0x1682>
10012024:	f8cd 806c 	str.w	r8, [sp, #108]	@ 0x6c
10012028:	9c06      	ldr	r4, [sp, #24]
1001202a:	f8dd 8030 	ldr.w	r8, [sp, #48]	@ 0x30
1001202e:	f8cd c04c 	str.w	ip, [sp, #76]	@ 0x4c
10012032:	f7ff bbc5 	b.w	100117c0 <_vfprintf_r+0x894>
10012036:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001203a:	aa32      	add	r2, sp, #200	@ 0xc8
1001203c:	9315      	str	r3, [sp, #84]	@ 0x54
1001203e:	f000 fe15 	bl	10012c6c <__sprint_r>
10012042:	2800      	cmp	r0, #0
10012044:	f47f ac6e 	bne.w	10011924 <_vfprintf_r+0x9f8>
10012048:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001204c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001204e:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10012050:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012054:	f7ff b8fc 	b.w	10011250 <_vfprintf_r+0x324>
10012058:	46a3      	mov	fp, r4
1001205a:	f7ff b8bf 	b.w	100111dc <_vfprintf_r+0x2b0>
1001205e:	46d3      	mov	fp, sl
10012060:	f7ff b8bc 	b.w	100111dc <_vfprintf_r+0x2b0>
10012064:	4658      	mov	r0, fp
10012066:	f7fe fac7 	bl	100105f8 <__sinit>
1001206a:	f7fe bf7c 	b.w	10010f66 <_vfprintf_r+0x3a>
1001206e:	2901      	cmp	r1, #1
10012070:	464c      	mov	r4, r9
10012072:	f47f ab95 	bne.w	100117a0 <_vfprintf_r+0x874>
10012076:	e4d3      	b.n	10011a20 <_vfprintf_r+0xaf4>
10012078:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001207c:	aa32      	add	r2, sp, #200	@ 0xc8
1001207e:	f000 fdf5 	bl	10012c6c <__sprint_r>
10012082:	2800      	cmp	r0, #0
10012084:	f47f ac4e 	bne.w	10011924 <_vfprintf_r+0x9f8>
10012088:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001208a:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001208e:	f7ff bb46 	b.w	1001171e <_vfprintf_r+0x7f2>
10012092:	46cb      	mov	fp, r9
10012094:	f7ff b8a2 	b.w	100111dc <_vfprintf_r+0x2b0>
10012098:	af30      	add	r7, sp, #192	@ 0xc0
1001209a:	2208      	movs	r2, #8
1001209c:	2100      	movs	r1, #0
1001209e:	4638      	mov	r0, r7
100120a0:	952b      	str	r5, [sp, #172]	@ 0xac
100120a2:	f7fe f93b 	bl	1001031c <memset>
100120a6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
100120aa:	f1ba 3fff 	cmp.w	sl, #4294967295	@ 0xffffffff
100120ae:	f000 8270 	beq.w	10012592 <_vfprintf_r+0x1666>
100120b2:	2400      	movs	r4, #0
100120b4:	f8cd 9018 	str.w	r9, [sp, #24]
100120b8:	46a3      	mov	fp, r4
100120ba:	f8dd 9020 	ldr.w	r9, [sp, #32]
100120be:	e00c      	b.n	100120da <_vfprintf_r+0x11ae>
100120c0:	a945      	add	r1, sp, #276	@ 0x114
100120c2:	4648      	mov	r0, r9
100120c4:	f001 feb2 	bl	10013e2c <_wcrtomb_r>
100120c8:	1c41      	adds	r1, r0, #1
100120ca:	4458      	add	r0, fp
100120cc:	f000 8476 	beq.w	100129bc <_vfprintf_r+0x1a90>
100120d0:	4550      	cmp	r0, sl
100120d2:	dc08      	bgt.n	100120e6 <_vfprintf_r+0x11ba>
100120d4:	f000 84c3 	beq.w	10012a5e <_vfprintf_r+0x1b32>
100120d8:	4683      	mov	fp, r0
100120da:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
100120dc:	5912      	ldr	r2, [r2, r4]
100120de:	463b      	mov	r3, r7
100120e0:	3404      	adds	r4, #4
100120e2:	2a00      	cmp	r2, #0
100120e4:	d1ec      	bne.n	100120c0 <_vfprintf_r+0x1194>
100120e6:	f8dd 9018 	ldr.w	r9, [sp, #24]
100120ea:	f1bb 0f00 	cmp.w	fp, #0
100120ee:	f000 8343 	beq.w	10012778 <_vfprintf_r+0x184c>
100120f2:	f1bb 0f63 	cmp.w	fp, #99	@ 0x63
100120f6:	f340 83fa 	ble.w	100128ee <_vfprintf_r+0x19c2>
100120fa:	9808      	ldr	r0, [sp, #32]
100120fc:	f10b 0101 	add.w	r1, fp, #1
10012100:	f7fd fe48 	bl	1000fd94 <_malloc_r>
10012104:	4605      	mov	r5, r0
10012106:	2800      	cmp	r0, #0
10012108:	f000 8458 	beq.w	100129bc <_vfprintf_r+0x1a90>
1001210c:	900c      	str	r0, [sp, #48]	@ 0x30
1001210e:	2208      	movs	r2, #8
10012110:	2100      	movs	r1, #0
10012112:	4638      	mov	r0, r7
10012114:	f7fe f902 	bl	1001031c <memset>
10012118:	9808      	ldr	r0, [sp, #32]
1001211a:	9700      	str	r7, [sp, #0]
1001211c:	465b      	mov	r3, fp
1001211e:	aa2b      	add	r2, sp, #172	@ 0xac
10012120:	4629      	mov	r1, r5
10012122:	f001 ffe1 	bl	100140e8 <_wcsrtombs_r>
10012126:	4583      	cmp	fp, r0
10012128:	f040 8519 	bne.w	10012b5e <_vfprintf_r+0x1c32>
1001212c:	2300      	movs	r3, #0
1001212e:	f805 300b 	strb.w	r3, [r5, fp]
10012132:	ea2b 71eb 	bic.w	r1, fp, fp, asr #31
10012136:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001213a:	960d      	str	r6, [sp, #52]	@ 0x34
1001213c:	9309      	str	r3, [sp, #36]	@ 0x24
1001213e:	9106      	str	r1, [sp, #24]
10012140:	9314      	str	r3, [sp, #80]	@ 0x50
10012142:	9310      	str	r3, [sp, #64]	@ 0x40
10012144:	9312      	str	r3, [sp, #72]	@ 0x48
10012146:	f7ff b923 	b.w	10011390 <_vfprintf_r+0x464>
1001214a:	4a0c      	ldr	r2, [pc, #48]	@ (1001217c <_vfprintf_r+0x1250>)
1001214c:	9215      	str	r2, [sp, #84]	@ 0x54
1001214e:	3301      	adds	r3, #1
10012150:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012152:	f8c8 2000 	str.w	r2, [r8]
10012156:	442c      	add	r4, r5
10012158:	2b07      	cmp	r3, #7
1001215a:	f8c8 5004 	str.w	r5, [r8, #4]
1001215e:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012162:	f77f a8b2 	ble.w	100112ca <_vfprintf_r+0x39e>
10012166:	f7ff bbfd 	b.w	10011964 <_vfprintf_r+0xa38>
1001216a:	bf00      	nop
1001216c:	1001709c 	.word	0x1001709c
10012170:	10017088 	.word	0x10017088
10012174:	100170b0 	.word	0x100170b0
10012178:	cccccccd 	.word	0xcccccccd
1001217c:	100170bc 	.word	0x100170bc
10012180:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
10012182:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012184:	681b      	ldr	r3, [r3, #0]
10012186:	601a      	str	r2, [r3, #0]
10012188:	f7ff baa8 	b.w	100116dc <_vfprintf_r+0x7b0>
1001218c:	f8dd 9024 	ldr.w	r9, [sp, #36]	@ 0x24
10012190:	9b15      	ldr	r3, [sp, #84]	@ 0x54
10012192:	603b      	str	r3, [r7, #0]
10012194:	3601      	adds	r6, #1
10012196:	4444      	add	r4, r8
10012198:	2e07      	cmp	r6, #7
1001219a:	e9cd 6433 	strd	r6, r4, [sp, #204]	@ 0xcc
1001219e:	f8c7 8004 	str.w	r8, [r7, #4]
100121a2:	f77f ac29 	ble.w	100119f8 <_vfprintf_r+0xacc>
100121a6:	e525      	b.n	10011bf4 <_vfprintf_r+0xcc8>
100121a8:	2e10      	cmp	r6, #16
100121aa:	9b33      	ldr	r3, [sp, #204]	@ 0xcc
100121ac:	f340 84ad 	ble.w	10012b0a <_vfprintf_r+0x1bde>
100121b0:	4898      	ldr	r0, [pc, #608]	@ (10012414 <_vfprintf_r+0x14e8>)
100121b2:	9015      	str	r0, [sp, #84]	@ 0x54
100121b4:	4642      	mov	r2, r8
100121b6:	4621      	mov	r1, r4
100121b8:	46a8      	mov	r8, r5
100121ba:	e9dd 4a07 	ldrd	r4, sl, [sp, #28]
100121be:	2710      	movs	r7, #16
100121c0:	4605      	mov	r5, r0
100121c2:	e004      	b.n	100121ce <_vfprintf_r+0x12a2>
100121c4:	3208      	adds	r2, #8
100121c6:	3e10      	subs	r6, #16
100121c8:	2e10      	cmp	r6, #16
100121ca:	f340 81ca 	ble.w	10012562 <_vfprintf_r+0x1636>
100121ce:	3301      	adds	r3, #1
100121d0:	3110      	adds	r1, #16
100121d2:	2b07      	cmp	r3, #7
100121d4:	e9c2 5700 	strd	r5, r7, [r2]
100121d8:	e9cd 3133 	strd	r3, r1, [sp, #204]	@ 0xcc
100121dc:	ddf2      	ble.n	100121c4 <_vfprintf_r+0x1298>
100121de:	aa32      	add	r2, sp, #200	@ 0xc8
100121e0:	4621      	mov	r1, r4
100121e2:	4650      	mov	r0, sl
100121e4:	f000 fd42 	bl	10012c6c <__sprint_r>
100121e8:	2800      	cmp	r0, #0
100121ea:	f47f af38 	bne.w	1001205e <_vfprintf_r+0x1132>
100121ee:	e9dd 3133 	ldrd	r3, r1, [sp, #204]	@ 0xcc
100121f2:	aa35      	add	r2, sp, #212	@ 0xd4
100121f4:	e7e7      	b.n	100121c6 <_vfprintf_r+0x129a>
100121f6:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
100121fa:	bf1c      	itt	ne
100121fc:	b2db      	uxtbne	r3, r3
100121fe:	4602      	movne	r2, r0
10012200:	e63b      	b.n	10011e7a <_vfprintf_r+0xf4e>
10012202:	f419 7200 	ands.w	r2, r9, #512	@ 0x200
10012206:	bf1c      	itt	ne
10012208:	b2db      	uxtbne	r3, r3
1001220a:	4602      	movne	r2, r0
1001220c:	f7ff b9f9 	b.w	10011602 <_vfprintf_r+0x6d6>
10012210:	9e09      	ldr	r6, [sp, #36]	@ 0x24
10012212:	2302      	movs	r3, #2
10012214:	e9cd 3600 	strd	r3, r6, [sp]
10012218:	ab30      	add	r3, sp, #192	@ 0xc0
1001221a:	9304      	str	r3, [sp, #16]
1001221c:	ab2b      	add	r3, sp, #172	@ 0xac
1001221e:	9303      	str	r3, [sp, #12]
10012220:	ab29      	add	r3, sp, #164	@ 0xa4
10012222:	9302      	str	r3, [sp, #8]
10012224:	9808      	ldr	r0, [sp, #32]
10012226:	e9dd 2324 	ldrd	r2, r3, [sp, #144]	@ 0x90
1001222a:	f002 f801 	bl	10014230 <_dtoa_r>
1001222e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012230:	2b67      	cmp	r3, #103	@ 0x67
10012232:	4605      	mov	r5, r0
10012234:	f000 8177 	beq.w	10012526 <_vfprintf_r+0x15fa>
10012238:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001223a:	2b47      	cmp	r3, #71	@ 0x47
1001223c:	f000 8173 	beq.w	10012526 <_vfprintf_r+0x15fa>
10012240:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012242:	f023 0720 	bic.w	r7, r3, #32
10012246:	2f46      	cmp	r7, #70	@ 0x46
10012248:	eb00 0406 	add.w	r4, r0, r6
1001224c:	d105      	bne.n	1001225a <_vfprintf_r+0x132e>
1001224e:	7803      	ldrb	r3, [r0, #0]
10012250:	2b30      	cmp	r3, #48	@ 0x30
10012252:	f000 83db 	beq.w	10012a0c <_vfprintf_r+0x1ae0>
10012256:	9e29      	ldr	r6, [sp, #164]	@ 0xa4
10012258:	4434      	add	r4, r6
1001225a:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
1001225e:	2200      	movs	r2, #0
10012260:	2300      	movs	r3, #0
10012262:	f004 fca3 	bl	10016bac <__aeabi_dcmpeq>
10012266:	2800      	cmp	r0, #0
10012268:	f000 81cc 	beq.w	10012604 <_vfprintf_r+0x16d8>
1001226c:	4623      	mov	r3, r4
1001226e:	1b5b      	subs	r3, r3, r5
10012270:	9313      	str	r3, [sp, #76]	@ 0x4c
10012272:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012274:	9212      	str	r2, [sp, #72]	@ 0x48
10012276:	2f47      	cmp	r7, #71	@ 0x47
10012278:	f000 815d 	beq.w	10012536 <_vfprintf_r+0x160a>
1001227c:	2f46      	cmp	r7, #70	@ 0x46
1001227e:	f000 82e3 	beq.w	10012848 <_vfprintf_r+0x191c>
10012282:	990e      	ldr	r1, [sp, #56]	@ 0x38
10012284:	1e53      	subs	r3, r2, #1
10012286:	2961      	cmp	r1, #97	@ 0x61
10012288:	9329      	str	r3, [sp, #164]	@ 0xa4
1001228a:	f000 8441 	beq.w	10012b10 <_vfprintf_r+0x1be4>
1001228e:	2941      	cmp	r1, #65	@ 0x41
10012290:	f040 815c 	bne.w	1001254c <_vfprintf_r+0x1620>
10012294:	2150      	movs	r1, #80	@ 0x50
10012296:	2001      	movs	r0, #1
10012298:	2b00      	cmp	r3, #0
1001229a:	bfb6      	itet	lt
1001229c:	f1c2 0301 	rsblt	r3, r2, #1
100122a0:	222b      	movge	r2, #43	@ 0x2b
100122a2:	222d      	movlt	r2, #45	@ 0x2d
100122a4:	2b09      	cmp	r3, #9
100122a6:	f88d 10b0 	strb.w	r1, [sp, #176]	@ 0xb0
100122aa:	f88d 20b1 	strb.w	r2, [sp, #177]	@ 0xb1
100122ae:	f340 8377 	ble.w	100129a0 <_vfprintf_r+0x1a74>
100122b2:	f10d 04c7 	add.w	r4, sp, #199	@ 0xc7
100122b6:	4e58      	ldr	r6, [pc, #352]	@ (10012418 <_vfprintf_r+0x14ec>)
100122b8:	4622      	mov	r2, r4
100122ba:	4610      	mov	r0, r2
100122bc:	fba6 1203 	umull	r1, r2, r6, r3
100122c0:	08d2      	lsrs	r2, r2, #3
100122c2:	eb02 0182 	add.w	r1, r2, r2, lsl #2
100122c6:	eba3 0141 	sub.w	r1, r3, r1, lsl #1
100122ca:	3130      	adds	r1, #48	@ 0x30
100122cc:	f800 1c01 	strb.w	r1, [r0, #-1]
100122d0:	4619      	mov	r1, r3
100122d2:	2963      	cmp	r1, #99	@ 0x63
100122d4:	4613      	mov	r3, r2
100122d6:	f100 32ff 	add.w	r2, r0, #4294967295	@ 0xffffffff
100122da:	dcee      	bgt.n	100122ba <_vfprintf_r+0x138e>
100122dc:	3330      	adds	r3, #48	@ 0x30
100122de:	f802 3c01 	strb.w	r3, [r2, #-1]
100122e2:	1e83      	subs	r3, r0, #2
100122e4:	42a3      	cmp	r3, r4
100122e6:	f080 840c 	bcs.w	10012b02 <_vfprintf_r+0x1bd6>
100122ea:	f10d 02b1 	add.w	r2, sp, #177	@ 0xb1
100122ee:	f813 1b01 	ldrb.w	r1, [r3], #1
100122f2:	f802 1f01 	strb.w	r1, [r2, #1]!
100122f6:	42a3      	cmp	r3, r4
100122f8:	d1f9      	bne.n	100122ee <_vfprintf_r+0x13c2>
100122fa:	ab5e      	add	r3, sp, #376	@ 0x178
100122fc:	1a18      	subs	r0, r3, r0
100122fe:	f1a0 03ad 	sub.w	r3, r0, #173	@ 0xad
10012302:	931c      	str	r3, [sp, #112]	@ 0x70
10012304:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012306:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10012308:	2b01      	cmp	r3, #1
1001230a:	eb03 0b02 	add.w	fp, r3, r2
1001230e:	f340 8378 	ble.w	10012a02 <_vfprintf_r+0x1ad6>
10012312:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012314:	449b      	add	fp, r3
10012316:	9b06      	ldr	r3, [sp, #24]
10012318:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
1001231c:	f443 7980 	orr.w	r9, r3, #256	@ 0x100
10012320:	ea2b 72eb 	bic.w	r2, fp, fp, asr #31
10012324:	2300      	movs	r3, #0
10012326:	9314      	str	r3, [sp, #80]	@ 0x50
10012328:	9206      	str	r2, [sp, #24]
1001232a:	9310      	str	r3, [sp, #64]	@ 0x40
1001232c:	9312      	str	r3, [sp, #72]	@ 0x48
1001232e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
10012330:	2b00      	cmp	r3, #0
10012332:	f040 810f 	bne.w	10012554 <_vfprintf_r+0x1628>
10012336:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001233a:	9309      	str	r3, [sp, #36]	@ 0x24
1001233c:	f7ff b828 	b.w	10011390 <_vfprintf_r+0x464>
10012340:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
10012342:	ebab 060a 	sub.w	r6, fp, sl
10012346:	1b5d      	subs	r5, r3, r5
10012348:	42ae      	cmp	r6, r5
1001234a:	bfa8      	it	ge
1001234c:	462e      	movge	r6, r5
1001234e:	e418      	b.n	10011b82 <_vfprintf_r+0xc56>
10012350:	f343 12c0 	sbfx	r2, r3, #7, #1
10012354:	4611      	mov	r1, r2
10012356:	b25b      	sxtb	r3, r3
10012358:	f7ff b8d0 	b.w	100114fc <_vfprintf_r+0x5d0>
1001235c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
1001235e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10012360:	681b      	ldr	r3, [r3, #0]
10012362:	801a      	strh	r2, [r3, #0]
10012364:	f7ff b9ba 	b.w	100116dc <_vfprintf_r+0x7b0>
10012368:	9907      	ldr	r1, [sp, #28]
1001236a:	aa32      	add	r2, sp, #200	@ 0xc8
1001236c:	4658      	mov	r0, fp
1001236e:	f000 fc7d 	bl	10012c6c <__sprint_r>
10012372:	2800      	cmp	r0, #0
10012374:	f43e af22 	beq.w	100111bc <_vfprintf_r+0x290>
10012378:	f7fe bf36 	b.w	100111e8 <_vfprintf_r+0x2bc>
1001237c:	4628      	mov	r0, r5
1001237e:	960d      	str	r6, [sp, #52]	@ 0x34
10012380:	f7fe f9fe 	bl	10010780 <strlen>
10012384:	4683      	mov	fp, r0
10012386:	f7ff b89c 	b.w	100114c2 <_vfprintf_r+0x596>
1001238a:	2358      	movs	r3, #88	@ 0x58
1001238c:	f88d 30a1 	strb.w	r3, [sp, #161]	@ 0xa1
10012390:	2330      	movs	r3, #48	@ 0x30
10012392:	f88d 30a0 	strb.w	r3, [sp, #160]	@ 0xa0
10012396:	f049 0302 	orr.w	r3, r9, #2
1001239a:	9306      	str	r3, [sp, #24]
1001239c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001239e:	2b63      	cmp	r3, #99	@ 0x63
100123a0:	f300 82f6 	bgt.w	10012990 <_vfprintf_r+0x1a64>
100123a4:	2300      	movs	r3, #0
100123a6:	930c      	str	r3, [sp, #48]	@ 0x30
100123a8:	ad45      	add	r5, sp, #276	@ 0x114
100123aa:	f449 7381 	orr.w	r3, r9, #258	@ 0x102
100123ae:	9315      	str	r3, [sp, #84]	@ 0x54
100123b0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
100123b2:	2b00      	cmp	r3, #0
100123b4:	f2c0 8200 	blt.w	100127b8 <_vfprintf_r+0x188c>
100123b8:	2300      	movs	r3, #0
100123ba:	931f      	str	r3, [sp, #124]	@ 0x7c
100123bc:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
100123c0:	e9cd 3424 	strd	r3, r4, [sp, #144]	@ 0x90
100123c4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100123c6:	2b61      	cmp	r3, #97	@ 0x61
100123c8:	f47f ad1a 	bne.w	10011e00 <_vfprintf_r+0xed4>
100123cc:	aa29      	add	r2, sp, #164	@ 0xa4
100123ce:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100123d2:	f002 ff75 	bl	100152c0 <frexp>
100123d6:	2200      	movs	r2, #0
100123d8:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
100123dc:	f004 f97e 	bl	100166dc <__aeabi_dmul>
100123e0:	4602      	mov	r2, r0
100123e2:	460b      	mov	r3, r1
100123e4:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
100123e8:	2200      	movs	r2, #0
100123ea:	2300      	movs	r3, #0
100123ec:	f004 fbde 	bl	10016bac <__aeabi_dcmpeq>
100123f0:	2800      	cmp	r0, #0
100123f2:	f040 82f8 	bne.w	100129e6 <_vfprintf_r+0x1aba>
100123f6:	4b09      	ldr	r3, [pc, #36]	@ (1001241c <_vfprintf_r+0x14f0>)
100123f8:	9312      	str	r3, [sp, #72]	@ 0x48
100123fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100123fc:	f8cd 804c 	str.w	r8, [sp, #76]	@ 0x4c
10012400:	f103 39ff 	add.w	r9, r3, #4294967295	@ 0xffffffff
10012404:	462e      	mov	r6, r5
10012406:	9514      	str	r5, [sp, #80]	@ 0x50
10012408:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001240c:	464d      	mov	r5, r9
1001240e:	e9dd 8910 	ldrd	r8, r9, [sp, #64]	@ 0x40
10012412:	e00b      	b.n	1001242c <_vfprintf_r+0x1500>
10012414:	100170bc 	.word	0x100170bc
10012418:	cccccccd 	.word	0xcccccccd
1001241c:	10017088 	.word	0x10017088
10012420:	2200      	movs	r2, #0
10012422:	2300      	movs	r3, #0
10012424:	f004 fbc2 	bl	10016bac <__aeabi_dcmpeq>
10012428:	b9f0      	cbnz	r0, 10012468 <_vfprintf_r+0x153c>
1001242a:	463d      	mov	r5, r7
1001242c:	4ba9      	ldr	r3, [pc, #676]	@ (100126d4 <_vfprintf_r+0x17a8>)
1001242e:	2200      	movs	r2, #0
10012430:	4640      	mov	r0, r8
10012432:	4649      	mov	r1, r9
10012434:	f004 f952 	bl	100166dc <__aeabi_dmul>
10012438:	4689      	mov	r9, r1
1001243a:	4680      	mov	r8, r0
1001243c:	f004 fbfe 	bl	10016c3c <__aeabi_d2iz>
10012440:	4604      	mov	r4, r0
10012442:	f004 f8e1 	bl	10016608 <__aeabi_i2d>
10012446:	4602      	mov	r2, r0
10012448:	460b      	mov	r3, r1
1001244a:	4640      	mov	r0, r8
1001244c:	4649      	mov	r1, r9
1001244e:	f003 ff8d 	bl	1001636c <__aeabi_dsub>
10012452:	f81b 3004 	ldrb.w	r3, [fp, r4]
10012456:	1c6a      	adds	r2, r5, #1
10012458:	46b2      	mov	sl, r6
1001245a:	f105 37ff 	add.w	r7, r5, #4294967295	@ 0xffffffff
1001245e:	f806 3b01 	strb.w	r3, [r6], #1
10012462:	4680      	mov	r8, r0
10012464:	4689      	mov	r9, r1
10012466:	d1db      	bne.n	10012420 <_vfprintf_r+0x14f4>
10012468:	46cb      	mov	fp, r9
1001246a:	4657      	mov	r7, sl
1001246c:	46c2      	mov	sl, r8
1001246e:	4b9a      	ldr	r3, [pc, #616]	@ (100126d8 <_vfprintf_r+0x17ac>)
10012470:	f8dd 804c 	ldr.w	r8, [sp, #76]	@ 0x4c
10012474:	2200      	movs	r2, #0
10012476:	4650      	mov	r0, sl
10012478:	4659      	mov	r1, fp
1001247a:	46a9      	mov	r9, r5
1001247c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
1001247e:	f004 fbbd 	bl	10016bfc <__aeabi_dcmpgt>
10012482:	2800      	cmp	r0, #0
10012484:	f040 8264 	bne.w	10012950 <_vfprintf_r+0x1a24>
10012488:	4b93      	ldr	r3, [pc, #588]	@ (100126d8 <_vfprintf_r+0x17ac>)
1001248a:	4650      	mov	r0, sl
1001248c:	4659      	mov	r1, fp
1001248e:	2200      	movs	r2, #0
10012490:	f004 fb8c 	bl	10016bac <__aeabi_dcmpeq>
10012494:	b110      	cbz	r0, 1001249c <_vfprintf_r+0x1570>
10012496:	07e3      	lsls	r3, r4, #31
10012498:	f100 825a 	bmi.w	10012950 <_vfprintf_r+0x1a24>
1001249c:	f1b9 0f00 	cmp.w	r9, #0
100124a0:	f2c0 8270 	blt.w	10012984 <_vfprintf_r+0x1a58>
100124a4:	f109 0301 	add.w	r3, r9, #1
100124a8:	4433      	add	r3, r6
100124aa:	2230      	movs	r2, #48	@ 0x30
100124ac:	f806 2b01 	strb.w	r2, [r6], #1
100124b0:	42b3      	cmp	r3, r6
100124b2:	d1fb      	bne.n	100124ac <_vfprintf_r+0x1580>
100124b4:	1b5b      	subs	r3, r3, r5
100124b6:	9313      	str	r3, [sp, #76]	@ 0x4c
100124b8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100124ba:	f023 0720 	bic.w	r7, r3, #32
100124be:	e6d8      	b.n	10012272 <_vfprintf_r+0x1346>
100124c0:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100124c4:	aa32      	add	r2, sp, #200	@ 0xc8
100124c6:	f000 fbd1 	bl	10012c6c <__sprint_r>
100124ca:	2800      	cmp	r0, #0
100124cc:	f47f aa2a 	bne.w	10011924 <_vfprintf_r+0x9f8>
100124d0:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100124d4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100124d6:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100124da:	f7ff ba34 	b.w	10011946 <_vfprintf_r+0xa1a>
100124de:	6d88      	ldr	r0, [r1, #88]	@ 0x58
100124e0:	f7fd ffb0 	bl	10010444 <__retarget_lock_release_recursive>
100124e4:	f7fe be3c 	b.w	10011160 <_vfprintf_r+0x234>
100124e8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100124ea:	1c5e      	adds	r6, r3, #1
100124ec:	2302      	movs	r3, #2
100124ee:	e691      	b.n	10012214 <_vfprintf_r+0x12e8>
100124f0:	9e09      	ldr	r6, [sp, #36]	@ 0x24
100124f2:	2303      	movs	r3, #3
100124f4:	e68e      	b.n	10012214 <_vfprintf_r+0x12e8>
100124f6:	aa29      	add	r2, sp, #164	@ 0xa4
100124f8:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
100124fc:	f002 fee0 	bl	100152c0 <frexp>
10012500:	2200      	movs	r2, #0
10012502:	f04f 537f 	mov.w	r3, #1069547520	@ 0x3fc00000
10012506:	f004 f8e9 	bl	100166dc <__aeabi_dmul>
1001250a:	4602      	mov	r2, r0
1001250c:	460b      	mov	r3, r1
1001250e:	e9cd 2310 	strd	r2, r3, [sp, #64]	@ 0x40
10012512:	2200      	movs	r2, #0
10012514:	2300      	movs	r3, #0
10012516:	f004 fb49 	bl	10016bac <__aeabi_dcmpeq>
1001251a:	2800      	cmp	r0, #0
1001251c:	f040 8263 	bne.w	100129e6 <_vfprintf_r+0x1aba>
10012520:	4b6e      	ldr	r3, [pc, #440]	@ (100126dc <_vfprintf_r+0x17b0>)
10012522:	9312      	str	r3, [sp, #72]	@ 0x48
10012524:	e769      	b.n	100123fa <_vfprintf_r+0x14ce>
10012526:	9b06      	ldr	r3, [sp, #24]
10012528:	07df      	lsls	r7, r3, #31
1001252a:	f100 81e4 	bmi.w	100128f6 <_vfprintf_r+0x19ca>
1001252e:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012530:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
10012532:	1b5b      	subs	r3, r3, r5
10012534:	9313      	str	r3, [sp, #76]	@ 0x4c
10012536:	1cd3      	adds	r3, r2, #3
10012538:	9212      	str	r2, [sp, #72]	@ 0x48
1001253a:	db02      	blt.n	10012542 <_vfprintf_r+0x1616>
1001253c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001253e:	4293      	cmp	r3, r2
10012540:	da44      	bge.n	100125cc <_vfprintf_r+0x16a0>
10012542:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10012544:	3b02      	subs	r3, #2
10012546:	930e      	str	r3, [sp, #56]	@ 0x38
10012548:	1e53      	subs	r3, r2, #1
1001254a:	9329      	str	r3, [sp, #164]	@ 0xa4
1001254c:	f89d 1038 	ldrb.w	r1, [sp, #56]	@ 0x38
10012550:	2000      	movs	r0, #0
10012552:	e6a1      	b.n	10012298 <_vfprintf_r+0x136c>
10012554:	222d      	movs	r2, #45	@ 0x2d
10012556:	2300      	movs	r3, #0
10012558:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001255c:	9309      	str	r3, [sp, #36]	@ 0x24
1001255e:	f7fe bf1a 	b.w	10011396 <_vfprintf_r+0x46a>
10012562:	4645      	mov	r5, r8
10012564:	460c      	mov	r4, r1
10012566:	4690      	mov	r8, r2
10012568:	3301      	adds	r3, #1
1001256a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
1001256c:	f8c8 2000 	str.w	r2, [r8]
10012570:	4434      	add	r4, r6
10012572:	2b07      	cmp	r3, #7
10012574:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
10012578:	f8c8 6004 	str.w	r6, [r8, #4]
1001257c:	f300 8226 	bgt.w	100129cc <_vfprintf_r+0x1aa0>
10012580:	f108 0808 	add.w	r8, r8, #8
10012584:	f7ff bac9 	b.w	10011b1a <_vfprintf_r+0xbee>
10012588:	222d      	movs	r2, #45	@ 0x2d
1001258a:	f88d 209f 	strb.w	r2, [sp, #159]	@ 0x9f
1001258e:	f7fe beee 	b.w	1001136e <_vfprintf_r+0x442>
10012592:	2300      	movs	r3, #0
10012594:	9808      	ldr	r0, [sp, #32]
10012596:	9700      	str	r7, [sp, #0]
10012598:	aa2b      	add	r2, sp, #172	@ 0xac
1001259a:	4619      	mov	r1, r3
1001259c:	f001 fda4 	bl	100140e8 <_wcsrtombs_r>
100125a0:	f1b0 3fff 	cmp.w	r0, #4294967295	@ 0xffffffff
100125a4:	4683      	mov	fp, r0
100125a6:	f000 8209 	beq.w	100129bc <_vfprintf_r+0x1a90>
100125aa:	952b      	str	r5, [sp, #172]	@ 0xac
100125ac:	e59d      	b.n	100120ea <_vfprintf_r+0x11be>
100125ae:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
100125b0:	991d      	ldr	r1, [sp, #116]	@ 0x74
100125b2:	1aed      	subs	r5, r5, r3
100125b4:	461a      	mov	r2, r3
100125b6:	4628      	mov	r0, r5
100125b8:	f003 f85c 	bl	10015674 <strncpy>
100125bc:	f898 3001 	ldrb.w	r3, [r8, #1]
100125c0:	b10b      	cbz	r3, 100125c6 <_vfprintf_r+0x169a>
100125c2:	f108 0801 	add.w	r8, r8, #1
100125c6:	f04f 0c00 	mov.w	ip, #0
100125ca:	e4f7      	b.n	10011fbc <_vfprintf_r+0x1090>
100125cc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100125ce:	4293      	cmp	r3, r2
100125d0:	f300 8194 	bgt.w	100128fc <_vfprintf_r+0x19d0>
100125d4:	9b06      	ldr	r3, [sp, #24]
100125d6:	07dc      	lsls	r4, r3, #31
100125d8:	f140 824a 	bpl.w	10012a70 <_vfprintf_r+0x1b44>
100125dc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100125de:	eb02 0b03 	add.w	fp, r2, r3
100125e2:	9b06      	ldr	r3, [sp, #24]
100125e4:	0558      	lsls	r0, r3, #21
100125e6:	d502      	bpl.n	100125ee <_vfprintf_r+0x16c2>
100125e8:	2a00      	cmp	r2, #0
100125ea:	f300 824a 	bgt.w	10012a82 <_vfprintf_r+0x1b56>
100125ee:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
100125f2:	9306      	str	r3, [sp, #24]
100125f4:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
100125f8:	2367      	movs	r3, #103	@ 0x67
100125fa:	930e      	str	r3, [sp, #56]	@ 0x38
100125fc:	2300      	movs	r3, #0
100125fe:	9314      	str	r3, [sp, #80]	@ 0x50
10012600:	9310      	str	r3, [sp, #64]	@ 0x40
10012602:	e694      	b.n	1001232e <_vfprintf_r+0x1402>
10012604:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012606:	42a3      	cmp	r3, r4
10012608:	f4bf ae31 	bcs.w	1001226e <_vfprintf_r+0x1342>
1001260c:	2130      	movs	r1, #48	@ 0x30
1001260e:	1c5a      	adds	r2, r3, #1
10012610:	9230      	str	r2, [sp, #192]	@ 0xc0
10012612:	7019      	strb	r1, [r3, #0]
10012614:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012616:	429c      	cmp	r4, r3
10012618:	d8f9      	bhi.n	1001260e <_vfprintf_r+0x16e2>
1001261a:	e628      	b.n	1001226e <_vfprintf_r+0x1342>
1001261c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001261e:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10012622:	f8cd 9038 	str.w	r9, [sp, #56]	@ 0x38
10012626:	4642      	mov	r2, r8
10012628:	4621      	mov	r1, r4
1001262a:	4f2d      	ldr	r7, [pc, #180]	@ (100126e0 <_vfprintf_r+0x17b4>)
1001262c:	f8dd 9050 	ldr.w	r9, [sp, #80]	@ 0x50
10012630:	f8dd 8078 	ldr.w	r8, [sp, #120]	@ 0x78
10012634:	f8dd b020 	ldr.w	fp, [sp, #32]
10012638:	4654      	mov	r4, sl
1001263a:	f8dd a06c 	ldr.w	sl, [sp, #108]	@ 0x6c
1001263e:	b37b      	cbz	r3, 100126a0 <_vfprintf_r+0x1774>
10012640:	f1b9 0f00 	cmp.w	r9, #0
10012644:	f000 8085 	beq.w	10012752 <_vfprintf_r+0x1826>
10012648:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
1001264c:	9833      	ldr	r0, [sp, #204]	@ 0xcc
1001264e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10012650:	3001      	adds	r0, #1
10012652:	4441      	add	r1, r8
10012654:	2807      	cmp	r0, #7
10012656:	e9c2 3800 	strd	r3, r8, [r2]
1001265a:	9134      	str	r1, [sp, #208]	@ 0xd0
1001265c:	9033      	str	r0, [sp, #204]	@ 0xcc
1001265e:	dc6d      	bgt.n	1001273c <_vfprintf_r+0x1810>
10012660:	3208      	adds	r2, #8
10012662:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012664:	f89a 0000 	ldrb.w	r0, [sl]
10012668:	1b1e      	subs	r6, r3, r4
1001266a:	4286      	cmp	r6, r0
1001266c:	bfa8      	it	ge
1001266e:	4606      	movge	r6, r0
10012670:	2e00      	cmp	r6, #0
10012672:	dd0b      	ble.n	1001268c <_vfprintf_r+0x1760>
10012674:	9833      	ldr	r0, [sp, #204]	@ 0xcc
10012676:	3001      	adds	r0, #1
10012678:	4431      	add	r1, r6
1001267a:	2807      	cmp	r0, #7
1001267c:	e9c2 4600 	strd	r4, r6, [r2]
10012680:	9134      	str	r1, [sp, #208]	@ 0xd0
10012682:	9033      	str	r0, [sp, #204]	@ 0xcc
10012684:	dc6b      	bgt.n	1001275e <_vfprintf_r+0x1832>
10012686:	f89a 0000 	ldrb.w	r0, [sl]
1001268a:	3208      	adds	r2, #8
1001268c:	2e00      	cmp	r6, #0
1001268e:	bfac      	ite	ge
10012690:	1b85      	subge	r5, r0, r6
10012692:	4605      	movlt	r5, r0
10012694:	2d00      	cmp	r5, #0
10012696:	dc14      	bgt.n	100126c2 <_vfprintf_r+0x1796>
10012698:	4404      	add	r4, r0
1001269a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
1001269c:	2b00      	cmp	r3, #0
1001269e:	d1cf      	bne.n	10012640 <_vfprintf_r+0x1714>
100126a0:	f1b9 0f00 	cmp.w	r9, #0
100126a4:	d1d0      	bne.n	10012648 <_vfprintf_r+0x171c>
100126a6:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
100126aa:	f8cd a06c 	str.w	sl, [sp, #108]	@ 0x6c
100126ae:	46a2      	mov	sl, r4
100126b0:	45da      	cmp	sl, fp
100126b2:	f8dd 9038 	ldr.w	r9, [sp, #56]	@ 0x38
100126b6:	4690      	mov	r8, r2
100126b8:	460c      	mov	r4, r1
100126ba:	bf28      	it	cs
100126bc:	46da      	movcs	sl, fp
100126be:	f7ff ba33 	b.w	10011b28 <_vfprintf_r+0xbfc>
100126c2:	2d10      	cmp	r5, #16
100126c4:	9833      	ldr	r0, [sp, #204]	@ 0xcc
100126c6:	f340 821a 	ble.w	10012afe <_vfprintf_r+0x1bd2>
100126ca:	4623      	mov	r3, r4
100126cc:	463e      	mov	r6, r7
100126ce:	462c      	mov	r4, r5
100126d0:	461d      	mov	r5, r3
100126d2:	e00c      	b.n	100126ee <_vfprintf_r+0x17c2>
100126d4:	40300000 	.word	0x40300000
100126d8:	3fe00000 	.word	0x3fe00000
100126dc:	1001709c 	.word	0x1001709c
100126e0:	100170bc 	.word	0x100170bc
100126e4:	3c10      	subs	r4, #16
100126e6:	2c10      	cmp	r4, #16
100126e8:	f102 0208 	add.w	r2, r2, #8
100126ec:	dd16      	ble.n	1001271c <_vfprintf_r+0x17f0>
100126ee:	3001      	adds	r0, #1
100126f0:	3110      	adds	r1, #16
100126f2:	2310      	movs	r3, #16
100126f4:	2807      	cmp	r0, #7
100126f6:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
100126fa:	6017      	str	r7, [r2, #0]
100126fc:	6053      	str	r3, [r2, #4]
100126fe:	ddf1      	ble.n	100126e4 <_vfprintf_r+0x17b8>
10012700:	9907      	ldr	r1, [sp, #28]
10012702:	aa32      	add	r2, sp, #200	@ 0xc8
10012704:	4658      	mov	r0, fp
10012706:	f000 fab1 	bl	10012c6c <__sprint_r>
1001270a:	2800      	cmp	r0, #0
1001270c:	f47e ad66 	bne.w	100111dc <_vfprintf_r+0x2b0>
10012710:	3c10      	subs	r4, #16
10012712:	2c10      	cmp	r4, #16
10012714:	e9dd 0133 	ldrd	r0, r1, [sp, #204]	@ 0xcc
10012718:	aa35      	add	r2, sp, #212	@ 0xd4
1001271a:	dce8      	bgt.n	100126ee <_vfprintf_r+0x17c2>
1001271c:	462b      	mov	r3, r5
1001271e:	4625      	mov	r5, r4
10012720:	461c      	mov	r4, r3
10012722:	3001      	adds	r0, #1
10012724:	4429      	add	r1, r5
10012726:	2807      	cmp	r0, #7
10012728:	e9cd 0133 	strd	r0, r1, [sp, #204]	@ 0xcc
1001272c:	6016      	str	r6, [r2, #0]
1001272e:	6055      	str	r5, [r2, #4]
10012730:	dc4b      	bgt.n	100127ca <_vfprintf_r+0x189e>
10012732:	f89a 0000 	ldrb.w	r0, [sl]
10012736:	3208      	adds	r2, #8
10012738:	4404      	add	r4, r0
1001273a:	e7ae      	b.n	1001269a <_vfprintf_r+0x176e>
1001273c:	9907      	ldr	r1, [sp, #28]
1001273e:	aa32      	add	r2, sp, #200	@ 0xc8
10012740:	4658      	mov	r0, fp
10012742:	f000 fa93 	bl	10012c6c <__sprint_r>
10012746:	2800      	cmp	r0, #0
10012748:	f47e ad48 	bne.w	100111dc <_vfprintf_r+0x2b0>
1001274c:	9934      	ldr	r1, [sp, #208]	@ 0xd0
1001274e:	aa35      	add	r2, sp, #212	@ 0xd4
10012750:	e787      	b.n	10012662 <_vfprintf_r+0x1736>
10012752:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10012754:	3b01      	subs	r3, #1
10012756:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
1001275a:	9310      	str	r3, [sp, #64]	@ 0x40
1001275c:	e776      	b.n	1001264c <_vfprintf_r+0x1720>
1001275e:	9907      	ldr	r1, [sp, #28]
10012760:	aa32      	add	r2, sp, #200	@ 0xc8
10012762:	4658      	mov	r0, fp
10012764:	f000 fa82 	bl	10012c6c <__sprint_r>
10012768:	2800      	cmp	r0, #0
1001276a:	f47e ad37 	bne.w	100111dc <_vfprintf_r+0x2b0>
1001276e:	f89a 0000 	ldrb.w	r0, [sl]
10012772:	9934      	ldr	r1, [sp, #208]	@ 0xd0
10012774:	aa35      	add	r2, sp, #212	@ 0xd4
10012776:	e789      	b.n	1001268c <_vfprintf_r+0x1760>
10012778:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
1001277c:	960d      	str	r6, [sp, #52]	@ 0x34
1001277e:	f8cd b018 	str.w	fp, [sp, #24]
10012782:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10012786:	f8cd b050 	str.w	fp, [sp, #80]	@ 0x50
1001278a:	f8cd b040 	str.w	fp, [sp, #64]	@ 0x40
1001278e:	f8cd b048 	str.w	fp, [sp, #72]	@ 0x48
10012792:	f8cd b030 	str.w	fp, [sp, #48]	@ 0x30
10012796:	f7fe bdfb 	b.w	10011390 <_vfprintf_r+0x464>
1001279a:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001279e:	aa32      	add	r2, sp, #200	@ 0xc8
100127a0:	f000 fa64 	bl	10012c6c <__sprint_r>
100127a4:	2800      	cmp	r0, #0
100127a6:	f47f a8bd 	bne.w	10011924 <_vfprintf_r+0x9f8>
100127aa:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
100127ac:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100127ae:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100127b2:	f7ff baa3 	b.w	10011cfc <_vfprintf_r+0xdd0>
100127b6:	930c      	str	r3, [sp, #48]	@ 0x30
100127b8:	e9dd 3416 	ldrd	r3, r4, [sp, #88]	@ 0x58
100127bc:	9324      	str	r3, [sp, #144]	@ 0x90
100127be:	f104 4300 	add.w	r3, r4, #2147483648	@ 0x80000000
100127c2:	9325      	str	r3, [sp, #148]	@ 0x94
100127c4:	232d      	movs	r3, #45	@ 0x2d
100127c6:	931f      	str	r3, [sp, #124]	@ 0x7c
100127c8:	e5fc      	b.n	100123c4 <_vfprintf_r+0x1498>
100127ca:	9907      	ldr	r1, [sp, #28]
100127cc:	aa32      	add	r2, sp, #200	@ 0xc8
100127ce:	4658      	mov	r0, fp
100127d0:	f000 fa4c 	bl	10012c6c <__sprint_r>
100127d4:	2800      	cmp	r0, #0
100127d6:	f47e ad01 	bne.w	100111dc <_vfprintf_r+0x2b0>
100127da:	f89a 0000 	ldrb.w	r0, [sl]
100127de:	9934      	ldr	r1, [sp, #208]	@ 0xd0
100127e0:	aa35      	add	r2, sp, #212	@ 0xd4
100127e2:	4404      	add	r4, r0
100127e4:	e759      	b.n	1001269a <_vfprintf_r+0x176e>
100127e6:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100127ea:	aa32      	add	r2, sp, #200	@ 0xc8
100127ec:	f000 fa3e 	bl	10012c6c <__sprint_r>
100127f0:	2800      	cmp	r0, #0
100127f2:	f47f a897 	bne.w	10011924 <_vfprintf_r+0x9f8>
100127f6:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100127f8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100127fc:	f7ff b986 	b.w	10011b0c <_vfprintf_r+0xbe0>
10012800:	2378      	movs	r3, #120	@ 0x78
10012802:	e5c3      	b.n	1001238c <_vfprintf_r+0x1460>
10012804:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012808:	aa32      	add	r2, sp, #200	@ 0xc8
1001280a:	f000 fa2f 	bl	10012c6c <__sprint_r>
1001280e:	2800      	cmp	r0, #0
10012810:	f47f a888 	bne.w	10011924 <_vfprintf_r+0x9f8>
10012814:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
10012816:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
10012818:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001281c:	f7ff b99a 	b.w	10011b54 <_vfprintf_r+0xc28>
10012820:	49ab      	ldr	r1, [pc, #684]	@ (10012ad0 <_vfprintf_r+0x1ba4>)
10012822:	9115      	str	r1, [sp, #84]	@ 0x54
10012824:	f7fe bdeb 	b.w	100113fe <_vfprintf_r+0x4d2>
10012828:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
1001282c:	aa32      	add	r2, sp, #200	@ 0xc8
1001282e:	f000 fa1d 	bl	10012c6c <__sprint_r>
10012832:	2800      	cmp	r0, #0
10012834:	f47f a876 	bne.w	10011924 <_vfprintf_r+0x9f8>
10012838:	9d29      	ldr	r5, [sp, #164]	@ 0xa4
1001283a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
1001283c:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
1001283e:	1b5d      	subs	r5, r3, r5
10012840:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
10012844:	f7ff b99d 	b.w	10011b82 <_vfprintf_r+0xc56>
10012848:	9b06      	ldr	r3, [sp, #24]
1001284a:	9912      	ldr	r1, [sp, #72]	@ 0x48
1001284c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
1001284e:	f003 0301 	and.w	r3, r3, #1
10012852:	2900      	cmp	r1, #0
10012854:	ea43 0302 	orr.w	r3, r3, r2
10012858:	f340 815d 	ble.w	10012b16 <_vfprintf_r+0x1bea>
1001285c:	2b00      	cmp	r3, #0
1001285e:	f040 8109 	bne.w	10012a74 <_vfprintf_r+0x1b48>
10012862:	2366      	movs	r3, #102	@ 0x66
10012864:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
10012868:	930e      	str	r3, [sp, #56]	@ 0x38
1001286a:	9b06      	ldr	r3, [sp, #24]
1001286c:	055a      	lsls	r2, r3, #21
1001286e:	f100 810a 	bmi.w	10012a86 <_vfprintf_r+0x1b5a>
10012872:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012876:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
1001287a:	9306      	str	r3, [sp, #24]
1001287c:	e6be      	b.n	100125fc <_vfprintf_r+0x16d0>
1001287e:	2200      	movs	r2, #0
10012880:	9209      	str	r2, [sp, #36]	@ 0x24
10012882:	f7fe bbcc 	b.w	1001101e <_vfprintf_r+0xf2>
10012886:	9b07      	ldr	r3, [sp, #28]
10012888:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
1001288a:	07df      	lsls	r7, r3, #31
1001288c:	d407      	bmi.n	1001289e <_vfprintf_r+0x1972>
1001288e:	9b07      	ldr	r3, [sp, #28]
10012890:	899b      	ldrh	r3, [r3, #12]
10012892:	059e      	lsls	r6, r3, #22
10012894:	d403      	bmi.n	1001289e <_vfprintf_r+0x1972>
10012896:	9b07      	ldr	r3, [sp, #28]
10012898:	6d98      	ldr	r0, [r3, #88]	@ 0x58
1001289a:	f7fd fdd3 	bl	10010444 <__retarget_lock_release_recursive>
1001289e:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100128a2:	930a      	str	r3, [sp, #40]	@ 0x28
100128a4:	f7fe bcab 	b.w	100111fe <_vfprintf_r+0x2d2>
100128a8:	4256      	negs	r6, r2
100128aa:	3210      	adds	r2, #16
100128ac:	4a89      	ldr	r2, [pc, #548]	@ (10012ad4 <_vfprintf_r+0x1ba8>)
100128ae:	9215      	str	r2, [sp, #84]	@ 0x54
100128b0:	da34      	bge.n	1001291c <_vfprintf_r+0x19f0>
100128b2:	46aa      	mov	sl, r5
100128b4:	2710      	movs	r7, #16
100128b6:	4615      	mov	r5, r2
100128b8:	e004      	b.n	100128c4 <_vfprintf_r+0x1998>
100128ba:	f108 0808 	add.w	r8, r8, #8
100128be:	3e10      	subs	r6, #16
100128c0:	2e10      	cmp	r6, #16
100128c2:	dd2a      	ble.n	1001291a <_vfprintf_r+0x19ee>
100128c4:	3301      	adds	r3, #1
100128c6:	3410      	adds	r4, #16
100128c8:	2b07      	cmp	r3, #7
100128ca:	e9c8 5700 	strd	r5, r7, [r8]
100128ce:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
100128d2:	ddf2      	ble.n	100128ba <_vfprintf_r+0x198e>
100128d4:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100128d8:	aa32      	add	r2, sp, #200	@ 0xc8
100128da:	f000 f9c7 	bl	10012c6c <__sprint_r>
100128de:	2800      	cmp	r0, #0
100128e0:	f47f a820 	bne.w	10011924 <_vfprintf_r+0x9f8>
100128e4:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
100128e8:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100128ec:	e7e7      	b.n	100128be <_vfprintf_r+0x1992>
100128ee:	2300      	movs	r3, #0
100128f0:	930c      	str	r3, [sp, #48]	@ 0x30
100128f2:	ad45      	add	r5, sp, #276	@ 0x114
100128f4:	e40b      	b.n	1001210e <_vfprintf_r+0x11e2>
100128f6:	19ac      	adds	r4, r5, r6
100128f8:	2747      	movs	r7, #71	@ 0x47
100128fa:	e4ae      	b.n	1001225a <_vfprintf_r+0x132e>
100128fc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
100128fe:	9a18      	ldr	r2, [sp, #96]	@ 0x60
10012900:	eb03 0b02 	add.w	fp, r3, r2
10012904:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10012906:	2b00      	cmp	r3, #0
10012908:	f340 80ee 	ble.w	10012ae8 <_vfprintf_r+0x1bbc>
1001290c:	2367      	movs	r3, #103	@ 0x67
1001290e:	930e      	str	r3, [sp, #56]	@ 0x38
10012910:	e7ab      	b.n	1001286a <_vfprintf_r+0x193e>
10012912:	4a6f      	ldr	r2, [pc, #444]	@ (10012ad0 <_vfprintf_r+0x1ba4>)
10012914:	9215      	str	r2, [sp, #84]	@ 0x54
10012916:	f7ff b8cc 	b.w	10011ab2 <_vfprintf_r+0xb86>
1001291a:	4655      	mov	r5, sl
1001291c:	3301      	adds	r3, #1
1001291e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10012920:	f8c8 2000 	str.w	r2, [r8]
10012924:	4434      	add	r4, r6
10012926:	2b07      	cmp	r3, #7
10012928:	e9cd 3433 	strd	r3, r4, [sp, #204]	@ 0xcc
1001292c:	f8c8 6004 	str.w	r6, [r8, #4]
10012930:	f77f a9f9 	ble.w	10011d26 <_vfprintf_r+0xdfa>
10012934:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
10012938:	aa32      	add	r2, sp, #200	@ 0xc8
1001293a:	f000 f997 	bl	10012c6c <__sprint_r>
1001293e:	2800      	cmp	r0, #0
10012940:	f47e aff0 	bne.w	10011924 <_vfprintf_r+0x9f8>
10012944:	e9dd 3433 	ldrd	r3, r4, [sp, #204]	@ 0xcc
10012948:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
1001294c:	f7fe bffe 	b.w	1001194c <_vfprintf_r+0xa20>
10012950:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10012952:	9730      	str	r7, [sp, #192]	@ 0xc0
10012954:	7bd9      	ldrb	r1, [r3, #15]
10012956:	f816 2c01 	ldrb.w	r2, [r6, #-1]
1001295a:	428a      	cmp	r2, r1
1001295c:	4633      	mov	r3, r6
1001295e:	d109      	bne.n	10012974 <_vfprintf_r+0x1a48>
10012960:	2030      	movs	r0, #48	@ 0x30
10012962:	f803 0c01 	strb.w	r0, [r3, #-1]
10012966:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
10012968:	1e5a      	subs	r2, r3, #1
1001296a:	9230      	str	r2, [sp, #192]	@ 0xc0
1001296c:	f813 2c01 	ldrb.w	r2, [r3, #-1]
10012970:	4291      	cmp	r1, r2
10012972:	d0f6      	beq.n	10012962 <_vfprintf_r+0x1a36>
10012974:	2a39      	cmp	r2, #57	@ 0x39
10012976:	bf0b      	itete	eq
10012978:	9a12      	ldreq	r2, [sp, #72]	@ 0x48
1001297a:	3201      	addne	r2, #1
1001297c:	7a92      	ldrbeq	r2, [r2, #10]
1001297e:	b2d2      	uxtbne	r2, r2
10012980:	f803 2c01 	strb.w	r2, [r3, #-1]
10012984:	4633      	mov	r3, r6
10012986:	e595      	b.n	100124b4 <_vfprintf_r+0x1588>
10012988:	4a52      	ldr	r2, [pc, #328]	@ (10012ad4 <_vfprintf_r+0x1ba8>)
1001298a:	9215      	str	r2, [sp, #84]	@ 0x54
1001298c:	f7fe bf76 	b.w	1001187c <_vfprintf_r+0x950>
10012990:	9808      	ldr	r0, [sp, #32]
10012992:	1c59      	adds	r1, r3, #1
10012994:	f7fd f9fe 	bl	1000fd94 <_malloc_r>
10012998:	4605      	mov	r5, r0
1001299a:	b178      	cbz	r0, 100129bc <_vfprintf_r+0x1a90>
1001299c:	900c      	str	r0, [sp, #48]	@ 0x30
1001299e:	e504      	b.n	100123aa <_vfprintf_r+0x147e>
100129a0:	2800      	cmp	r0, #0
100129a2:	d162      	bne.n	10012a6a <_vfprintf_r+0x1b3e>
100129a4:	2230      	movs	r2, #48	@ 0x30
100129a6:	f88d 20b2 	strb.w	r2, [sp, #178]	@ 0xb2
100129aa:	f10d 02b3 	add.w	r2, sp, #179	@ 0xb3
100129ae:	3330      	adds	r3, #48	@ 0x30
100129b0:	f802 3b01 	strb.w	r3, [r2], #1
100129b4:	ab2c      	add	r3, sp, #176	@ 0xb0
100129b6:	1ad3      	subs	r3, r2, r3
100129b8:	931c      	str	r3, [sp, #112]	@ 0x70
100129ba:	e4a3      	b.n	10012304 <_vfprintf_r+0x13d8>
100129bc:	9a07      	ldr	r2, [sp, #28]
100129be:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
100129c2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100129c6:	8193      	strh	r3, [r2, #12]
100129c8:	f7fe bc11 	b.w	100111ee <_vfprintf_r+0x2c2>
100129cc:	e9dd 1007 	ldrd	r1, r0, [sp, #28]
100129d0:	aa32      	add	r2, sp, #200	@ 0xc8
100129d2:	f000 f94b 	bl	10012c6c <__sprint_r>
100129d6:	2800      	cmp	r0, #0
100129d8:	f47e afa4 	bne.w	10011924 <_vfprintf_r+0x9f8>
100129dc:	9c34      	ldr	r4, [sp, #208]	@ 0xd0
100129de:	f10d 08d4 	add.w	r8, sp, #212	@ 0xd4
100129e2:	f7ff b89a 	b.w	10011b1a <_vfprintf_r+0xbee>
100129e6:	4b3c      	ldr	r3, [pc, #240]	@ (10012ad8 <_vfprintf_r+0x1bac>)
100129e8:	4a3c      	ldr	r2, [pc, #240]	@ (10012adc <_vfprintf_r+0x1bb0>)
100129ea:	990e      	ldr	r1, [sp, #56]	@ 0x38
100129ec:	2961      	cmp	r1, #97	@ 0x61
100129ee:	bf18      	it	ne
100129f0:	461a      	movne	r2, r3
100129f2:	2301      	movs	r3, #1
100129f4:	9212      	str	r2, [sp, #72]	@ 0x48
100129f6:	9329      	str	r3, [sp, #164]	@ 0xa4
100129f8:	e4ff      	b.n	100123fa <_vfprintf_r+0x14ce>
100129fa:	2306      	movs	r3, #6
100129fc:	9309      	str	r3, [sp, #36]	@ 0x24
100129fe:	f7ff b9ef 	b.w	10011de0 <_vfprintf_r+0xeb4>
10012a02:	9b06      	ldr	r3, [sp, #24]
10012a04:	07de      	lsls	r6, r3, #31
10012a06:	f57f ac86 	bpl.w	10012316 <_vfprintf_r+0x13ea>
10012a0a:	e482      	b.n	10012312 <_vfprintf_r+0x13e6>
10012a0c:	e9dd 0124 	ldrd	r0, r1, [sp, #144]	@ 0x90
10012a10:	2200      	movs	r2, #0
10012a12:	2300      	movs	r3, #0
10012a14:	f004 f8ca 	bl	10016bac <__aeabi_dcmpeq>
10012a18:	2800      	cmp	r0, #0
10012a1a:	f47f ac1c 	bne.w	10012256 <_vfprintf_r+0x132a>
10012a1e:	f1c6 0601 	rsb	r6, r6, #1
10012a22:	9629      	str	r6, [sp, #164]	@ 0xa4
10012a24:	e418      	b.n	10012258 <_vfprintf_r+0x132c>
10012a26:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
10012a28:	4d2d      	ldr	r5, [pc, #180]	@ (10012ae0 <_vfprintf_r+0x1bb4>)
10012a2a:	2b00      	cmp	r3, #0
10012a2c:	bfb4      	ite	lt
10012a2e:	222d      	movlt	r2, #45	@ 0x2d
10012a30:	f89d 209f 	ldrbge.w	r2, [sp, #159]	@ 0x9f
10012a34:	4b2b      	ldr	r3, [pc, #172]	@ (10012ae4 <_vfprintf_r+0x1bb8>)
10012a36:	bfb8      	it	lt
10012a38:	f88d 209f 	strblt.w	r2, [sp, #159]	@ 0x9f
10012a3c:	f029 0980 	bic.w	r9, r9, #128	@ 0x80
10012a40:	f7fe bc99 	b.w	10011376 <_vfprintf_r+0x44a>
10012a44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10012a46:	9306      	str	r3, [sp, #24]
10012a48:	469b      	mov	fp, r3
10012a4a:	2373      	movs	r3, #115	@ 0x73
10012a4c:	f89d 209f 	ldrb.w	r2, [sp, #159]	@ 0x9f
10012a50:	960d      	str	r6, [sp, #52]	@ 0x34
10012a52:	9009      	str	r0, [sp, #36]	@ 0x24
10012a54:	9014      	str	r0, [sp, #80]	@ 0x50
10012a56:	9010      	str	r0, [sp, #64]	@ 0x40
10012a58:	930e      	str	r3, [sp, #56]	@ 0x38
10012a5a:	f7fe bc99 	b.w	10011390 <_vfprintf_r+0x464>
10012a5e:	f8dd 9018 	ldr.w	r9, [sp, #24]
10012a62:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10012a66:	f7ff bb40 	b.w	100120ea <_vfprintf_r+0x11be>
10012a6a:	f10d 02b2 	add.w	r2, sp, #178	@ 0xb2
10012a6e:	e79e      	b.n	100129ae <_vfprintf_r+0x1a82>
10012a70:	4693      	mov	fp, r2
10012a72:	e5b6      	b.n	100125e2 <_vfprintf_r+0x16b6>
10012a74:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012a76:	18cf      	adds	r7, r1, r3
10012a78:	443a      	add	r2, r7
10012a7a:	2366      	movs	r3, #102	@ 0x66
10012a7c:	4693      	mov	fp, r2
10012a7e:	930e      	str	r3, [sp, #56]	@ 0x38
10012a80:	e6f3      	b.n	1001286a <_vfprintf_r+0x193e>
10012a82:	2367      	movs	r3, #103	@ 0x67
10012a84:	930e      	str	r3, [sp, #56]	@ 0x38
10012a86:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10012a88:	780b      	ldrb	r3, [r1, #0]
10012a8a:	2bff      	cmp	r3, #255	@ 0xff
10012a8c:	d063      	beq.n	10012b56 <_vfprintf_r+0x1c2a>
10012a8e:	2400      	movs	r4, #0
10012a90:	9a12      	ldr	r2, [sp, #72]	@ 0x48
10012a92:	4620      	mov	r0, r4
10012a94:	e003      	b.n	10012a9e <_vfprintf_r+0x1b72>
10012a96:	3001      	adds	r0, #1
10012a98:	3101      	adds	r1, #1
10012a9a:	2bff      	cmp	r3, #255	@ 0xff
10012a9c:	d008      	beq.n	10012ab0 <_vfprintf_r+0x1b84>
10012a9e:	4293      	cmp	r3, r2
10012aa0:	da06      	bge.n	10012ab0 <_vfprintf_r+0x1b84>
10012aa2:	1ad2      	subs	r2, r2, r3
10012aa4:	784b      	ldrb	r3, [r1, #1]
10012aa6:	2b00      	cmp	r3, #0
10012aa8:	d1f5      	bne.n	10012a96 <_vfprintf_r+0x1b6a>
10012aaa:	780b      	ldrb	r3, [r1, #0]
10012aac:	3401      	adds	r4, #1
10012aae:	e7f4      	b.n	10012a9a <_vfprintf_r+0x1b6e>
10012ab0:	911b      	str	r1, [sp, #108]	@ 0x6c
10012ab2:	9212      	str	r2, [sp, #72]	@ 0x48
10012ab4:	9010      	str	r0, [sp, #64]	@ 0x40
10012ab6:	9414      	str	r4, [sp, #80]	@ 0x50
10012ab8:	e9dd 3914 	ldrd	r3, r9, [sp, #80]	@ 0x50
10012abc:	9a10      	ldr	r2, [sp, #64]	@ 0x40
10012abe:	4413      	add	r3, r2
10012ac0:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
10012ac2:	fb02 bb03 	mla	fp, r2, r3, fp
10012ac6:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012aca:	9306      	str	r3, [sp, #24]
10012acc:	e42f      	b.n	1001232e <_vfprintf_r+0x1402>
10012ace:	bf00      	nop
10012ad0:	100170cc 	.word	0x100170cc
10012ad4:	100170bc 	.word	0x100170bc
10012ad8:	1001709c 	.word	0x1001709c
10012adc:	10017088 	.word	0x10017088
10012ae0:	10017080 	.word	0x10017080
10012ae4:	10017084 	.word	0x10017084
10012ae8:	f1c3 0301 	rsb	r3, r3, #1
10012aec:	449b      	add	fp, r3
10012aee:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012af2:	9306      	str	r3, [sp, #24]
10012af4:	2367      	movs	r3, #103	@ 0x67
10012af6:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012afa:	930e      	str	r3, [sp, #56]	@ 0x38
10012afc:	e57e      	b.n	100125fc <_vfprintf_r+0x16d0>
10012afe:	4e1c      	ldr	r6, [pc, #112]	@ (10012b70 <_vfprintf_r+0x1c44>)
10012b00:	e60f      	b.n	10012722 <_vfprintf_r+0x17f6>
10012b02:	2302      	movs	r3, #2
10012b04:	931c      	str	r3, [sp, #112]	@ 0x70
10012b06:	f7ff bbfd 	b.w	10012304 <_vfprintf_r+0x13d8>
10012b0a:	4a19      	ldr	r2, [pc, #100]	@ (10012b70 <_vfprintf_r+0x1c44>)
10012b0c:	9215      	str	r2, [sp, #84]	@ 0x54
10012b0e:	e52b      	b.n	10012568 <_vfprintf_r+0x163c>
10012b10:	2170      	movs	r1, #112	@ 0x70
10012b12:	f7ff bbc0 	b.w	10012296 <_vfprintf_r+0x136a>
10012b16:	f8dd 9054 	ldr.w	r9, [sp, #84]	@ 0x54
10012b1a:	b933      	cbnz	r3, 10012b2a <_vfprintf_r+0x1bfe>
10012b1c:	f04f 0b01 	mov.w	fp, #1
10012b20:	2366      	movs	r3, #102	@ 0x66
10012b22:	f8cd b018 	str.w	fp, [sp, #24]
10012b26:	930e      	str	r3, [sp, #56]	@ 0x38
10012b28:	e568      	b.n	100125fc <_vfprintf_r+0x16d0>
10012b2a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10012b2c:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10012b30:	1c5f      	adds	r7, r3, #1
10012b32:	44bb      	add	fp, r7
10012b34:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
10012b38:	9306      	str	r3, [sp, #24]
10012b3a:	2366      	movs	r3, #102	@ 0x66
10012b3c:	930e      	str	r3, [sp, #56]	@ 0x38
10012b3e:	e55d      	b.n	100125fc <_vfprintf_r+0x16d0>
10012b40:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
10012b42:	7863      	ldrb	r3, [r4, #1]
10012b44:	460c      	mov	r4, r1
10012b46:	f852 1b04 	ldr.w	r1, [r2], #4
10012b4a:	920d      	str	r2, [sp, #52]	@ 0x34
10012b4c:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10012b50:	9109      	str	r1, [sp, #36]	@ 0x24
10012b52:	f7fe ba63 	b.w	1001101c <_vfprintf_r+0xf0>
10012b56:	2300      	movs	r3, #0
10012b58:	9314      	str	r3, [sp, #80]	@ 0x50
10012b5a:	9310      	str	r3, [sp, #64]	@ 0x40
10012b5c:	e7ac      	b.n	10012ab8 <_vfprintf_r+0x1b8c>
10012b5e:	e9dd 2b07 	ldrd	r2, fp, [sp, #28]
10012b62:	8993      	ldrh	r3, [r2, #12]
10012b64:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012b68:	8193      	strh	r3, [r2, #12]
10012b6a:	f7fe bb37 	b.w	100111dc <_vfprintf_r+0x2b0>
10012b6e:	bf00      	nop
10012b70:	100170bc 	.word	0x100170bc

10012b74 <__sbprintf>:
10012b74:	b5f0      	push	{r4, r5, r6, r7, lr}
10012b76:	461f      	mov	r7, r3
10012b78:	898b      	ldrh	r3, [r1, #12]
10012b7a:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10012b7e:	f023 0302 	bic.w	r3, r3, #2
10012b82:	f8ad 300c 	strh.w	r3, [sp, #12]
10012b86:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10012b88:	9319      	str	r3, [sp, #100]	@ 0x64
10012b8a:	89cb      	ldrh	r3, [r1, #14]
10012b8c:	f8ad 300e 	strh.w	r3, [sp, #14]
10012b90:	69cb      	ldr	r3, [r1, #28]
10012b92:	9307      	str	r3, [sp, #28]
10012b94:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10012b96:	9309      	str	r3, [sp, #36]	@ 0x24
10012b98:	ab1a      	add	r3, sp, #104	@ 0x68
10012b9a:	9300      	str	r3, [sp, #0]
10012b9c:	9304      	str	r3, [sp, #16]
10012b9e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10012ba2:	4615      	mov	r5, r2
10012ba4:	4606      	mov	r6, r0
10012ba6:	9302      	str	r3, [sp, #8]
10012ba8:	9305      	str	r3, [sp, #20]
10012baa:	a816      	add	r0, sp, #88	@ 0x58
10012bac:	2300      	movs	r3, #0
10012bae:	460c      	mov	r4, r1
10012bb0:	9306      	str	r3, [sp, #24]
10012bb2:	f7fd fc41 	bl	10010438 <__retarget_lock_init_recursive>
10012bb6:	462a      	mov	r2, r5
10012bb8:	463b      	mov	r3, r7
10012bba:	4669      	mov	r1, sp
10012bbc:	4630      	mov	r0, r6
10012bbe:	f7fe f9b5 	bl	10010f2c <_vfprintf_r>
10012bc2:	1e05      	subs	r5, r0, #0
10012bc4:	db07      	blt.n	10012bd6 <__sbprintf+0x62>
10012bc6:	4669      	mov	r1, sp
10012bc8:	4630      	mov	r0, r6
10012bca:	f002 fafb 	bl	100151c4 <_fflush_r>
10012bce:	2800      	cmp	r0, #0
10012bd0:	bf18      	it	ne
10012bd2:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10012bd6:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10012bda:	065b      	lsls	r3, r3, #25
10012bdc:	d503      	bpl.n	10012be6 <__sbprintf+0x72>
10012bde:	89a3      	ldrh	r3, [r4, #12]
10012be0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10012be4:	81a3      	strh	r3, [r4, #12]
10012be6:	9816      	ldr	r0, [sp, #88]	@ 0x58
10012be8:	f7fd fc28 	bl	1001043c <__retarget_lock_close_recursive>
10012bec:	4628      	mov	r0, r5
10012bee:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10012bf2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10012bf4 <__sprint_r.part.0>:
10012bf4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10012bf8:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10012bfa:	049c      	lsls	r4, r3, #18
10012bfc:	4690      	mov	r8, r2
10012bfe:	d52e      	bpl.n	10012c5e <__sprint_r.part.0+0x6a>
10012c00:	6893      	ldr	r3, [r2, #8]
10012c02:	6812      	ldr	r2, [r2, #0]
10012c04:	b34b      	cbz	r3, 10012c5a <__sprint_r.part.0+0x66>
10012c06:	460d      	mov	r5, r1
10012c08:	4606      	mov	r6, r0
10012c0a:	f102 0908 	add.w	r9, r2, #8
10012c0e:	e959 2a02 	ldrd	r2, sl, [r9, #-8]
10012c12:	ea5f 079a 	movs.w	r7, sl, lsr #2
10012c16:	d016      	beq.n	10012c46 <__sprint_r.part.0+0x52>
10012c18:	f1a2 0b04 	sub.w	fp, r2, #4
10012c1c:	2400      	movs	r4, #0
10012c1e:	e001      	b.n	10012c24 <__sprint_r.part.0+0x30>
10012c20:	42a7      	cmp	r7, r4
10012c22:	d00e      	beq.n	10012c42 <__sprint_r.part.0+0x4e>
10012c24:	f85b 1f04 	ldr.w	r1, [fp, #4]!
10012c28:	462a      	mov	r2, r5
10012c2a:	4630      	mov	r0, r6
10012c2c:	f002 fde8 	bl	10015800 <_fputwc_r>
10012c30:	1c43      	adds	r3, r0, #1
10012c32:	f104 0401 	add.w	r4, r4, #1
10012c36:	d1f3      	bne.n	10012c20 <__sprint_r.part.0+0x2c>
10012c38:	2300      	movs	r3, #0
10012c3a:	e9c8 3301 	strd	r3, r3, [r8, #4]
10012c3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012c42:	f8d8 3008 	ldr.w	r3, [r8, #8]
10012c46:	f02a 0a03 	bic.w	sl, sl, #3
10012c4a:	eba3 030a 	sub.w	r3, r3, sl
10012c4e:	f8c8 3008 	str.w	r3, [r8, #8]
10012c52:	f109 0908 	add.w	r9, r9, #8
10012c56:	2b00      	cmp	r3, #0
10012c58:	d1d9      	bne.n	10012c0e <__sprint_r.part.0+0x1a>
10012c5a:	2000      	movs	r0, #0
10012c5c:	e7ec      	b.n	10012c38 <__sprint_r.part.0+0x44>
10012c5e:	f7fd ffaf 	bl	10010bc0 <__sfvwrite_r>
10012c62:	2300      	movs	r3, #0
10012c64:	e9c8 3301 	strd	r3, r3, [r8, #4]
10012c68:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}

10012c6c <__sprint_r>:
10012c6c:	b410      	push	{r4}
10012c6e:	6894      	ldr	r4, [r2, #8]
10012c70:	b114      	cbz	r4, 10012c78 <__sprint_r+0xc>
10012c72:	bc10      	pop	{r4}
10012c74:	f7ff bfbe 	b.w	10012bf4 <__sprint_r.part.0>
10012c78:	4620      	mov	r0, r4
10012c7a:	6054      	str	r4, [r2, #4]
10012c7c:	bc10      	pop	{r4}
10012c7e:	4770      	bx	lr

10012c80 <_vfiprintf_r>:
10012c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10012c84:	b0c7      	sub	sp, #284	@ 0x11c
10012c86:	af16      	add	r7, sp, #88	@ 0x58
10012c88:	4683      	mov	fp, r0
10012c8a:	9103      	str	r1, [sp, #12]
10012c8c:	9206      	str	r2, [sp, #24]
10012c8e:	2100      	movs	r1, #0
10012c90:	2208      	movs	r2, #8
10012c92:	4638      	mov	r0, r7
10012c94:	461c      	mov	r4, r3
10012c96:	930a      	str	r3, [sp, #40]	@ 0x28
10012c98:	f7fd fb40 	bl	1001031c <memset>
10012c9c:	f1bb 0f00 	cmp.w	fp, #0
10012ca0:	d004      	beq.n	10012cac <_vfiprintf_r+0x2c>
10012ca2:	f8db 3034 	ldr.w	r3, [fp, #52]	@ 0x34
10012ca6:	2b00      	cmp	r3, #0
10012ca8:	f000 86bb 	beq.w	10013a22 <_vfiprintf_r+0xda2>
10012cac:	9a03      	ldr	r2, [sp, #12]
10012cae:	6e53      	ldr	r3, [r2, #100]	@ 0x64
10012cb0:	f9b2 200c 	ldrsh.w	r2, [r2, #12]
10012cb4:	07db      	lsls	r3, r3, #31
10012cb6:	d402      	bmi.n	10012cbe <_vfiprintf_r+0x3e>
10012cb8:	0596      	lsls	r6, r2, #22
10012cba:	f140 859f 	bpl.w	100137fc <_vfiprintf_r+0xb7c>
10012cbe:	0495      	lsls	r5, r2, #18
10012cc0:	d407      	bmi.n	10012cd2 <_vfiprintf_r+0x52>
10012cc2:	9903      	ldr	r1, [sp, #12]
10012cc4:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10012cc6:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10012cca:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
10012cce:	818a      	strh	r2, [r1, #12]
10012cd0:	664b      	str	r3, [r1, #100]	@ 0x64
10012cd2:	0710      	lsls	r0, r2, #28
10012cd4:	f140 80c9 	bpl.w	10012e6a <_vfiprintf_r+0x1ea>
10012cd8:	9b03      	ldr	r3, [sp, #12]
10012cda:	691b      	ldr	r3, [r3, #16]
10012cdc:	2b00      	cmp	r3, #0
10012cde:	f000 80c4 	beq.w	10012e6a <_vfiprintf_r+0x1ea>
10012ce2:	f002 031a 	and.w	r3, r2, #26
10012ce6:	2b0a      	cmp	r3, #10
10012ce8:	f000 80ce 	beq.w	10012e88 <_vfiprintf_r+0x208>
10012cec:	2300      	movs	r3, #0
10012cee:	e9cd 331b 	strd	r3, r3, [sp, #108]	@ 0x6c
10012cf2:	e9cd 330e 	strd	r3, r3, [sp, #56]	@ 0x38
10012cf6:	aa1d      	add	r2, sp, #116	@ 0x74
10012cf8:	f8df a260 	ldr.w	sl, [pc, #608]	@ 10012f5c <_vfiprintf_r+0x2dc>
10012cfc:	930d      	str	r3, [sp, #52]	@ 0x34
10012cfe:	921a      	str	r2, [sp, #104]	@ 0x68
10012d00:	4691      	mov	r9, r2
10012d02:	9310      	str	r3, [sp, #64]	@ 0x40
10012d04:	9307      	str	r3, [sp, #28]
10012d06:	9d06      	ldr	r5, [sp, #24]
10012d08:	f8da 40e4 	ldr.w	r4, [sl, #228]	@ 0xe4
10012d0c:	f001 f8b4 	bl	10013e78 <__locale_mb_cur_max>
10012d10:	462a      	mov	r2, r5
10012d12:	4603      	mov	r3, r0
10012d14:	a914      	add	r1, sp, #80	@ 0x50
10012d16:	9700      	str	r7, [sp, #0]
10012d18:	4658      	mov	r0, fp
10012d1a:	47a0      	blx	r4
10012d1c:	2800      	cmp	r0, #0
10012d1e:	f000 80d2 	beq.w	10012ec6 <_vfiprintf_r+0x246>
10012d22:	f2c0 80c8 	blt.w	10012eb6 <_vfiprintf_r+0x236>
10012d26:	9a14      	ldr	r2, [sp, #80]	@ 0x50
10012d28:	2a25      	cmp	r2, #37	@ 0x25
10012d2a:	4603      	mov	r3, r0
10012d2c:	d001      	beq.n	10012d32 <_vfiprintf_r+0xb2>
10012d2e:	441d      	add	r5, r3
10012d30:	e7ea      	b.n	10012d08 <_vfiprintf_r+0x88>
10012d32:	9b06      	ldr	r3, [sp, #24]
10012d34:	1aee      	subs	r6, r5, r3
10012d36:	4604      	mov	r4, r0
10012d38:	f040 80c9 	bne.w	10012ece <_vfiprintf_r+0x24e>
10012d3c:	2300      	movs	r3, #0
10012d3e:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
10012d42:	786a      	ldrb	r2, [r5, #1]
10012d44:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10012d48:	9308      	str	r3, [sp, #32]
10012d4a:	1c6c      	adds	r4, r5, #1
10012d4c:	9105      	str	r1, [sp, #20]
10012d4e:	9302      	str	r3, [sp, #8]
10012d50:	3401      	adds	r4, #1
10012d52:	f1a2 0320 	sub.w	r3, r2, #32
10012d56:	2b5a      	cmp	r3, #90	@ 0x5a
10012d58:	f200 8102 	bhi.w	10012f60 <_vfiprintf_r+0x2e0>
10012d5c:	e8df f013 	tbh	[pc, r3, lsl #1]
10012d60:	01000303 	.word	0x01000303
10012d64:	02fd0100 	.word	0x02fd0100
10012d68:	01000100 	.word	0x01000100
10012d6c:	006b0100 	.word	0x006b0100
10012d70:	01000100 	.word	0x01000100
10012d74:	032d0218 	.word	0x032d0218
10012d78:	02230100 	.word	0x02230100
10012d7c:	01000313 	.word	0x01000313
10012d80:	005b030d 	.word	0x005b030d
10012d84:	005b005b 	.word	0x005b005b
10012d88:	005b005b 	.word	0x005b005b
10012d8c:	005b005b 	.word	0x005b005b
10012d90:	005b005b 	.word	0x005b005b
10012d94:	01000100 	.word	0x01000100
10012d98:	01000100 	.word	0x01000100
10012d9c:	01000100 	.word	0x01000100
10012da0:	01000100 	.word	0x01000100
10012da4:	01ce0100 	.word	0x01ce0100
10012da8:	0100025d 	.word	0x0100025d
10012dac:	01000100 	.word	0x01000100
10012db0:	01000100 	.word	0x01000100
10012db4:	01000100 	.word	0x01000100
10012db8:	01000100 	.word	0x01000100
10012dbc:	02290100 	.word	0x02290100
10012dc0:	01000100 	.word	0x01000100
10012dc4:	01a60100 	.word	0x01a60100
10012dc8:	02760100 	.word	0x02760100
10012dcc:	01000100 	.word	0x01000100
10012dd0:	0100058e 	.word	0x0100058e
10012dd4:	01000100 	.word	0x01000100
10012dd8:	01000100 	.word	0x01000100
10012ddc:	01000100 	.word	0x01000100
10012de0:	01000100 	.word	0x01000100
10012de4:	01ce0100 	.word	0x01ce0100
10012de8:	010001f3 	.word	0x010001f3
10012dec:	01000100 	.word	0x01000100
10012df0:	01f302c4 	.word	0x01f302c4
10012df4:	0100007f 	.word	0x0100007f
10012df8:	01000332 	.word	0x01000332
10012dfc:	058b02ee 	.word	0x058b02ee
10012e00:	007f02cd 	.word	0x007f02cd
10012e04:	01a60100 	.word	0x01a60100
10012e08:	0588007d 	.word	0x0588007d
10012e0c:	01000100 	.word	0x01000100
10012e10:	010005b1 	.word	0x010005b1
10012e14:	007d      	.short	0x007d
10012e16:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10012e1a:	2200      	movs	r2, #0
10012e1c:	4611      	mov	r1, r2
10012e1e:	f814 2b01 	ldrb.w	r2, [r4], #1
10012e22:	eb01 0181 	add.w	r1, r1, r1, lsl #2
10012e26:	eb03 0141 	add.w	r1, r3, r1, lsl #1
10012e2a:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10012e2e:	2b09      	cmp	r3, #9
10012e30:	d9f5      	bls.n	10012e1e <_vfiprintf_r+0x19e>
10012e32:	9108      	str	r1, [sp, #32]
10012e34:	e78d      	b.n	10012d52 <_vfiprintf_r+0xd2>
10012e36:	4658      	mov	r0, fp
10012e38:	f001 f824 	bl	10013e84 <_localeconv_r>
10012e3c:	6843      	ldr	r3, [r0, #4]
10012e3e:	9310      	str	r3, [sp, #64]	@ 0x40
10012e40:	4618      	mov	r0, r3
10012e42:	f7fd fc9d 	bl	10010780 <strlen>
10012e46:	900f      	str	r0, [sp, #60]	@ 0x3c
10012e48:	4605      	mov	r5, r0
10012e4a:	4658      	mov	r0, fp
10012e4c:	f001 f81a 	bl	10013e84 <_localeconv_r>
10012e50:	6883      	ldr	r3, [r0, #8]
10012e52:	930e      	str	r3, [sp, #56]	@ 0x38
10012e54:	2d00      	cmp	r5, #0
10012e56:	f040 84e5 	bne.w	10013824 <_vfiprintf_r+0xba4>
10012e5a:	7822      	ldrb	r2, [r4, #0]
10012e5c:	e778      	b.n	10012d50 <_vfiprintf_r+0xd0>
10012e5e:	9b02      	ldr	r3, [sp, #8]
10012e60:	7822      	ldrb	r2, [r4, #0]
10012e62:	f043 0320 	orr.w	r3, r3, #32
10012e66:	9302      	str	r3, [sp, #8]
10012e68:	e772      	b.n	10012d50 <_vfiprintf_r+0xd0>
10012e6a:	9d03      	ldr	r5, [sp, #12]
10012e6c:	4658      	mov	r0, fp
10012e6e:	4629      	mov	r1, r5
10012e70:	f001 f86c 	bl	10013f4c <__swsetup_r>
10012e74:	2800      	cmp	r0, #0
10012e76:	f040 86a6 	bne.w	10013bc6 <_vfiprintf_r+0xf46>
10012e7a:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10012e7e:	f002 031a 	and.w	r3, r2, #26
10012e82:	2b0a      	cmp	r3, #10
10012e84:	f47f af32 	bne.w	10012cec <_vfiprintf_r+0x6c>
10012e88:	9903      	ldr	r1, [sp, #12]
10012e8a:	f9b1 300e 	ldrsh.w	r3, [r1, #14]
10012e8e:	2b00      	cmp	r3, #0
10012e90:	f6ff af2c 	blt.w	10012cec <_vfiprintf_r+0x6c>
10012e94:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10012e96:	07db      	lsls	r3, r3, #31
10012e98:	d402      	bmi.n	10012ea0 <_vfiprintf_r+0x220>
10012e9a:	0597      	lsls	r7, r2, #22
10012e9c:	f140 865e 	bpl.w	10013b5c <_vfiprintf_r+0xedc>
10012ea0:	9a06      	ldr	r2, [sp, #24]
10012ea2:	9903      	ldr	r1, [sp, #12]
10012ea4:	4623      	mov	r3, r4
10012ea6:	4658      	mov	r0, fp
10012ea8:	f000 fec0 	bl	10013c2c <__sbprintf>
10012eac:	9007      	str	r0, [sp, #28]
10012eae:	9807      	ldr	r0, [sp, #28]
10012eb0:	b047      	add	sp, #284	@ 0x11c
10012eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012eb6:	2208      	movs	r2, #8
10012eb8:	2100      	movs	r1, #0
10012eba:	4638      	mov	r0, r7
10012ebc:	f7fd fa2e 	bl	1001031c <memset>
10012ec0:	2301      	movs	r3, #1
10012ec2:	441d      	add	r5, r3
10012ec4:	e720      	b.n	10012d08 <_vfiprintf_r+0x88>
10012ec6:	9b06      	ldr	r3, [sp, #24]
10012ec8:	1aee      	subs	r6, r5, r3
10012eca:	4604      	mov	r4, r0
10012ecc:	d012      	beq.n	10012ef4 <_vfiprintf_r+0x274>
10012ece:	9b06      	ldr	r3, [sp, #24]
10012ed0:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
10012ed2:	e9c9 3600 	strd	r3, r6, [r9]
10012ed6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
10012ed8:	3301      	adds	r3, #1
10012eda:	4432      	add	r2, r6
10012edc:	2b07      	cmp	r3, #7
10012ede:	921c      	str	r2, [sp, #112]	@ 0x70
10012ee0:	931b      	str	r3, [sp, #108]	@ 0x6c
10012ee2:	dc11      	bgt.n	10012f08 <_vfiprintf_r+0x288>
10012ee4:	f109 0908 	add.w	r9, r9, #8
10012ee8:	9b07      	ldr	r3, [sp, #28]
10012eea:	4433      	add	r3, r6
10012eec:	9307      	str	r3, [sp, #28]
10012eee:	2c00      	cmp	r4, #0
10012ef0:	f47f af24 	bne.w	10012d3c <_vfiprintf_r+0xbc>
10012ef4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10012ef6:	2b00      	cmp	r3, #0
10012ef8:	f040 8650 	bne.w	10013b9c <_vfiprintf_r+0xf1c>
10012efc:	9b03      	ldr	r3, [sp, #12]
10012efe:	2200      	movs	r2, #0
10012f00:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10012f04:	921b      	str	r2, [sp, #108]	@ 0x6c
10012f06:	e01c      	b.n	10012f42 <_vfiprintf_r+0x2c2>
10012f08:	2a00      	cmp	r2, #0
10012f0a:	f000 842f 	beq.w	1001376c <_vfiprintf_r+0xaec>
10012f0e:	9903      	ldr	r1, [sp, #12]
10012f10:	aa1a      	add	r2, sp, #104	@ 0x68
10012f12:	4658      	mov	r0, fp
10012f14:	f7ff fe6e 	bl	10012bf4 <__sprint_r.part.0>
10012f18:	b980      	cbnz	r0, 10012f3c <_vfiprintf_r+0x2bc>
10012f1a:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10012f1e:	e7e3      	b.n	10012ee8 <_vfiprintf_r+0x268>
10012f20:	9903      	ldr	r1, [sp, #12]
10012f22:	aa1a      	add	r2, sp, #104	@ 0x68
10012f24:	4658      	mov	r0, fp
10012f26:	f7ff fe65 	bl	10012bf4 <__sprint_r.part.0>
10012f2a:	2800      	cmp	r0, #0
10012f2c:	f000 80a9 	beq.w	10013082 <_vfiprintf_r+0x402>
10012f30:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10012f32:	b11b      	cbz	r3, 10012f3c <_vfiprintf_r+0x2bc>
10012f34:	990b      	ldr	r1, [sp, #44]	@ 0x2c
10012f36:	4658      	mov	r0, fp
10012f38:	f7fd fcea 	bl	10010910 <_free_r>
10012f3c:	9b03      	ldr	r3, [sp, #12]
10012f3e:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
10012f42:	9a03      	ldr	r2, [sp, #12]
10012f44:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10012f46:	07d1      	lsls	r1, r2, #31
10012f48:	f140 80a6 	bpl.w	10013098 <_vfiprintf_r+0x418>
10012f4c:	065b      	lsls	r3, r3, #25
10012f4e:	f100 8646 	bmi.w	10013bde <_vfiprintf_r+0xf5e>
10012f52:	9807      	ldr	r0, [sp, #28]
10012f54:	b047      	add	sp, #284	@ 0x11c
10012f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10012f5a:	bf00      	nop
10012f5c:	2000054c 	.word	0x2000054c
10012f60:	9406      	str	r4, [sp, #24]
10012f62:	2a00      	cmp	r2, #0
10012f64:	d0c6      	beq.n	10012ef4 <_vfiprintf_r+0x274>
10012f66:	2300      	movs	r3, #0
10012f68:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10012f6c:	2301      	movs	r3, #1
10012f6e:	f88d 20b4 	strb.w	r2, [sp, #180]	@ 0xb4
10012f72:	9304      	str	r3, [sp, #16]
10012f74:	9309      	str	r3, [sp, #36]	@ 0x24
10012f76:	ac2d      	add	r4, sp, #180	@ 0xb4
10012f78:	2300      	movs	r3, #0
10012f7a:	930b      	str	r3, [sp, #44]	@ 0x2c
10012f7c:	9305      	str	r3, [sp, #20]
10012f7e:	9b02      	ldr	r3, [sp, #8]
10012f80:	f013 0302 	ands.w	r3, r3, #2
10012f84:	d002      	beq.n	10012f8c <_vfiprintf_r+0x30c>
10012f86:	9a04      	ldr	r2, [sp, #16]
10012f88:	3202      	adds	r2, #2
10012f8a:	9204      	str	r2, [sp, #16]
10012f8c:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
10012f90:	9d02      	ldr	r5, [sp, #8]
10012f92:	1c50      	adds	r0, r2, #1
10012f94:	f015 0584 	ands.w	r5, r5, #132	@ 0x84
10012f98:	4601      	mov	r1, r0
10012f9a:	950c      	str	r5, [sp, #48]	@ 0x30
10012f9c:	d105      	bne.n	10012faa <_vfiprintf_r+0x32a>
10012f9e:	9d08      	ldr	r5, [sp, #32]
10012fa0:	9e04      	ldr	r6, [sp, #16]
10012fa2:	1bad      	subs	r5, r5, r6
10012fa4:	2d00      	cmp	r5, #0
10012fa6:	f300 8331 	bgt.w	1001360c <_vfiprintf_r+0x98c>
10012faa:	f89d 004b 	ldrb.w	r0, [sp, #75]	@ 0x4b
10012fae:	b188      	cbz	r0, 10012fd4 <_vfiprintf_r+0x354>
10012fb0:	2201      	movs	r2, #1
10012fb2:	f10c 0c01 	add.w	ip, ip, #1
10012fb6:	f8c9 2004 	str.w	r2, [r9, #4]
10012fba:	2907      	cmp	r1, #7
10012fbc:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
10012fc0:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10012fc4:	f8c9 2000 	str.w	r2, [r9]
10012fc8:	f300 82e1 	bgt.w	1001358e <_vfiprintf_r+0x90e>
10012fcc:	460a      	mov	r2, r1
10012fce:	f109 0908 	add.w	r9, r9, #8
10012fd2:	3101      	adds	r1, #1
10012fd4:	b1eb      	cbz	r3, 10013012 <_vfiprintf_r+0x392>
10012fd6:	ab13      	add	r3, sp, #76	@ 0x4c
10012fd8:	f10c 0c02 	add.w	ip, ip, #2
10012fdc:	f8c9 3000 	str.w	r3, [r9]
10012fe0:	2907      	cmp	r1, #7
10012fe2:	f04f 0302 	mov.w	r3, #2
10012fe6:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10012fea:	f8c9 3004 	str.w	r3, [r9, #4]
10012fee:	f340 82ec 	ble.w	100135ca <_vfiprintf_r+0x94a>
10012ff2:	f1bc 0f00 	cmp.w	ip, #0
10012ff6:	f000 83da 	beq.w	100137ae <_vfiprintf_r+0xb2e>
10012ffa:	9903      	ldr	r1, [sp, #12]
10012ffc:	aa1a      	add	r2, sp, #104	@ 0x68
10012ffe:	4658      	mov	r0, fp
10013000:	f7ff fdf8 	bl	10012bf4 <__sprint_r.part.0>
10013004:	2800      	cmp	r0, #0
10013006:	d193      	bne.n	10012f30 <_vfiprintf_r+0x2b0>
10013008:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
1001300c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013010:	1c51      	adds	r1, r2, #1
10013012:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10013014:	2b80      	cmp	r3, #128	@ 0x80
10013016:	f000 8213 	beq.w	10013440 <_vfiprintf_r+0x7c0>
1001301a:	9b05      	ldr	r3, [sp, #20]
1001301c:	9809      	ldr	r0, [sp, #36]	@ 0x24
1001301e:	1a1d      	subs	r5, r3, r0
10013020:	2d00      	cmp	r5, #0
10013022:	f300 8268 	bgt.w	100134f6 <_vfiprintf_r+0x876>
10013026:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10013028:	f8c9 4000 	str.w	r4, [r9]
1001302c:	eb02 030c 	add.w	r3, r2, ip
10013030:	2907      	cmp	r1, #7
10013032:	e9cd 131b 	strd	r1, r3, [sp, #108]	@ 0x6c
10013036:	f8c9 2004 	str.w	r2, [r9, #4]
1001303a:	f340 81fe 	ble.w	1001343a <_vfiprintf_r+0x7ba>
1001303e:	2b00      	cmp	r3, #0
10013040:	f000 832b 	beq.w	1001369a <_vfiprintf_r+0xa1a>
10013044:	9903      	ldr	r1, [sp, #12]
10013046:	aa1a      	add	r2, sp, #104	@ 0x68
10013048:	4658      	mov	r0, fp
1001304a:	f7ff fdd3 	bl	10012bf4 <__sprint_r.part.0>
1001304e:	2800      	cmp	r0, #0
10013050:	f47f af6e 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
10013054:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10013056:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001305a:	9a02      	ldr	r2, [sp, #8]
1001305c:	0750      	lsls	r0, r2, #29
1001305e:	d505      	bpl.n	1001306c <_vfiprintf_r+0x3ec>
10013060:	9a08      	ldr	r2, [sp, #32]
10013062:	9904      	ldr	r1, [sp, #16]
10013064:	1a54      	subs	r4, r2, r1
10013066:	2c00      	cmp	r4, #0
10013068:	f300 8322 	bgt.w	100136b0 <_vfiprintf_r+0xa30>
1001306c:	e9dd 2107 	ldrd	r2, r1, [sp, #28]
10013070:	9804      	ldr	r0, [sp, #16]
10013072:	4281      	cmp	r1, r0
10013074:	bfac      	ite	ge
10013076:	1852      	addge	r2, r2, r1
10013078:	1812      	addlt	r2, r2, r0
1001307a:	9207      	str	r2, [sp, #28]
1001307c:	2b00      	cmp	r3, #0
1001307e:	f47f af4f 	bne.w	10012f20 <_vfiprintf_r+0x2a0>
10013082:	2300      	movs	r3, #0
10013084:	931b      	str	r3, [sp, #108]	@ 0x6c
10013086:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10013088:	b11b      	cbz	r3, 10013092 <_vfiprintf_r+0x412>
1001308a:	4619      	mov	r1, r3
1001308c:	4658      	mov	r0, fp
1001308e:	f7fd fc3f 	bl	10010910 <_free_r>
10013092:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013096:	e636      	b.n	10012d06 <_vfiprintf_r+0x86>
10013098:	059a      	lsls	r2, r3, #22
1001309a:	f53f af57 	bmi.w	10012f4c <_vfiprintf_r+0x2cc>
1001309e:	9c03      	ldr	r4, [sp, #12]
100130a0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
100130a2:	f7fd f9cf 	bl	10010444 <__retarget_lock_release_recursive>
100130a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100130aa:	e74f      	b.n	10012f4c <_vfiprintf_r+0x2cc>
100130ac:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
100130ae:	9406      	str	r4, [sp, #24]
100130b0:	f856 4b04 	ldr.w	r4, [r6], #4
100130b4:	2300      	movs	r3, #0
100130b6:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100130ba:	2c00      	cmp	r4, #0
100130bc:	f000 84c9 	beq.w	10013a52 <_vfiprintf_r+0xdd2>
100130c0:	2a53      	cmp	r2, #83	@ 0x53
100130c2:	f000 8421 	beq.w	10013908 <_vfiprintf_r+0xc88>
100130c6:	9b02      	ldr	r3, [sp, #8]
100130c8:	f013 0510 	ands.w	r5, r3, #16
100130cc:	f040 841c 	bne.w	10013908 <_vfiprintf_r+0xc88>
100130d0:	9b05      	ldr	r3, [sp, #20]
100130d2:	1c5a      	adds	r2, r3, #1
100130d4:	f000 854e 	beq.w	10013b74 <_vfiprintf_r+0xef4>
100130d8:	461a      	mov	r2, r3
100130da:	4629      	mov	r1, r5
100130dc:	4620      	mov	r0, r4
100130de:	f002 f89f 	bl	10015220 <memchr>
100130e2:	900b      	str	r0, [sp, #44]	@ 0x2c
100130e4:	2800      	cmp	r0, #0
100130e6:	f000 853e 	beq.w	10013b66 <_vfiprintf_r+0xee6>
100130ea:	1b03      	subs	r3, r0, r4
100130ec:	9309      	str	r3, [sp, #36]	@ 0x24
100130ee:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
100130f2:	9505      	str	r5, [sp, #20]
100130f4:	960a      	str	r6, [sp, #40]	@ 0x28
100130f6:	9304      	str	r3, [sp, #16]
100130f8:	950b      	str	r5, [sp, #44]	@ 0x2c
100130fa:	e18d      	b.n	10013418 <_vfiprintf_r+0x798>
100130fc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100130fe:	9406      	str	r4, [sp, #24]
10013100:	2a43      	cmp	r2, #67	@ 0x43
10013102:	f103 0504 	add.w	r5, r3, #4
10013106:	d003      	beq.n	10013110 <_vfiprintf_r+0x490>
10013108:	9b02      	ldr	r3, [sp, #8]
1001310a:	06de      	lsls	r6, r3, #27
1001310c:	f140 83e4 	bpl.w	100138d8 <_vfiprintf_r+0xc58>
10013110:	2208      	movs	r2, #8
10013112:	2100      	movs	r1, #0
10013114:	a818      	add	r0, sp, #96	@ 0x60
10013116:	f7fd f901 	bl	1001031c <memset>
1001311a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001311c:	ac2d      	add	r4, sp, #180	@ 0xb4
1001311e:	681a      	ldr	r2, [r3, #0]
10013120:	4621      	mov	r1, r4
10013122:	ab18      	add	r3, sp, #96	@ 0x60
10013124:	4658      	mov	r0, fp
10013126:	f000 fe81 	bl	10013e2c <_wcrtomb_r>
1001312a:	4603      	mov	r3, r0
1001312c:	3301      	adds	r3, #1
1001312e:	9009      	str	r0, [sp, #36]	@ 0x24
10013130:	f000 8541 	beq.w	10013bb6 <_vfiprintf_r+0xf36>
10013134:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013136:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
1001313a:	9304      	str	r3, [sp, #16]
1001313c:	2300      	movs	r3, #0
1001313e:	950a      	str	r5, [sp, #40]	@ 0x28
10013140:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013144:	e718      	b.n	10012f78 <_vfiprintf_r+0x2f8>
10013146:	9b02      	ldr	r3, [sp, #8]
10013148:	9406      	str	r4, [sp, #24]
1001314a:	069c      	lsls	r4, r3, #26
1001314c:	d56d      	bpl.n	1001322a <_vfiprintf_r+0x5aa>
1001314e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013150:	3307      	adds	r3, #7
10013152:	f023 0307 	bic.w	r3, r3, #7
10013156:	4619      	mov	r1, r3
10013158:	685a      	ldr	r2, [r3, #4]
1001315a:	f851 3b08 	ldr.w	r3, [r1], #8
1001315e:	910a      	str	r1, [sp, #40]	@ 0x28
10013160:	4611      	mov	r1, r2
10013162:	2a00      	cmp	r2, #0
10013164:	f2c0 8137 	blt.w	100133d6 <_vfiprintf_r+0x756>
10013168:	9a05      	ldr	r2, [sp, #20]
1001316a:	3201      	adds	r2, #1
1001316c:	f000 8140 	beq.w	100133f0 <_vfiprintf_r+0x770>
10013170:	9a02      	ldr	r2, [sp, #8]
10013172:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
10013176:	9202      	str	r2, [sp, #8]
10013178:	ea53 0201 	orrs.w	r2, r3, r1
1001317c:	f040 8138 	bne.w	100133f0 <_vfiprintf_r+0x770>
10013180:	9b05      	ldr	r3, [sp, #20]
10013182:	2b00      	cmp	r3, #0
10013184:	f040 8508 	bne.w	10013b98 <_vfiprintf_r+0xf18>
10013188:	9304      	str	r3, [sp, #16]
1001318a:	9309      	str	r3, [sp, #36]	@ 0x24
1001318c:	ac46      	add	r4, sp, #280	@ 0x118
1001318e:	e141      	b.n	10013414 <_vfiprintf_r+0x794>
10013190:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013192:	f853 2b04 	ldr.w	r2, [r3], #4
10013196:	9208      	str	r2, [sp, #32]
10013198:	2a00      	cmp	r2, #0
1001319a:	f280 8327 	bge.w	100137ec <_vfiprintf_r+0xb6c>
1001319e:	9a08      	ldr	r2, [sp, #32]
100131a0:	930a      	str	r3, [sp, #40]	@ 0x28
100131a2:	4252      	negs	r2, r2
100131a4:	9208      	str	r2, [sp, #32]
100131a6:	9b02      	ldr	r3, [sp, #8]
100131a8:	7822      	ldrb	r2, [r4, #0]
100131aa:	f043 0304 	orr.w	r3, r3, #4
100131ae:	9302      	str	r3, [sp, #8]
100131b0:	e5ce      	b.n	10012d50 <_vfiprintf_r+0xd0>
100131b2:	9b02      	ldr	r3, [sp, #8]
100131b4:	9406      	str	r4, [sp, #24]
100131b6:	f043 0210 	orr.w	r2, r3, #16
100131ba:	f012 0120 	ands.w	r1, r2, #32
100131be:	f000 82e7 	beq.w	10013790 <_vfiprintf_r+0xb10>
100131c2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100131c4:	3307      	adds	r3, #7
100131c6:	f023 0307 	bic.w	r3, r3, #7
100131ca:	4618      	mov	r0, r3
100131cc:	6859      	ldr	r1, [r3, #4]
100131ce:	f850 3b08 	ldr.w	r3, [r0], #8
100131d2:	900a      	str	r0, [sp, #40]	@ 0x28
100131d4:	f422 6480 	bic.w	r4, r2, #1024	@ 0x400
100131d8:	9402      	str	r4, [sp, #8]
100131da:	9c05      	ldr	r4, [sp, #20]
100131dc:	2000      	movs	r0, #0
100131de:	3401      	adds	r4, #1
100131e0:	f88d 004b 	strb.w	r0, [sp, #75]	@ 0x4b
100131e4:	d05d      	beq.n	100132a2 <_vfiprintf_r+0x622>
100131e6:	ea53 0401 	orrs.w	r4, r3, r1
100131ea:	f422 6290 	bic.w	r2, r2, #1152	@ 0x480
100131ee:	f040 8414 	bne.w	10013a1a <_vfiprintf_r+0xd9a>
100131f2:	9c02      	ldr	r4, [sp, #8]
100131f4:	9202      	str	r2, [sp, #8]
100131f6:	9b05      	ldr	r3, [sp, #20]
100131f8:	2b00      	cmp	r3, #0
100131fa:	d14a      	bne.n	10013292 <_vfiprintf_r+0x612>
100131fc:	2800      	cmp	r0, #0
100131fe:	f040 82f0 	bne.w	100137e2 <_vfiprintf_r+0xb62>
10013202:	f014 0201 	ands.w	r2, r4, #1
10013206:	9209      	str	r2, [sp, #36]	@ 0x24
10013208:	f000 82f4 	beq.w	100137f4 <_vfiprintf_r+0xb74>
1001320c:	2330      	movs	r3, #48	@ 0x30
1001320e:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10013212:	9204      	str	r2, [sp, #16]
10013214:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10013218:	e0fc      	b.n	10013414 <_vfiprintf_r+0x794>
1001321a:	9b02      	ldr	r3, [sp, #8]
1001321c:	9406      	str	r4, [sp, #24]
1001321e:	f043 0310 	orr.w	r3, r3, #16
10013222:	9302      	str	r3, [sp, #8]
10013224:	9b02      	ldr	r3, [sp, #8]
10013226:	069c      	lsls	r4, r3, #26
10013228:	d491      	bmi.n	1001314e <_vfiprintf_r+0x4ce>
1001322a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001322c:	f852 3b04 	ldr.w	r3, [r2], #4
10013230:	920a      	str	r2, [sp, #40]	@ 0x28
10013232:	9a02      	ldr	r2, [sp, #8]
10013234:	06d0      	lsls	r0, r2, #27
10013236:	f100 82f2 	bmi.w	1001381e <_vfiprintf_r+0xb9e>
1001323a:	9a02      	ldr	r2, [sp, #8]
1001323c:	0651      	lsls	r1, r2, #25
1001323e:	f140 82ea 	bpl.w	10013816 <_vfiprintf_r+0xb96>
10013242:	f343 31c0 	sbfx	r1, r3, #15, #1
10013246:	460a      	mov	r2, r1
10013248:	b21b      	sxth	r3, r3
1001324a:	e78a      	b.n	10013162 <_vfiprintf_r+0x4e2>
1001324c:	9b02      	ldr	r3, [sp, #8]
1001324e:	9406      	str	r4, [sp, #24]
10013250:	f043 0410 	orr.w	r4, r3, #16
10013254:	f014 0120 	ands.w	r1, r4, #32
10013258:	f000 828b 	beq.w	10013772 <_vfiprintf_r+0xaf2>
1001325c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001325e:	3307      	adds	r3, #7
10013260:	f023 0307 	bic.w	r3, r3, #7
10013264:	461a      	mov	r2, r3
10013266:	6859      	ldr	r1, [r3, #4]
10013268:	f852 3b08 	ldr.w	r3, [r2], #8
1001326c:	920a      	str	r2, [sp, #40]	@ 0x28
1001326e:	2200      	movs	r2, #0
10013270:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10013274:	9a05      	ldr	r2, [sp, #20]
10013276:	3201      	adds	r2, #1
10013278:	f000 83d1 	beq.w	10013a1e <_vfiprintf_r+0xd9e>
1001327c:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10013280:	9202      	str	r2, [sp, #8]
10013282:	ea53 0201 	orrs.w	r2, r3, r1
10013286:	f040 80b3 	bne.w	100133f0 <_vfiprintf_r+0x770>
1001328a:	9b05      	ldr	r3, [sp, #20]
1001328c:	2001      	movs	r0, #1
1001328e:	2b00      	cmp	r3, #0
10013290:	d0b4      	beq.n	100131fc <_vfiprintf_r+0x57c>
10013292:	2801      	cmp	r0, #1
10013294:	f000 8480 	beq.w	10013b98 <_vfiprintf_r+0xf18>
10013298:	2300      	movs	r3, #0
1001329a:	2802      	cmp	r0, #2
1001329c:	4619      	mov	r1, r3
1001329e:	f000 8199 	beq.w	100135d4 <_vfiprintf_r+0x954>
100132a2:	ac46      	add	r4, sp, #280	@ 0x118
100132a4:	f003 0207 	and.w	r2, r3, #7
100132a8:	08db      	lsrs	r3, r3, #3
100132aa:	ea43 7341 	orr.w	r3, r3, r1, lsl #29
100132ae:	08c9      	lsrs	r1, r1, #3
100132b0:	3230      	adds	r2, #48	@ 0x30
100132b2:	ea53 0501 	orrs.w	r5, r3, r1
100132b6:	4620      	mov	r0, r4
100132b8:	f804 2d01 	strb.w	r2, [r4, #-1]!
100132bc:	d1f2      	bne.n	100132a4 <_vfiprintf_r+0x624>
100132be:	9b02      	ldr	r3, [sp, #8]
100132c0:	07dd      	lsls	r5, r3, #31
100132c2:	f140 8195 	bpl.w	100135f0 <_vfiprintf_r+0x970>
100132c6:	2a30      	cmp	r2, #48	@ 0x30
100132c8:	f000 8192 	beq.w	100135f0 <_vfiprintf_r+0x970>
100132cc:	2330      	movs	r3, #48	@ 0x30
100132ce:	9a05      	ldr	r2, [sp, #20]
100132d0:	f804 3c01 	strb.w	r3, [r4, #-1]
100132d4:	3802      	subs	r0, #2
100132d6:	ab46      	add	r3, sp, #280	@ 0x118
100132d8:	1a1b      	subs	r3, r3, r0
100132da:	429a      	cmp	r2, r3
100132dc:	bfb8      	it	lt
100132de:	461a      	movlt	r2, r3
100132e0:	9309      	str	r3, [sp, #36]	@ 0x24
100132e2:	4604      	mov	r4, r0
100132e4:	9204      	str	r2, [sp, #16]
100132e6:	e095      	b.n	10013414 <_vfiprintf_r+0x794>
100132e8:	7822      	ldrb	r2, [r4, #0]
100132ea:	9b02      	ldr	r3, [sp, #8]
100132ec:	2a68      	cmp	r2, #104	@ 0x68
100132ee:	f000 839d 	beq.w	10013a2c <_vfiprintf_r+0xdac>
100132f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100132f6:	9302      	str	r3, [sp, #8]
100132f8:	e52a      	b.n	10012d50 <_vfiprintf_r+0xd0>
100132fa:	9b02      	ldr	r3, [sp, #8]
100132fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100132fe:	9406      	str	r4, [sp, #24]
10013300:	f043 0302 	orr.w	r3, r3, #2
10013304:	9302      	str	r3, [sp, #8]
10013306:	f852 3b04 	ldr.w	r3, [r2], #4
1001330a:	920a      	str	r2, [sp, #40]	@ 0x28
1001330c:	f647 0230 	movw	r2, #30768	@ 0x7830
10013310:	f8ad 204c 	strh.w	r2, [sp, #76]	@ 0x4c
10013314:	4abb      	ldr	r2, [pc, #748]	@ (10013604 <_vfiprintf_r+0x984>)
10013316:	920d      	str	r2, [sp, #52]	@ 0x34
10013318:	2100      	movs	r1, #0
1001331a:	2200      	movs	r2, #0
1001331c:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
10013320:	9a05      	ldr	r2, [sp, #20]
10013322:	3201      	adds	r2, #1
10013324:	f000 8156 	beq.w	100135d4 <_vfiprintf_r+0x954>
10013328:	9c02      	ldr	r4, [sp, #8]
1001332a:	ea53 0001 	orrs.w	r0, r3, r1
1001332e:	f024 0280 	bic.w	r2, r4, #128	@ 0x80
10013332:	9202      	str	r2, [sp, #8]
10013334:	f040 814e 	bne.w	100135d4 <_vfiprintf_r+0x954>
10013338:	2002      	movs	r0, #2
1001333a:	e75c      	b.n	100131f6 <_vfiprintf_r+0x576>
1001333c:	9b02      	ldr	r3, [sp, #8]
1001333e:	9406      	str	r4, [sp, #24]
10013340:	069e      	lsls	r6, r3, #26
10013342:	f140 827e 	bpl.w	10013842 <_vfiprintf_r+0xbc2>
10013346:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013348:	9a07      	ldr	r2, [sp, #28]
1001334a:	681b      	ldr	r3, [r3, #0]
1001334c:	601a      	str	r2, [r3, #0]
1001334e:	17d2      	asrs	r2, r2, #31
10013350:	605a      	str	r2, [r3, #4]
10013352:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013354:	3304      	adds	r3, #4
10013356:	930a      	str	r3, [sp, #40]	@ 0x28
10013358:	e4d5      	b.n	10012d06 <_vfiprintf_r+0x86>
1001335a:	9b02      	ldr	r3, [sp, #8]
1001335c:	7822      	ldrb	r2, [r4, #0]
1001335e:	f043 0301 	orr.w	r3, r3, #1
10013362:	9302      	str	r3, [sp, #8]
10013364:	e4f4      	b.n	10012d50 <_vfiprintf_r+0xd0>
10013366:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001336a:	7822      	ldrb	r2, [r4, #0]
1001336c:	2b00      	cmp	r3, #0
1001336e:	f47f acef 	bne.w	10012d50 <_vfiprintf_r+0xd0>
10013372:	2320      	movs	r3, #32
10013374:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
10013378:	e4ea      	b.n	10012d50 <_vfiprintf_r+0xd0>
1001337a:	9b02      	ldr	r3, [sp, #8]
1001337c:	7822      	ldrb	r2, [r4, #0]
1001337e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10013382:	9302      	str	r3, [sp, #8]
10013384:	e4e4      	b.n	10012d50 <_vfiprintf_r+0xd0>
10013386:	4621      	mov	r1, r4
10013388:	f811 2b01 	ldrb.w	r2, [r1], #1
1001338c:	2a2a      	cmp	r2, #42	@ 0x2a
1001338e:	f000 8433 	beq.w	10013bf8 <_vfiprintf_r+0xf78>
10013392:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
10013396:	2b09      	cmp	r3, #9
10013398:	460c      	mov	r4, r1
1001339a:	f200 83f6 	bhi.w	10013b8a <_vfiprintf_r+0xf0a>
1001339e:	2200      	movs	r2, #0
100133a0:	4611      	mov	r1, r2
100133a2:	f814 2b01 	ldrb.w	r2, [r4], #1
100133a6:	eb01 0181 	add.w	r1, r1, r1, lsl #2
100133aa:	eb03 0141 	add.w	r1, r3, r1, lsl #1
100133ae:	f1a2 0330 	sub.w	r3, r2, #48	@ 0x30
100133b2:	2b09      	cmp	r3, #9
100133b4:	d9f5      	bls.n	100133a2 <_vfiprintf_r+0x722>
100133b6:	9105      	str	r1, [sp, #20]
100133b8:	e4cb      	b.n	10012d52 <_vfiprintf_r+0xd2>
100133ba:	232b      	movs	r3, #43	@ 0x2b
100133bc:	7822      	ldrb	r2, [r4, #0]
100133be:	f88d 304b 	strb.w	r3, [sp, #75]	@ 0x4b
100133c2:	e4c5      	b.n	10012d50 <_vfiprintf_r+0xd0>
100133c4:	7822      	ldrb	r2, [r4, #0]
100133c6:	9b02      	ldr	r3, [sp, #8]
100133c8:	2a6c      	cmp	r2, #108	@ 0x6c
100133ca:	f000 8336 	beq.w	10013a3a <_vfiprintf_r+0xdba>
100133ce:	f043 0310 	orr.w	r3, r3, #16
100133d2:	9302      	str	r3, [sp, #8]
100133d4:	e4bc      	b.n	10012d50 <_vfiprintf_r+0xd0>
100133d6:	222d      	movs	r2, #45	@ 0x2d
100133d8:	f88d 204b 	strb.w	r2, [sp, #75]	@ 0x4b
100133dc:	9a05      	ldr	r2, [sp, #20]
100133de:	425b      	negs	r3, r3
100133e0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100133e4:	3201      	adds	r2, #1
100133e6:	d003      	beq.n	100133f0 <_vfiprintf_r+0x770>
100133e8:	9a02      	ldr	r2, [sp, #8]
100133ea:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
100133ee:	9202      	str	r2, [sp, #8]
100133f0:	2b0a      	cmp	r3, #10
100133f2:	f171 0200 	sbcs.w	r2, r1, #0
100133f6:	f080 82bd 	bcs.w	10013974 <_vfiprintf_r+0xcf4>
100133fa:	3330      	adds	r3, #48	@ 0x30
100133fc:	b2db      	uxtb	r3, r3
100133fe:	f88d 3117 	strb.w	r3, [sp, #279]	@ 0x117
10013402:	9b05      	ldr	r3, [sp, #20]
10013404:	2b01      	cmp	r3, #1
10013406:	bfb8      	it	lt
10013408:	2301      	movlt	r3, #1
1001340a:	9304      	str	r3, [sp, #16]
1001340c:	2301      	movs	r3, #1
1001340e:	9309      	str	r3, [sp, #36]	@ 0x24
10013410:	f20d 1417 	addw	r4, sp, #279	@ 0x117
10013414:	2300      	movs	r3, #0
10013416:	930b      	str	r3, [sp, #44]	@ 0x2c
10013418:	f89d 304b 	ldrb.w	r3, [sp, #75]	@ 0x4b
1001341c:	2b00      	cmp	r3, #0
1001341e:	f43f adae 	beq.w	10012f7e <_vfiprintf_r+0x2fe>
10013422:	9b04      	ldr	r3, [sp, #16]
10013424:	3301      	adds	r3, #1
10013426:	9304      	str	r3, [sp, #16]
10013428:	e5a9      	b.n	10012f7e <_vfiprintf_r+0x2fe>
1001342a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001342c:	941d      	str	r4, [sp, #116]	@ 0x74
1001342e:	2201      	movs	r2, #1
10013430:	931e      	str	r3, [sp, #120]	@ 0x78
10013432:	931c      	str	r3, [sp, #112]	@ 0x70
10013434:	921b      	str	r2, [sp, #108]	@ 0x6c
10013436:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001343a:	f109 0908 	add.w	r9, r9, #8
1001343e:	e60c      	b.n	1001305a <_vfiprintf_r+0x3da>
10013440:	9b08      	ldr	r3, [sp, #32]
10013442:	9804      	ldr	r0, [sp, #16]
10013444:	1a1d      	subs	r5, r3, r0
10013446:	2d00      	cmp	r5, #0
10013448:	f77f ade7 	ble.w	1001301a <_vfiprintf_r+0x39a>
1001344c:	2d10      	cmp	r5, #16
1001344e:	f340 83cb 	ble.w	10013be8 <_vfiprintf_r+0xf68>
10013452:	f8df 81b4 	ldr.w	r8, [pc, #436]	@ 10013608 <_vfiprintf_r+0x988>
10013456:	4643      	mov	r3, r8
10013458:	2610      	movs	r6, #16
1001345a:	46a0      	mov	r8, r4
1001345c:	4661      	mov	r1, ip
1001345e:	461c      	mov	r4, r3
10013460:	e007      	b.n	10013472 <_vfiprintf_r+0x7f2>
10013462:	f102 0c02 	add.w	ip, r2, #2
10013466:	f109 0908 	add.w	r9, r9, #8
1001346a:	4602      	mov	r2, r0
1001346c:	3d10      	subs	r5, #16
1001346e:	2d10      	cmp	r5, #16
10013470:	dd1a      	ble.n	100134a8 <_vfiprintf_r+0x828>
10013472:	1c50      	adds	r0, r2, #1
10013474:	3110      	adds	r1, #16
10013476:	2807      	cmp	r0, #7
10013478:	e9c9 4600 	strd	r4, r6, [r9]
1001347c:	e9cd 011b 	strd	r0, r1, [sp, #108]	@ 0x6c
10013480:	ddef      	ble.n	10013462 <_vfiprintf_r+0x7e2>
10013482:	aa1a      	add	r2, sp, #104	@ 0x68
10013484:	2900      	cmp	r1, #0
10013486:	d07c      	beq.n	10013582 <_vfiprintf_r+0x902>
10013488:	9903      	ldr	r1, [sp, #12]
1001348a:	4658      	mov	r0, fp
1001348c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013490:	f7ff fbb0 	bl	10012bf4 <__sprint_r.part.0>
10013494:	2800      	cmp	r0, #0
10013496:	f47f ad4b 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
1001349a:	e9dd 211b 	ldrd	r2, r1, [sp, #108]	@ 0x6c
1001349e:	3d10      	subs	r5, #16
100134a0:	2d10      	cmp	r5, #16
100134a2:	f102 0c01 	add.w	ip, r2, #1
100134a6:	dce4      	bgt.n	10013472 <_vfiprintf_r+0x7f2>
100134a8:	4623      	mov	r3, r4
100134aa:	4660      	mov	r0, ip
100134ac:	4644      	mov	r4, r8
100134ae:	468c      	mov	ip, r1
100134b0:	4698      	mov	r8, r3
100134b2:	44ac      	add	ip, r5
100134b4:	2807      	cmp	r0, #7
100134b6:	e9cd 0c1b 	strd	r0, ip, [sp, #108]	@ 0x6c
100134ba:	f8c9 8000 	str.w	r8, [r9]
100134be:	f8c9 5004 	str.w	r5, [r9, #4]
100134c2:	f340 81a3 	ble.w	1001380c <_vfiprintf_r+0xb8c>
100134c6:	f1bc 0f00 	cmp.w	ip, #0
100134ca:	f000 8327 	beq.w	10013b1c <_vfiprintf_r+0xe9c>
100134ce:	9903      	ldr	r1, [sp, #12]
100134d0:	aa1a      	add	r2, sp, #104	@ 0x68
100134d2:	4658      	mov	r0, fp
100134d4:	f7ff fb8e 	bl	10012bf4 <__sprint_r.part.0>
100134d8:	2800      	cmp	r0, #0
100134da:	f47f ad29 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
100134de:	9b05      	ldr	r3, [sp, #20]
100134e0:	9809      	ldr	r0, [sp, #36]	@ 0x24
100134e2:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100134e6:	1a1d      	subs	r5, r3, r0
100134e8:	2d00      	cmp	r5, #0
100134ea:	f102 0101 	add.w	r1, r2, #1
100134ee:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100134f2:	f77f ad98 	ble.w	10013026 <_vfiprintf_r+0x3a6>
100134f6:	2d10      	cmp	r5, #16
100134f8:	f8df 810c 	ldr.w	r8, [pc, #268]	@ 10013608 <_vfiprintf_r+0x988>
100134fc:	dd2d      	ble.n	1001355a <_vfiprintf_r+0x8da>
100134fe:	462b      	mov	r3, r5
10013500:	2610      	movs	r6, #16
10013502:	4625      	mov	r5, r4
10013504:	4660      	mov	r0, ip
10013506:	461c      	mov	r4, r3
10013508:	e007      	b.n	1001351a <_vfiprintf_r+0x89a>
1001350a:	f102 0c02 	add.w	ip, r2, #2
1001350e:	f109 0908 	add.w	r9, r9, #8
10013512:	460a      	mov	r2, r1
10013514:	3c10      	subs	r4, #16
10013516:	2c10      	cmp	r4, #16
10013518:	dd1a      	ble.n	10013550 <_vfiprintf_r+0x8d0>
1001351a:	1c51      	adds	r1, r2, #1
1001351c:	4b3a      	ldr	r3, [pc, #232]	@ (10013608 <_vfiprintf_r+0x988>)
1001351e:	3010      	adds	r0, #16
10013520:	2907      	cmp	r1, #7
10013522:	e9c9 3600 	strd	r3, r6, [r9]
10013526:	e9cd 101b 	strd	r1, r0, [sp, #108]	@ 0x6c
1001352a:	ddee      	ble.n	1001350a <_vfiprintf_r+0x88a>
1001352c:	aa1a      	add	r2, sp, #104	@ 0x68
1001352e:	b310      	cbz	r0, 10013576 <_vfiprintf_r+0x8f6>
10013530:	9903      	ldr	r1, [sp, #12]
10013532:	4658      	mov	r0, fp
10013534:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013538:	f7ff fb5c 	bl	10012bf4 <__sprint_r.part.0>
1001353c:	2800      	cmp	r0, #0
1001353e:	f47f acf7 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
10013542:	e9dd 201b 	ldrd	r2, r0, [sp, #108]	@ 0x6c
10013546:	3c10      	subs	r4, #16
10013548:	2c10      	cmp	r4, #16
1001354a:	f102 0c01 	add.w	ip, r2, #1
1001354e:	dce4      	bgt.n	1001351a <_vfiprintf_r+0x89a>
10013550:	4623      	mov	r3, r4
10013552:	4661      	mov	r1, ip
10013554:	462c      	mov	r4, r5
10013556:	4684      	mov	ip, r0
10013558:	461d      	mov	r5, r3
1001355a:	44ac      	add	ip, r5
1001355c:	2907      	cmp	r1, #7
1001355e:	e9cd 1c1b 	strd	r1, ip, [sp, #108]	@ 0x6c
10013562:	f8c9 8000 	str.w	r8, [r9]
10013566:	f8c9 5004 	str.w	r5, [r9, #4]
1001356a:	f300 80ec 	bgt.w	10013746 <_vfiprintf_r+0xac6>
1001356e:	f109 0908 	add.w	r9, r9, #8
10013572:	3101      	adds	r1, #1
10013574:	e557      	b.n	10013026 <_vfiprintf_r+0x3a6>
10013576:	f04f 0c01 	mov.w	ip, #1
1001357a:	4602      	mov	r2, r0
1001357c:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013580:	e7c8      	b.n	10013514 <_vfiprintf_r+0x894>
10013582:	f04f 0c01 	mov.w	ip, #1
10013586:	460a      	mov	r2, r1
10013588:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001358c:	e76e      	b.n	1001346c <_vfiprintf_r+0x7ec>
1001358e:	f1bc 0f00 	cmp.w	ip, #0
10013592:	d00f      	beq.n	100135b4 <_vfiprintf_r+0x934>
10013594:	9903      	ldr	r1, [sp, #12]
10013596:	9311      	str	r3, [sp, #68]	@ 0x44
10013598:	aa1a      	add	r2, sp, #104	@ 0x68
1001359a:	4658      	mov	r0, fp
1001359c:	f7ff fb2a 	bl	10012bf4 <__sprint_r.part.0>
100135a0:	2800      	cmp	r0, #0
100135a2:	f47f acc5 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
100135a6:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100135aa:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100135ac:	1c51      	adds	r1, r2, #1
100135ae:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100135b2:	e50f      	b.n	10012fd4 <_vfiprintf_r+0x354>
100135b4:	2b00      	cmp	r3, #0
100135b6:	f000 8155 	beq.w	10013864 <_vfiprintf_r+0xbe4>
100135ba:	2302      	movs	r3, #2
100135bc:	931e      	str	r3, [sp, #120]	@ 0x78
100135be:	469c      	mov	ip, r3
100135c0:	ab13      	add	r3, sp, #76	@ 0x4c
100135c2:	931d      	str	r3, [sp, #116]	@ 0x74
100135c4:	2101      	movs	r1, #1
100135c6:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100135ca:	460a      	mov	r2, r1
100135cc:	f109 0908 	add.w	r9, r9, #8
100135d0:	3101      	adds	r1, #1
100135d2:	e51e      	b.n	10013012 <_vfiprintf_r+0x392>
100135d4:	980d      	ldr	r0, [sp, #52]	@ 0x34
100135d6:	ac46      	add	r4, sp, #280	@ 0x118
100135d8:	f003 020f 	and.w	r2, r3, #15
100135dc:	091b      	lsrs	r3, r3, #4
100135de:	5c82      	ldrb	r2, [r0, r2]
100135e0:	f804 2d01 	strb.w	r2, [r4, #-1]!
100135e4:	ea43 7301 	orr.w	r3, r3, r1, lsl #28
100135e8:	0909      	lsrs	r1, r1, #4
100135ea:	ea53 0201 	orrs.w	r2, r3, r1
100135ee:	d1f3      	bne.n	100135d8 <_vfiprintf_r+0x958>
100135f0:	9a05      	ldr	r2, [sp, #20]
100135f2:	ab46      	add	r3, sp, #280	@ 0x118
100135f4:	1b1b      	subs	r3, r3, r4
100135f6:	429a      	cmp	r2, r3
100135f8:	bfb8      	it	lt
100135fa:	461a      	movlt	r2, r3
100135fc:	9309      	str	r3, [sp, #36]	@ 0x24
100135fe:	9204      	str	r2, [sp, #16]
10013600:	e708      	b.n	10013414 <_vfiprintf_r+0x794>
10013602:	bf00      	nop
10013604:	10017088 	.word	0x10017088
10013608:	100170dc 	.word	0x100170dc
1001360c:	2d10      	cmp	r5, #16
1001360e:	f340 82c0 	ble.w	10013b92 <_vfiprintf_r+0xf12>
10013612:	4eae      	ldr	r6, [pc, #696]	@ (100138cc <_vfiprintf_r+0xc4c>)
10013614:	9311      	str	r3, [sp, #68]	@ 0x44
10013616:	4649      	mov	r1, r9
10013618:	f04f 0810 	mov.w	r8, #16
1001361c:	46a1      	mov	r9, r4
1001361e:	4634      	mov	r4, r6
10013620:	4666      	mov	r6, ip
10013622:	e007      	b.n	10013634 <_vfiprintf_r+0x9b4>
10013624:	f102 0e02 	add.w	lr, r2, #2
10013628:	3108      	adds	r1, #8
1001362a:	4602      	mov	r2, r0
1001362c:	3d10      	subs	r5, #16
1001362e:	2d10      	cmp	r5, #16
10013630:	dd18      	ble.n	10013664 <_vfiprintf_r+0x9e4>
10013632:	1c50      	adds	r0, r2, #1
10013634:	3610      	adds	r6, #16
10013636:	2807      	cmp	r0, #7
10013638:	e9c1 4800 	strd	r4, r8, [r1]
1001363c:	e9cd 061b 	strd	r0, r6, [sp, #108]	@ 0x6c
10013640:	ddf0      	ble.n	10013624 <_vfiprintf_r+0x9a4>
10013642:	9903      	ldr	r1, [sp, #12]
10013644:	aa1a      	add	r2, sp, #104	@ 0x68
10013646:	4658      	mov	r0, fp
10013648:	b316      	cbz	r6, 10013690 <_vfiprintf_r+0xa10>
1001364a:	f7ff fad3 	bl	10012bf4 <__sprint_r.part.0>
1001364e:	2800      	cmp	r0, #0
10013650:	f47f ac6e 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
10013654:	e9dd 261b 	ldrd	r2, r6, [sp, #108]	@ 0x6c
10013658:	3d10      	subs	r5, #16
1001365a:	2d10      	cmp	r5, #16
1001365c:	f102 0e01 	add.w	lr, r2, #1
10013660:	a91d      	add	r1, sp, #116	@ 0x74
10013662:	dce6      	bgt.n	10013632 <_vfiprintf_r+0x9b2>
10013664:	9b11      	ldr	r3, [sp, #68]	@ 0x44
10013666:	46b4      	mov	ip, r6
10013668:	4626      	mov	r6, r4
1001366a:	464c      	mov	r4, r9
1001366c:	4689      	mov	r9, r1
1001366e:	44ac      	add	ip, r5
10013670:	f1be 0f07 	cmp.w	lr, #7
10013674:	e9cd ec1b 	strd	lr, ip, [sp, #108]	@ 0x6c
10013678:	f8c9 6000 	str.w	r6, [r9]
1001367c:	f8c9 5004 	str.w	r5, [r9, #4]
10013680:	f300 809a 	bgt.w	100137b8 <_vfiprintf_r+0xb38>
10013684:	f109 0908 	add.w	r9, r9, #8
10013688:	f10e 0101 	add.w	r1, lr, #1
1001368c:	4672      	mov	r2, lr
1001368e:	e48c      	b.n	10012faa <_vfiprintf_r+0x32a>
10013690:	4632      	mov	r2, r6
10013692:	f04f 0e01 	mov.w	lr, #1
10013696:	a91d      	add	r1, sp, #116	@ 0x74
10013698:	e7c8      	b.n	1001362c <_vfiprintf_r+0x9ac>
1001369a:	9a02      	ldr	r2, [sp, #8]
1001369c:	931b      	str	r3, [sp, #108]	@ 0x6c
1001369e:	0754      	lsls	r4, r2, #29
100136a0:	d548      	bpl.n	10013734 <_vfiprintf_r+0xab4>
100136a2:	9a08      	ldr	r2, [sp, #32]
100136a4:	9904      	ldr	r1, [sp, #16]
100136a6:	1a54      	subs	r4, r2, r1
100136a8:	2c00      	cmp	r4, #0
100136aa:	dd43      	ble.n	10013734 <_vfiprintf_r+0xab4>
100136ac:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100136b0:	2c10      	cmp	r4, #16
100136b2:	991b      	ldr	r1, [sp, #108]	@ 0x6c
100136b4:	f340 827c 	ble.w	10013bb0 <_vfiprintf_r+0xf30>
100136b8:	4e84      	ldr	r6, [pc, #528]	@ (100138cc <_vfiprintf_r+0xc4c>)
100136ba:	f8dd 800c 	ldr.w	r8, [sp, #12]
100136be:	2510      	movs	r5, #16
100136c0:	e006      	b.n	100136d0 <_vfiprintf_r+0xa50>
100136c2:	1c88      	adds	r0, r1, #2
100136c4:	f109 0908 	add.w	r9, r9, #8
100136c8:	4611      	mov	r1, r2
100136ca:	3c10      	subs	r4, #16
100136cc:	2c10      	cmp	r4, #16
100136ce:	dd19      	ble.n	10013704 <_vfiprintf_r+0xa84>
100136d0:	1c4a      	adds	r2, r1, #1
100136d2:	3310      	adds	r3, #16
100136d4:	2a07      	cmp	r2, #7
100136d6:	e9c9 6500 	strd	r6, r5, [r9]
100136da:	e9cd 231b 	strd	r2, r3, [sp, #108]	@ 0x6c
100136de:	ddf0      	ble.n	100136c2 <_vfiprintf_r+0xa42>
100136e0:	aa1a      	add	r2, sp, #104	@ 0x68
100136e2:	b313      	cbz	r3, 1001372a <_vfiprintf_r+0xaaa>
100136e4:	4641      	mov	r1, r8
100136e6:	4658      	mov	r0, fp
100136e8:	f7ff fa84 	bl	10012bf4 <__sprint_r.part.0>
100136ec:	2800      	cmp	r0, #0
100136ee:	f47f ac1f 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
100136f2:	e9dd 131b 	ldrd	r1, r3, [sp, #108]	@ 0x6c
100136f6:	3c10      	subs	r4, #16
100136f8:	2c10      	cmp	r4, #16
100136fa:	f101 0001 	add.w	r0, r1, #1
100136fe:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013702:	dce5      	bgt.n	100136d0 <_vfiprintf_r+0xa50>
10013704:	4423      	add	r3, r4
10013706:	2807      	cmp	r0, #7
10013708:	e9c9 6400 	strd	r6, r4, [r9]
1001370c:	e9cd 031b 	strd	r0, r3, [sp, #108]	@ 0x6c
10013710:	f77f acac 	ble.w	1001306c <_vfiprintf_r+0x3ec>
10013714:	b173      	cbz	r3, 10013734 <_vfiprintf_r+0xab4>
10013716:	9903      	ldr	r1, [sp, #12]
10013718:	aa1a      	add	r2, sp, #104	@ 0x68
1001371a:	4658      	mov	r0, fp
1001371c:	f7ff fa6a 	bl	10012bf4 <__sprint_r.part.0>
10013720:	2800      	cmp	r0, #0
10013722:	f47f ac05 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
10013726:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10013728:	e4a0      	b.n	1001306c <_vfiprintf_r+0x3ec>
1001372a:	2001      	movs	r0, #1
1001372c:	4619      	mov	r1, r3
1001372e:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013732:	e7ca      	b.n	100136ca <_vfiprintf_r+0xa4a>
10013734:	e9dd 3207 	ldrd	r3, r2, [sp, #28]
10013738:	9904      	ldr	r1, [sp, #16]
1001373a:	428a      	cmp	r2, r1
1001373c:	bfac      	ite	ge
1001373e:	189b      	addge	r3, r3, r2
10013740:	185b      	addlt	r3, r3, r1
10013742:	9307      	str	r3, [sp, #28]
10013744:	e49d      	b.n	10013082 <_vfiprintf_r+0x402>
10013746:	f1bc 0f00 	cmp.w	ip, #0
1001374a:	f43f ae6e 	beq.w	1001342a <_vfiprintf_r+0x7aa>
1001374e:	9903      	ldr	r1, [sp, #12]
10013750:	aa1a      	add	r2, sp, #104	@ 0x68
10013752:	4658      	mov	r0, fp
10013754:	f7ff fa4e 	bl	10012bf4 <__sprint_r.part.0>
10013758:	2800      	cmp	r0, #0
1001375a:	f47f abe9 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
1001375e:	991b      	ldr	r1, [sp, #108]	@ 0x6c
10013760:	f8dd c070 	ldr.w	ip, [sp, #112]	@ 0x70
10013764:	3101      	adds	r1, #1
10013766:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001376a:	e45c      	b.n	10013026 <_vfiprintf_r+0x3a6>
1001376c:	921b      	str	r2, [sp, #108]	@ 0x6c
1001376e:	f7ff bbd4 	b.w	10012f1a <_vfiprintf_r+0x29a>
10013772:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10013774:	f852 3b04 	ldr.w	r3, [r2], #4
10013778:	920a      	str	r2, [sp, #40]	@ 0x28
1001377a:	f014 0210 	ands.w	r2, r4, #16
1001377e:	f47f ad76 	bne.w	1001326e <_vfiprintf_r+0x5ee>
10013782:	f014 0040 	ands.w	r0, r4, #64	@ 0x40
10013786:	f000 816e 	beq.w	10013a66 <_vfiprintf_r+0xde6>
1001378a:	b29b      	uxth	r3, r3
1001378c:	4611      	mov	r1, r2
1001378e:	e56e      	b.n	1001326e <_vfiprintf_r+0x5ee>
10013790:	980a      	ldr	r0, [sp, #40]	@ 0x28
10013792:	f850 3b04 	ldr.w	r3, [r0], #4
10013796:	900a      	str	r0, [sp, #40]	@ 0x28
10013798:	f012 0010 	ands.w	r0, r2, #16
1001379c:	f47f ad1a 	bne.w	100131d4 <_vfiprintf_r+0x554>
100137a0:	f012 0440 	ands.w	r4, r2, #64	@ 0x40
100137a4:	f000 8167 	beq.w	10013a76 <_vfiprintf_r+0xdf6>
100137a8:	b29b      	uxth	r3, r3
100137aa:	4601      	mov	r1, r0
100137ac:	e512      	b.n	100131d4 <_vfiprintf_r+0x554>
100137ae:	2101      	movs	r1, #1
100137b0:	4662      	mov	r2, ip
100137b2:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100137b6:	e42c      	b.n	10013012 <_vfiprintf_r+0x392>
100137b8:	f1bc 0f00 	cmp.w	ip, #0
100137bc:	f000 8095 	beq.w	100138ea <_vfiprintf_r+0xc6a>
100137c0:	9903      	ldr	r1, [sp, #12]
100137c2:	9311      	str	r3, [sp, #68]	@ 0x44
100137c4:	aa1a      	add	r2, sp, #104	@ 0x68
100137c6:	4658      	mov	r0, fp
100137c8:	f7ff fa14 	bl	10012bf4 <__sprint_r.part.0>
100137cc:	2800      	cmp	r0, #0
100137ce:	f47f abaf 	bne.w	10012f30 <_vfiprintf_r+0x2b0>
100137d2:	e9dd 2c1b 	ldrd	r2, ip, [sp, #108]	@ 0x6c
100137d6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
100137d8:	1c51      	adds	r1, r2, #1
100137da:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
100137de:	f7ff bbe4 	b.w	10012faa <_vfiprintf_r+0x32a>
100137e2:	9b05      	ldr	r3, [sp, #20]
100137e4:	9304      	str	r3, [sp, #16]
100137e6:	9309      	str	r3, [sp, #36]	@ 0x24
100137e8:	ac46      	add	r4, sp, #280	@ 0x118
100137ea:	e613      	b.n	10013414 <_vfiprintf_r+0x794>
100137ec:	7822      	ldrb	r2, [r4, #0]
100137ee:	930a      	str	r3, [sp, #40]	@ 0x28
100137f0:	f7ff baae 	b.w	10012d50 <_vfiprintf_r+0xd0>
100137f4:	9b05      	ldr	r3, [sp, #20]
100137f6:	9304      	str	r3, [sp, #16]
100137f8:	ac46      	add	r4, sp, #280	@ 0x118
100137fa:	e60b      	b.n	10013414 <_vfiprintf_r+0x794>
100137fc:	9d03      	ldr	r5, [sp, #12]
100137fe:	6da8      	ldr	r0, [r5, #88]	@ 0x58
10013800:	f7fc fe1e 	bl	10010440 <__retarget_lock_acquire_recursive>
10013804:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
10013808:	f7ff ba59 	b.w	10012cbe <_vfiprintf_r+0x3e>
1001380c:	f109 0908 	add.w	r9, r9, #8
10013810:	1c41      	adds	r1, r0, #1
10013812:	4602      	mov	r2, r0
10013814:	e401      	b.n	1001301a <_vfiprintf_r+0x39a>
10013816:	9a02      	ldr	r2, [sp, #8]
10013818:	0592      	lsls	r2, r2, #22
1001381a:	f100 8185 	bmi.w	10013b28 <_vfiprintf_r+0xea8>
1001381e:	17d9      	asrs	r1, r3, #31
10013820:	460a      	mov	r2, r1
10013822:	e49e      	b.n	10013162 <_vfiprintf_r+0x4e2>
10013824:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10013826:	7822      	ldrb	r2, [r4, #0]
10013828:	2b00      	cmp	r3, #0
1001382a:	f43f aa91 	beq.w	10012d50 <_vfiprintf_r+0xd0>
1001382e:	781b      	ldrb	r3, [r3, #0]
10013830:	2b00      	cmp	r3, #0
10013832:	f43f aa8d 	beq.w	10012d50 <_vfiprintf_r+0xd0>
10013836:	9b02      	ldr	r3, [sp, #8]
10013838:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
1001383c:	9302      	str	r3, [sp, #8]
1001383e:	f7ff ba87 	b.w	10012d50 <_vfiprintf_r+0xd0>
10013842:	9b02      	ldr	r3, [sp, #8]
10013844:	06dd      	lsls	r5, r3, #27
10013846:	f100 80ff 	bmi.w	10013a48 <_vfiprintf_r+0xdc8>
1001384a:	9b02      	ldr	r3, [sp, #8]
1001384c:	065c      	lsls	r4, r3, #25
1001384e:	f100 8177 	bmi.w	10013b40 <_vfiprintf_r+0xec0>
10013852:	9b02      	ldr	r3, [sp, #8]
10013854:	0598      	lsls	r0, r3, #22
10013856:	f140 80f7 	bpl.w	10013a48 <_vfiprintf_r+0xdc8>
1001385a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001385c:	9a07      	ldr	r2, [sp, #28]
1001385e:	681b      	ldr	r3, [r3, #0]
10013860:	701a      	strb	r2, [r3, #0]
10013862:	e576      	b.n	10013352 <_vfiprintf_r+0x6d2>
10013864:	4662      	mov	r2, ip
10013866:	2101      	movs	r1, #1
10013868:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
1001386c:	f7ff bbd1 	b.w	10013012 <_vfiprintf_r+0x392>
10013870:	9406      	str	r4, [sp, #24]
10013872:	9c02      	ldr	r4, [sp, #8]
10013874:	e4ee      	b.n	10013254 <_vfiprintf_r+0x5d4>
10013876:	9a02      	ldr	r2, [sp, #8]
10013878:	9406      	str	r4, [sp, #24]
1001387a:	e49e      	b.n	100131ba <_vfiprintf_r+0x53a>
1001387c:	4b14      	ldr	r3, [pc, #80]	@ (100138d0 <_vfiprintf_r+0xc50>)
1001387e:	9406      	str	r4, [sp, #24]
10013880:	930d      	str	r3, [sp, #52]	@ 0x34
10013882:	9b02      	ldr	r3, [sp, #8]
10013884:	f013 0120 	ands.w	r1, r3, #32
10013888:	d064      	beq.n	10013954 <_vfiprintf_r+0xcd4>
1001388a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
1001388c:	3307      	adds	r3, #7
1001388e:	f023 0307 	bic.w	r3, r3, #7
10013892:	4618      	mov	r0, r3
10013894:	6859      	ldr	r1, [r3, #4]
10013896:	f850 3b08 	ldr.w	r3, [r0], #8
1001389a:	900a      	str	r0, [sp, #40]	@ 0x28
1001389c:	9c02      	ldr	r4, [sp, #8]
1001389e:	07e6      	lsls	r6, r4, #31
100138a0:	d50a      	bpl.n	100138b8 <_vfiprintf_r+0xc38>
100138a2:	ea53 0001 	orrs.w	r0, r3, r1
100138a6:	d007      	beq.n	100138b8 <_vfiprintf_r+0xc38>
100138a8:	f88d 204d 	strb.w	r2, [sp, #77]	@ 0x4d
100138ac:	f044 0202 	orr.w	r2, r4, #2
100138b0:	9202      	str	r2, [sp, #8]
100138b2:	2230      	movs	r2, #48	@ 0x30
100138b4:	f88d 204c 	strb.w	r2, [sp, #76]	@ 0x4c
100138b8:	9a02      	ldr	r2, [sp, #8]
100138ba:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
100138be:	9202      	str	r2, [sp, #8]
100138c0:	e52b      	b.n	1001331a <_vfiprintf_r+0x69a>
100138c2:	4b04      	ldr	r3, [pc, #16]	@ (100138d4 <_vfiprintf_r+0xc54>)
100138c4:	9406      	str	r4, [sp, #24]
100138c6:	930d      	str	r3, [sp, #52]	@ 0x34
100138c8:	e7db      	b.n	10013882 <_vfiprintf_r+0xc02>
100138ca:	bf00      	nop
100138cc:	100170ec 	.word	0x100170ec
100138d0:	1001709c 	.word	0x1001709c
100138d4:	10017088 	.word	0x10017088
100138d8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
100138da:	681b      	ldr	r3, [r3, #0]
100138dc:	f88d 30b4 	strb.w	r3, [sp, #180]	@ 0xb4
100138e0:	2301      	movs	r3, #1
100138e2:	9304      	str	r3, [sp, #16]
100138e4:	9309      	str	r3, [sp, #36]	@ 0x24
100138e6:	ac2d      	add	r4, sp, #180	@ 0xb4
100138e8:	e428      	b.n	1001313c <_vfiprintf_r+0x4bc>
100138ea:	f89d 204b 	ldrb.w	r2, [sp, #75]	@ 0x4b
100138ee:	2a00      	cmp	r2, #0
100138f0:	f000 8120 	beq.w	10013b34 <_vfiprintf_r+0xeb4>
100138f4:	2101      	movs	r1, #1
100138f6:	f10d 024b 	add.w	r2, sp, #75	@ 0x4b
100138fa:	911e      	str	r1, [sp, #120]	@ 0x78
100138fc:	921d      	str	r2, [sp, #116]	@ 0x74
100138fe:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013902:	468c      	mov	ip, r1
10013904:	f7ff bb62 	b.w	10012fcc <_vfiprintf_r+0x34c>
10013908:	2208      	movs	r2, #8
1001390a:	2100      	movs	r1, #0
1001390c:	a818      	add	r0, sp, #96	@ 0x60
1001390e:	9415      	str	r4, [sp, #84]	@ 0x54
10013910:	f7fc fd04 	bl	1001031c <memset>
10013914:	f8dd 8014 	ldr.w	r8, [sp, #20]
10013918:	f1b8 3fff 	cmp.w	r8, #4294967295	@ 0xffffffff
1001391c:	f000 80b9 	beq.w	10013a92 <_vfiprintf_r+0xe12>
10013920:	2500      	movs	r5, #0
10013922:	9404      	str	r4, [sp, #16]
10013924:	462c      	mov	r4, r5
10013926:	e00c      	b.n	10013942 <_vfiprintf_r+0xcc2>
10013928:	a92d      	add	r1, sp, #180	@ 0xb4
1001392a:	4658      	mov	r0, fp
1001392c:	f000 fa7e 	bl	10013e2c <_wcrtomb_r>
10013930:	1c41      	adds	r1, r0, #1
10013932:	4420      	add	r0, r4
10013934:	f000 813f 	beq.w	10013bb6 <_vfiprintf_r+0xf36>
10013938:	4540      	cmp	r0, r8
1001393a:	dc08      	bgt.n	1001394e <_vfiprintf_r+0xcce>
1001393c:	f000 8158 	beq.w	10013bf0 <_vfiprintf_r+0xf70>
10013940:	4604      	mov	r4, r0
10013942:	9a15      	ldr	r2, [sp, #84]	@ 0x54
10013944:	5952      	ldr	r2, [r2, r5]
10013946:	ab18      	add	r3, sp, #96	@ 0x60
10013948:	3504      	adds	r5, #4
1001394a:	2a00      	cmp	r2, #0
1001394c:	d1ec      	bne.n	10013928 <_vfiprintf_r+0xca8>
1001394e:	9409      	str	r4, [sp, #36]	@ 0x24
10013950:	9c04      	ldr	r4, [sp, #16]
10013952:	e0ac      	b.n	10013aae <_vfiprintf_r+0xe2e>
10013954:	980a      	ldr	r0, [sp, #40]	@ 0x28
10013956:	f850 3b04 	ldr.w	r3, [r0], #4
1001395a:	900a      	str	r0, [sp, #40]	@ 0x28
1001395c:	9802      	ldr	r0, [sp, #8]
1001395e:	f010 0010 	ands.w	r0, r0, #16
10013962:	d19b      	bne.n	1001389c <_vfiprintf_r+0xc1c>
10013964:	9902      	ldr	r1, [sp, #8]
10013966:	f011 0440 	ands.w	r4, r1, #64	@ 0x40
1001396a:	f000 808b 	beq.w	10013a84 <_vfiprintf_r+0xe04>
1001396e:	b29b      	uxth	r3, r3
10013970:	4601      	mov	r1, r0
10013972:	e793      	b.n	1001389c <_vfiprintf_r+0xc1c>
10013974:	9a02      	ldr	r2, [sp, #8]
10013976:	f8cd 9010 	str.w	r9, [sp, #16]
1001397a:	ac46      	add	r4, sp, #280	@ 0x118
1001397c:	f402 6280 	and.w	r2, r2, #1024	@ 0x400
10013980:	46a1      	mov	r9, r4
10013982:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
10013986:	4ea5      	ldr	r6, [pc, #660]	@ (10013c1c <_vfiprintf_r+0xf9c>)
10013988:	f8dd b038 	ldr.w	fp, [sp, #56]	@ 0x38
1001398c:	f04f 0c00 	mov.w	ip, #0
10013990:	4614      	mov	r4, r2
10013992:	e005      	b.n	100139a0 <_vfiprintf_r+0xd20>
10013994:	2b0a      	cmp	r3, #10
10013996:	f171 0100 	sbcs.w	r1, r1, #0
1001399a:	d336      	bcc.n	10013a0a <_vfiprintf_r+0xd8a>
1001399c:	4643      	mov	r3, r8
1001399e:	4629      	mov	r1, r5
100139a0:	185a      	adds	r2, r3, r1
100139a2:	f142 0200 	adc.w	r2, r2, #0
100139a6:	fba6 0502 	umull	r0, r5, r6, r2
100139aa:	f025 0003 	bic.w	r0, r5, #3
100139ae:	eb00 0095 	add.w	r0, r0, r5, lsr #2
100139b2:	1a12      	subs	r2, r2, r0
100139b4:	1a98      	subs	r0, r3, r2
100139b6:	f04f 35cc 	mov.w	r5, #3435973836	@ 0xcccccccc
100139ba:	f161 0e00 	sbc.w	lr, r1, #0
100139be:	fb05 f500 	mul.w	r5, r5, r0
100139c2:	fb06 550e 	mla	r5, r6, lr, r5
100139c6:	fba0 8006 	umull	r8, r0, r0, r6
100139ca:	4405      	add	r5, r0
100139cc:	f008 0e01 	and.w	lr, r8, #1
100139d0:	2005      	movs	r0, #5
100139d2:	fbae 0e00 	umull	r0, lr, lr, r0
100139d6:	1880      	adds	r0, r0, r2
100139d8:	ea4f 0858 	mov.w	r8, r8, lsr #1
100139dc:	3030      	adds	r0, #48	@ 0x30
100139de:	f809 0c01 	strb.w	r0, [r9, #-1]
100139e2:	ea48 78c5 	orr.w	r8, r8, r5, lsl #31
100139e6:	f10c 0c01 	add.w	ip, ip, #1
100139ea:	f109 39ff 	add.w	r9, r9, #4294967295	@ 0xffffffff
100139ee:	086d      	lsrs	r5, r5, #1
100139f0:	2c00      	cmp	r4, #0
100139f2:	d0cf      	beq.n	10013994 <_vfiprintf_r+0xd14>
100139f4:	f89b 2000 	ldrb.w	r2, [fp]
100139f8:	4562      	cmp	r2, ip
100139fa:	d1cb      	bne.n	10013994 <_vfiprintf_r+0xd14>
100139fc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
10013a00:	d0c8      	beq.n	10013994 <_vfiprintf_r+0xd14>
10013a02:	2b0a      	cmp	r3, #10
10013a04:	f171 0100 	sbcs.w	r1, r1, #0
10013a08:	d272      	bcs.n	10013af0 <_vfiprintf_r+0xe70>
10013a0a:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10013a0e:	464c      	mov	r4, r9
10013a10:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
10013a14:	f8dd 9010 	ldr.w	r9, [sp, #16]
10013a18:	e5ea      	b.n	100135f0 <_vfiprintf_r+0x970>
10013a1a:	9202      	str	r2, [sp, #8]
10013a1c:	e441      	b.n	100132a2 <_vfiprintf_r+0x622>
10013a1e:	9402      	str	r4, [sp, #8]
10013a20:	e4e6      	b.n	100133f0 <_vfiprintf_r+0x770>
10013a22:	4658      	mov	r0, fp
10013a24:	f7fc fde8 	bl	100105f8 <__sinit>
10013a28:	f7ff b940 	b.w	10012cac <_vfiprintf_r+0x2c>
10013a2c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
10013a30:	7862      	ldrb	r2, [r4, #1]
10013a32:	9302      	str	r3, [sp, #8]
10013a34:	3401      	adds	r4, #1
10013a36:	f7ff b98b 	b.w	10012d50 <_vfiprintf_r+0xd0>
10013a3a:	f043 0320 	orr.w	r3, r3, #32
10013a3e:	7862      	ldrb	r2, [r4, #1]
10013a40:	9302      	str	r3, [sp, #8]
10013a42:	3401      	adds	r4, #1
10013a44:	f7ff b984 	b.w	10012d50 <_vfiprintf_r+0xd0>
10013a48:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013a4a:	9a07      	ldr	r2, [sp, #28]
10013a4c:	681b      	ldr	r3, [r3, #0]
10013a4e:	601a      	str	r2, [r3, #0]
10013a50:	e47f      	b.n	10013352 <_vfiprintf_r+0x6d2>
10013a52:	9b05      	ldr	r3, [sp, #20]
10013a54:	4c72      	ldr	r4, [pc, #456]	@ (10013c20 <_vfiprintf_r+0xfa0>)
10013a56:	2b06      	cmp	r3, #6
10013a58:	bf28      	it	cs
10013a5a:	2306      	movcs	r3, #6
10013a5c:	e9cd 3609 	strd	r3, r6, [sp, #36]	@ 0x24
10013a60:	9304      	str	r3, [sp, #16]
10013a62:	f7ff ba89 	b.w	10012f78 <_vfiprintf_r+0x2f8>
10013a66:	f414 7100 	ands.w	r1, r4, #512	@ 0x200
10013a6a:	f43f ac00 	beq.w	1001326e <_vfiprintf_r+0x5ee>
10013a6e:	b2db      	uxtb	r3, r3
10013a70:	4601      	mov	r1, r0
10013a72:	f7ff bbfc 	b.w	1001326e <_vfiprintf_r+0x5ee>
10013a76:	f412 7100 	ands.w	r1, r2, #512	@ 0x200
10013a7a:	bf1c      	itt	ne
10013a7c:	b2db      	uxtbne	r3, r3
10013a7e:	4621      	movne	r1, r4
10013a80:	f7ff bba8 	b.w	100131d4 <_vfiprintf_r+0x554>
10013a84:	9902      	ldr	r1, [sp, #8]
10013a86:	f411 7100 	ands.w	r1, r1, #512	@ 0x200
10013a8a:	bf1c      	itt	ne
10013a8c:	b2db      	uxtbne	r3, r3
10013a8e:	4621      	movne	r1, r4
10013a90:	e704      	b.n	1001389c <_vfiprintf_r+0xc1c>
10013a92:	ab18      	add	r3, sp, #96	@ 0x60
10013a94:	9300      	str	r3, [sp, #0]
10013a96:	2300      	movs	r3, #0
10013a98:	4619      	mov	r1, r3
10013a9a:	aa15      	add	r2, sp, #84	@ 0x54
10013a9c:	4658      	mov	r0, fp
10013a9e:	f000 fb23 	bl	100140e8 <_wcsrtombs_r>
10013aa2:	4603      	mov	r3, r0
10013aa4:	3301      	adds	r3, #1
10013aa6:	9009      	str	r0, [sp, #36]	@ 0x24
10013aa8:	f000 8085 	beq.w	10013bb6 <_vfiprintf_r+0xf36>
10013aac:	9415      	str	r4, [sp, #84]	@ 0x54
10013aae:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013ab0:	b373      	cbz	r3, 10013b10 <_vfiprintf_r+0xe90>
10013ab2:	2b63      	cmp	r3, #99	@ 0x63
10013ab4:	dc49      	bgt.n	10013b4a <_vfiprintf_r+0xeca>
10013ab6:	2300      	movs	r3, #0
10013ab8:	930b      	str	r3, [sp, #44]	@ 0x2c
10013aba:	ac2d      	add	r4, sp, #180	@ 0xb4
10013abc:	2208      	movs	r2, #8
10013abe:	2100      	movs	r1, #0
10013ac0:	a818      	add	r0, sp, #96	@ 0x60
10013ac2:	f7fc fc2b 	bl	1001031c <memset>
10013ac6:	9d09      	ldr	r5, [sp, #36]	@ 0x24
10013ac8:	ab18      	add	r3, sp, #96	@ 0x60
10013aca:	9300      	str	r3, [sp, #0]
10013acc:	aa15      	add	r2, sp, #84	@ 0x54
10013ace:	462b      	mov	r3, r5
10013ad0:	4621      	mov	r1, r4
10013ad2:	4658      	mov	r0, fp
10013ad4:	f000 fb08 	bl	100140e8 <_wcsrtombs_r>
10013ad8:	4285      	cmp	r5, r0
10013ada:	f040 8098 	bne.w	10013c0e <_vfiprintf_r+0xf8e>
10013ade:	9a09      	ldr	r2, [sp, #36]	@ 0x24
10013ae0:	960a      	str	r6, [sp, #40]	@ 0x28
10013ae2:	2300      	movs	r3, #0
10013ae4:	54a3      	strb	r3, [r4, r2]
10013ae6:	9305      	str	r3, [sp, #20]
10013ae8:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
10013aec:	9304      	str	r3, [sp, #16]
10013aee:	e493      	b.n	10013418 <_vfiprintf_r+0x798>
10013af0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10013af2:	9910      	ldr	r1, [sp, #64]	@ 0x40
10013af4:	eba9 0903 	sub.w	r9, r9, r3
10013af8:	461a      	mov	r2, r3
10013afa:	4648      	mov	r0, r9
10013afc:	f001 fdba 	bl	10015674 <strncpy>
10013b00:	f89b 3001 	ldrb.w	r3, [fp, #1]
10013b04:	b10b      	cbz	r3, 10013b0a <_vfiprintf_r+0xe8a>
10013b06:	f10b 0b01 	add.w	fp, fp, #1
10013b0a:	f04f 0c00 	mov.w	ip, #0
10013b0e:	e745      	b.n	1001399c <_vfiprintf_r+0xd1c>
10013b10:	9b09      	ldr	r3, [sp, #36]	@ 0x24
10013b12:	960a      	str	r6, [sp, #40]	@ 0x28
10013b14:	e9cd 3304 	strd	r3, r3, [sp, #16]
10013b18:	930b      	str	r3, [sp, #44]	@ 0x2c
10013b1a:	e47d      	b.n	10013418 <_vfiprintf_r+0x798>
10013b1c:	2101      	movs	r1, #1
10013b1e:	4662      	mov	r2, ip
10013b20:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013b24:	f7ff ba79 	b.w	1001301a <_vfiprintf_r+0x39a>
10013b28:	f343 11c0 	sbfx	r1, r3, #7, #1
10013b2c:	460a      	mov	r2, r1
10013b2e:	b25b      	sxtb	r3, r3
10013b30:	f7ff bb17 	b.w	10013162 <_vfiprintf_r+0x4e2>
10013b34:	4662      	mov	r2, ip
10013b36:	2101      	movs	r1, #1
10013b38:	f10d 0974 	add.w	r9, sp, #116	@ 0x74
10013b3c:	f7ff ba4a 	b.w	10012fd4 <_vfiprintf_r+0x354>
10013b40:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013b42:	9a07      	ldr	r2, [sp, #28]
10013b44:	681b      	ldr	r3, [r3, #0]
10013b46:	801a      	strh	r2, [r3, #0]
10013b48:	e403      	b.n	10013352 <_vfiprintf_r+0x6d2>
10013b4a:	1c59      	adds	r1, r3, #1
10013b4c:	4658      	mov	r0, fp
10013b4e:	f7fc f921 	bl	1000fd94 <_malloc_r>
10013b52:	4604      	mov	r4, r0
10013b54:	2800      	cmp	r0, #0
10013b56:	d02e      	beq.n	10013bb6 <_vfiprintf_r+0xf36>
10013b58:	900b      	str	r0, [sp, #44]	@ 0x2c
10013b5a:	e7af      	b.n	10013abc <_vfiprintf_r+0xe3c>
10013b5c:	6d88      	ldr	r0, [r1, #88]	@ 0x58
10013b5e:	f7fc fc71 	bl	10010444 <__retarget_lock_release_recursive>
10013b62:	f7ff b99d 	b.w	10012ea0 <_vfiprintf_r+0x220>
10013b66:	9b05      	ldr	r3, [sp, #20]
10013b68:	9304      	str	r3, [sp, #16]
10013b6a:	9309      	str	r3, [sp, #36]	@ 0x24
10013b6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10013b6e:	960a      	str	r6, [sp, #40]	@ 0x28
10013b70:	9305      	str	r3, [sp, #20]
10013b72:	e451      	b.n	10013418 <_vfiprintf_r+0x798>
10013b74:	4620      	mov	r0, r4
10013b76:	9505      	str	r5, [sp, #20]
10013b78:	960a      	str	r6, [sp, #40]	@ 0x28
10013b7a:	f7fc fe01 	bl	10010780 <strlen>
10013b7e:	ea20 73e0 	bic.w	r3, r0, r0, asr #31
10013b82:	9009      	str	r0, [sp, #36]	@ 0x24
10013b84:	9304      	str	r3, [sp, #16]
10013b86:	950b      	str	r5, [sp, #44]	@ 0x2c
10013b88:	e446      	b.n	10013418 <_vfiprintf_r+0x798>
10013b8a:	2300      	movs	r3, #0
10013b8c:	9305      	str	r3, [sp, #20]
10013b8e:	f7ff b8e0 	b.w	10012d52 <_vfiprintf_r+0xd2>
10013b92:	4e24      	ldr	r6, [pc, #144]	@ (10013c24 <_vfiprintf_r+0xfa4>)
10013b94:	4686      	mov	lr, r0
10013b96:	e56a      	b.n	1001366e <_vfiprintf_r+0x9ee>
10013b98:	2330      	movs	r3, #48	@ 0x30
10013b9a:	e430      	b.n	100133fe <_vfiprintf_r+0x77e>
10013b9c:	9903      	ldr	r1, [sp, #12]
10013b9e:	aa1a      	add	r2, sp, #104	@ 0x68
10013ba0:	4658      	mov	r0, fp
10013ba2:	f7ff f827 	bl	10012bf4 <__sprint_r.part.0>
10013ba6:	2800      	cmp	r0, #0
10013ba8:	f43f a9a8 	beq.w	10012efc <_vfiprintf_r+0x27c>
10013bac:	f7ff b9c6 	b.w	10012f3c <_vfiprintf_r+0x2bc>
10013bb0:	4e1c      	ldr	r6, [pc, #112]	@ (10013c24 <_vfiprintf_r+0xfa4>)
10013bb2:	1c48      	adds	r0, r1, #1
10013bb4:	e5a6      	b.n	10013704 <_vfiprintf_r+0xa84>
10013bb6:	9a03      	ldr	r2, [sp, #12]
10013bb8:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
10013bbc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013bc0:	8193      	strh	r3, [r2, #12]
10013bc2:	f7ff b9be 	b.w	10012f42 <_vfiprintf_r+0x2c2>
10013bc6:	9b03      	ldr	r3, [sp, #12]
10013bc8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
10013bca:	07d9      	lsls	r1, r3, #31
10013bcc:	d407      	bmi.n	10013bde <_vfiprintf_r+0xf5e>
10013bce:	9b03      	ldr	r3, [sp, #12]
10013bd0:	899b      	ldrh	r3, [r3, #12]
10013bd2:	059a      	lsls	r2, r3, #22
10013bd4:	d403      	bmi.n	10013bde <_vfiprintf_r+0xf5e>
10013bd6:	9b03      	ldr	r3, [sp, #12]
10013bd8:	6d98      	ldr	r0, [r3, #88]	@ 0x58
10013bda:	f7fc fc33 	bl	10010444 <__retarget_lock_release_recursive>
10013bde:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10013be2:	9307      	str	r3, [sp, #28]
10013be4:	f7ff b9b5 	b.w	10012f52 <_vfiprintf_r+0x2d2>
10013be8:	f8df 803c 	ldr.w	r8, [pc, #60]	@ 10013c28 <_vfiprintf_r+0xfa8>
10013bec:	4608      	mov	r0, r1
10013bee:	e460      	b.n	100134b2 <_vfiprintf_r+0x832>
10013bf0:	e9dd 4304 	ldrd	r4, r3, [sp, #16]
10013bf4:	9309      	str	r3, [sp, #36]	@ 0x24
10013bf6:	e75a      	b.n	10013aae <_vfiprintf_r+0xe2e>
10013bf8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10013bfa:	7862      	ldrb	r2, [r4, #1]
10013bfc:	460c      	mov	r4, r1
10013bfe:	f853 1b04 	ldr.w	r1, [r3], #4
10013c02:	930a      	str	r3, [sp, #40]	@ 0x28
10013c04:	ea41 71e1 	orr.w	r1, r1, r1, asr #31
10013c08:	9105      	str	r1, [sp, #20]
10013c0a:	f7ff b8a1 	b.w	10012d50 <_vfiprintf_r+0xd0>
10013c0e:	9a03      	ldr	r2, [sp, #12]
10013c10:	8993      	ldrh	r3, [r2, #12]
10013c12:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013c16:	8193      	strh	r3, [r2, #12]
10013c18:	f7ff b98a 	b.w	10012f30 <_vfiprintf_r+0x2b0>
10013c1c:	cccccccd 	.word	0xcccccccd
10013c20:	100170b0 	.word	0x100170b0
10013c24:	100170ec 	.word	0x100170ec
10013c28:	100170dc 	.word	0x100170dc

10013c2c <__sbprintf>:
10013c2c:	b5f0      	push	{r4, r5, r6, r7, lr}
10013c2e:	461f      	mov	r7, r3
10013c30:	898b      	ldrh	r3, [r1, #12]
10013c32:	f2ad 4d6c 	subw	sp, sp, #1132	@ 0x46c
10013c36:	f023 0302 	bic.w	r3, r3, #2
10013c3a:	f8ad 300c 	strh.w	r3, [sp, #12]
10013c3e:	6e4b      	ldr	r3, [r1, #100]	@ 0x64
10013c40:	9319      	str	r3, [sp, #100]	@ 0x64
10013c42:	89cb      	ldrh	r3, [r1, #14]
10013c44:	f8ad 300e 	strh.w	r3, [sp, #14]
10013c48:	69cb      	ldr	r3, [r1, #28]
10013c4a:	9307      	str	r3, [sp, #28]
10013c4c:	6a4b      	ldr	r3, [r1, #36]	@ 0x24
10013c4e:	9309      	str	r3, [sp, #36]	@ 0x24
10013c50:	ab1a      	add	r3, sp, #104	@ 0x68
10013c52:	9300      	str	r3, [sp, #0]
10013c54:	9304      	str	r3, [sp, #16]
10013c56:	f44f 6380 	mov.w	r3, #1024	@ 0x400
10013c5a:	4615      	mov	r5, r2
10013c5c:	4606      	mov	r6, r0
10013c5e:	9302      	str	r3, [sp, #8]
10013c60:	9305      	str	r3, [sp, #20]
10013c62:	a816      	add	r0, sp, #88	@ 0x58
10013c64:	2300      	movs	r3, #0
10013c66:	460c      	mov	r4, r1
10013c68:	9306      	str	r3, [sp, #24]
10013c6a:	f7fc fbe5 	bl	10010438 <__retarget_lock_init_recursive>
10013c6e:	462a      	mov	r2, r5
10013c70:	463b      	mov	r3, r7
10013c72:	4669      	mov	r1, sp
10013c74:	4630      	mov	r0, r6
10013c76:	f7ff f803 	bl	10012c80 <_vfiprintf_r>
10013c7a:	1e05      	subs	r5, r0, #0
10013c7c:	db07      	blt.n	10013c8e <__sbprintf+0x62>
10013c7e:	4669      	mov	r1, sp
10013c80:	4630      	mov	r0, r6
10013c82:	f001 fa9f 	bl	100151c4 <_fflush_r>
10013c86:	2800      	cmp	r0, #0
10013c88:	bf18      	it	ne
10013c8a:	f04f 35ff 	movne.w	r5, #4294967295	@ 0xffffffff
10013c8e:	f8bd 300c 	ldrh.w	r3, [sp, #12]
10013c92:	065b      	lsls	r3, r3, #25
10013c94:	d503      	bpl.n	10013c9e <__sbprintf+0x72>
10013c96:	89a3      	ldrh	r3, [r4, #12]
10013c98:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013c9c:	81a3      	strh	r3, [r4, #12]
10013c9e:	9816      	ldr	r0, [sp, #88]	@ 0x58
10013ca0:	f7fc fbcc 	bl	1001043c <__retarget_lock_close_recursive>
10013ca4:	4628      	mov	r0, r5
10013ca6:	f20d 4d6c 	addw	sp, sp, #1132	@ 0x46c
10013caa:	bdf0      	pop	{r4, r5, r6, r7, pc}

10013cac <__register_exitproc>:
10013cac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10013cb0:	4d1b      	ldr	r5, [pc, #108]	@ (10013d20 <__register_exitproc+0x74>)
10013cb2:	4606      	mov	r6, r0
10013cb4:	6828      	ldr	r0, [r5, #0]
10013cb6:	4698      	mov	r8, r3
10013cb8:	460f      	mov	r7, r1
10013cba:	4691      	mov	r9, r2
10013cbc:	f7fc fbc0 	bl	10010440 <__retarget_lock_acquire_recursive>
10013cc0:	4b18      	ldr	r3, [pc, #96]	@ (10013d24 <__register_exitproc+0x78>)
10013cc2:	681c      	ldr	r4, [r3, #0]
10013cc4:	b31c      	cbz	r4, 10013d0e <__register_exitproc+0x62>
10013cc6:	6828      	ldr	r0, [r5, #0]
10013cc8:	6865      	ldr	r5, [r4, #4]
10013cca:	2d1f      	cmp	r5, #31
10013ccc:	dc22      	bgt.n	10013d14 <__register_exitproc+0x68>
10013cce:	b94e      	cbnz	r6, 10013ce4 <__register_exitproc+0x38>
10013cd0:	1c6b      	adds	r3, r5, #1
10013cd2:	3502      	adds	r5, #2
10013cd4:	6063      	str	r3, [r4, #4]
10013cd6:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10013cda:	f7fc fbb3 	bl	10010444 <__retarget_lock_release_recursive>
10013cde:	2000      	movs	r0, #0
10013ce0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
10013ce4:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10013ce8:	2301      	movs	r3, #1
10013cea:	f8c1 9088 	str.w	r9, [r1, #136]	@ 0x88
10013cee:	f8d4 2188 	ldr.w	r2, [r4, #392]	@ 0x188
10013cf2:	40ab      	lsls	r3, r5
10013cf4:	431a      	orrs	r2, r3
10013cf6:	2e02      	cmp	r6, #2
10013cf8:	f8c4 2188 	str.w	r2, [r4, #392]	@ 0x188
10013cfc:	f8c1 8108 	str.w	r8, [r1, #264]	@ 0x108
10013d00:	d1e6      	bne.n	10013cd0 <__register_exitproc+0x24>
10013d02:	f8d4 218c 	ldr.w	r2, [r4, #396]	@ 0x18c
10013d06:	431a      	orrs	r2, r3
10013d08:	f8c4 218c 	str.w	r2, [r4, #396]	@ 0x18c
10013d0c:	e7e0      	b.n	10013cd0 <__register_exitproc+0x24>
10013d0e:	4c06      	ldr	r4, [pc, #24]	@ (10013d28 <__register_exitproc+0x7c>)
10013d10:	601c      	str	r4, [r3, #0]
10013d12:	e7d8      	b.n	10013cc6 <__register_exitproc+0x1a>
10013d14:	f7fc fb96 	bl	10010444 <__retarget_lock_release_recursive>
10013d18:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013d1c:	e7e0      	b.n	10013ce0 <__register_exitproc+0x34>
10013d1e:	bf00      	nop
10013d20:	20000418 	.word	0x20000418
10013d24:	20000b78 	.word	0x20000b78
10013d28:	20000cc4 	.word	0x20000cc4

10013d2c <memmove>:
10013d2c:	4288      	cmp	r0, r1
10013d2e:	d90e      	bls.n	10013d4e <memmove+0x22>
10013d30:	188b      	adds	r3, r1, r2
10013d32:	4283      	cmp	r3, r0
10013d34:	d90b      	bls.n	10013d4e <memmove+0x22>
10013d36:	eb00 0c02 	add.w	ip, r0, r2
10013d3a:	2a00      	cmp	r2, #0
10013d3c:	d06e      	beq.n	10013e1c <memmove+0xf0>
10013d3e:	4662      	mov	r2, ip
10013d40:	f813 cd01 	ldrb.w	ip, [r3, #-1]!
10013d44:	f802 cd01 	strb.w	ip, [r2, #-1]!
10013d48:	4299      	cmp	r1, r3
10013d4a:	d1f9      	bne.n	10013d40 <memmove+0x14>
10013d4c:	4770      	bx	lr
10013d4e:	2a0f      	cmp	r2, #15
10013d50:	d80f      	bhi.n	10013d72 <memmove+0x46>
10013d52:	4603      	mov	r3, r0
10013d54:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10013d58:	2a00      	cmp	r2, #0
10013d5a:	d05f      	beq.n	10013e1c <memmove+0xf0>
10013d5c:	f10c 0c01 	add.w	ip, ip, #1
10013d60:	3b01      	subs	r3, #1
10013d62:	448c      	add	ip, r1
10013d64:	f811 2b01 	ldrb.w	r2, [r1], #1
10013d68:	f803 2f01 	strb.w	r2, [r3, #1]!
10013d6c:	4561      	cmp	r1, ip
10013d6e:	d1f9      	bne.n	10013d64 <memmove+0x38>
10013d70:	4770      	bx	lr
10013d72:	ea40 0301 	orr.w	r3, r0, r1
10013d76:	079b      	lsls	r3, r3, #30
10013d78:	d151      	bne.n	10013e1e <memmove+0xf2>
10013d7a:	f1a2 0310 	sub.w	r3, r2, #16
10013d7e:	b570      	push	{r4, r5, r6, lr}
10013d80:	f101 0c20 	add.w	ip, r1, #32
10013d84:	f023 050f 	bic.w	r5, r3, #15
10013d88:	f101 0e10 	add.w	lr, r1, #16
10013d8c:	f100 0410 	add.w	r4, r0, #16
10013d90:	44ac      	add	ip, r5
10013d92:	091b      	lsrs	r3, r3, #4
10013d94:	f85e 5c10 	ldr.w	r5, [lr, #-16]
10013d98:	f844 5c10 	str.w	r5, [r4, #-16]
10013d9c:	f85e 5c0c 	ldr.w	r5, [lr, #-12]
10013da0:	f844 5c0c 	str.w	r5, [r4, #-12]
10013da4:	f85e 5c08 	ldr.w	r5, [lr, #-8]
10013da8:	f844 5c08 	str.w	r5, [r4, #-8]
10013dac:	f85e 5c04 	ldr.w	r5, [lr, #-4]
10013db0:	f844 5c04 	str.w	r5, [r4, #-4]
10013db4:	f10e 0e10 	add.w	lr, lr, #16
10013db8:	45e6      	cmp	lr, ip
10013dba:	f104 0410 	add.w	r4, r4, #16
10013dbe:	d1e9      	bne.n	10013d94 <memmove+0x68>
10013dc0:	3301      	adds	r3, #1
10013dc2:	f012 0f0c 	tst.w	r2, #12
10013dc6:	eb01 1103 	add.w	r1, r1, r3, lsl #4
10013dca:	f002 040f 	and.w	r4, r2, #15
10013dce:	eb00 1303 	add.w	r3, r0, r3, lsl #4
10013dd2:	d028      	beq.n	10013e26 <memmove+0xfa>
10013dd4:	3c04      	subs	r4, #4
10013dd6:	f024 0603 	bic.w	r6, r4, #3
10013dda:	ea4f 0c94 	mov.w	ip, r4, lsr #2
10013dde:	441e      	add	r6, r3
10013de0:	1f1c      	subs	r4, r3, #4
10013de2:	468e      	mov	lr, r1
10013de4:	f85e 5b04 	ldr.w	r5, [lr], #4
10013de8:	f844 5f04 	str.w	r5, [r4, #4]!
10013dec:	42b4      	cmp	r4, r6
10013dee:	d1f9      	bne.n	10013de4 <memmove+0xb8>
10013df0:	f10c 0401 	add.w	r4, ip, #1
10013df4:	f002 0203 	and.w	r2, r2, #3
10013df8:	eb03 0384 	add.w	r3, r3, r4, lsl #2
10013dfc:	eb01 0184 	add.w	r1, r1, r4, lsl #2
10013e00:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10013e04:	b14a      	cbz	r2, 10013e1a <memmove+0xee>
10013e06:	f10c 0c01 	add.w	ip, ip, #1
10013e0a:	3b01      	subs	r3, #1
10013e0c:	448c      	add	ip, r1
10013e0e:	f811 2b01 	ldrb.w	r2, [r1], #1
10013e12:	f803 2f01 	strb.w	r2, [r3, #1]!
10013e16:	4561      	cmp	r1, ip
10013e18:	d1f9      	bne.n	10013e0e <memmove+0xe2>
10013e1a:	bd70      	pop	{r4, r5, r6, pc}
10013e1c:	4770      	bx	lr
10013e1e:	f102 3cff 	add.w	ip, r2, #4294967295	@ 0xffffffff
10013e22:	4603      	mov	r3, r0
10013e24:	e79a      	b.n	10013d5c <memmove+0x30>
10013e26:	4622      	mov	r2, r4
10013e28:	e7ea      	b.n	10013e00 <memmove+0xd4>
10013e2a:	bf00      	nop

10013e2c <_wcrtomb_r>:
10013e2c:	b570      	push	{r4, r5, r6, lr}
10013e2e:	4605      	mov	r5, r0
10013e30:	b084      	sub	sp, #16
10013e32:	b15b      	cbz	r3, 10013e4c <_wcrtomb_r+0x20>
10013e34:	461c      	mov	r4, r3
10013e36:	4b0f      	ldr	r3, [pc, #60]	@ (10013e74 <_wcrtomb_r+0x48>)
10013e38:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10013e3c:	4623      	mov	r3, r4
10013e3e:	b169      	cbz	r1, 10013e5c <_wcrtomb_r+0x30>
10013e40:	4628      	mov	r0, r5
10013e42:	47b0      	blx	r6
10013e44:	1c43      	adds	r3, r0, #1
10013e46:	d00f      	beq.n	10013e68 <_wcrtomb_r+0x3c>
10013e48:	b004      	add	sp, #16
10013e4a:	bd70      	pop	{r4, r5, r6, pc}
10013e4c:	4b09      	ldr	r3, [pc, #36]	@ (10013e74 <_wcrtomb_r+0x48>)
10013e4e:	f500 7482 	add.w	r4, r0, #260	@ 0x104
10013e52:	f8d3 60e0 	ldr.w	r6, [r3, #224]	@ 0xe0
10013e56:	4623      	mov	r3, r4
10013e58:	2900      	cmp	r1, #0
10013e5a:	d1f1      	bne.n	10013e40 <_wcrtomb_r+0x14>
10013e5c:	460a      	mov	r2, r1
10013e5e:	4628      	mov	r0, r5
10013e60:	a901      	add	r1, sp, #4
10013e62:	47b0      	blx	r6
10013e64:	1c43      	adds	r3, r0, #1
10013e66:	d1ef      	bne.n	10013e48 <_wcrtomb_r+0x1c>
10013e68:	2200      	movs	r2, #0
10013e6a:	238a      	movs	r3, #138	@ 0x8a
10013e6c:	6022      	str	r2, [r4, #0]
10013e6e:	602b      	str	r3, [r5, #0]
10013e70:	b004      	add	sp, #16
10013e72:	bd70      	pop	{r4, r5, r6, pc}
10013e74:	2000054c 	.word	0x2000054c

10013e78 <__locale_mb_cur_max>:
10013e78:	4b01      	ldr	r3, [pc, #4]	@ (10013e80 <__locale_mb_cur_max+0x8>)
10013e7a:	f893 0128 	ldrb.w	r0, [r3, #296]	@ 0x128
10013e7e:	4770      	bx	lr
10013e80:	2000054c 	.word	0x2000054c

10013e84 <_localeconv_r>:
10013e84:	4800      	ldr	r0, [pc, #0]	@ (10013e88 <_localeconv_r+0x4>)
10013e86:	4770      	bx	lr
10013e88:	2000063c 	.word	0x2000063c

10013e8c <_fclose_r>:
10013e8c:	b570      	push	{r4, r5, r6, lr}
10013e8e:	2900      	cmp	r1, #0
10013e90:	d03f      	beq.n	10013f12 <_fclose_r+0x86>
10013e92:	4605      	mov	r5, r0
10013e94:	460c      	mov	r4, r1
10013e96:	b110      	cbz	r0, 10013e9e <_fclose_r+0x12>
10013e98:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10013e9a:	2b00      	cmp	r3, #0
10013e9c:	d03c      	beq.n	10013f18 <_fclose_r+0x8c>
10013e9e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013ea0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10013ea4:	07de      	lsls	r6, r3, #31
10013ea6:	d432      	bmi.n	10013f0e <_fclose_r+0x82>
10013ea8:	0590      	lsls	r0, r2, #22
10013eaa:	d538      	bpl.n	10013f1e <_fclose_r+0x92>
10013eac:	4621      	mov	r1, r4
10013eae:	4628      	mov	r0, r5
10013eb0:	f001 f8f4 	bl	1001509c <__sflush_r>
10013eb4:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
10013eb6:	4606      	mov	r6, r0
10013eb8:	b133      	cbz	r3, 10013ec8 <_fclose_r+0x3c>
10013eba:	69e1      	ldr	r1, [r4, #28]
10013ebc:	4628      	mov	r0, r5
10013ebe:	4798      	blx	r3
10013ec0:	2800      	cmp	r0, #0
10013ec2:	bfb8      	it	lt
10013ec4:	f04f 36ff 	movlt.w	r6, #4294967295	@ 0xffffffff
10013ec8:	89a3      	ldrh	r3, [r4, #12]
10013eca:	061a      	lsls	r2, r3, #24
10013ecc:	d439      	bmi.n	10013f42 <_fclose_r+0xb6>
10013ece:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10013ed0:	b141      	cbz	r1, 10013ee4 <_fclose_r+0x58>
10013ed2:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10013ed6:	4299      	cmp	r1, r3
10013ed8:	d002      	beq.n	10013ee0 <_fclose_r+0x54>
10013eda:	4628      	mov	r0, r5
10013edc:	f7fc fd18 	bl	10010910 <_free_r>
10013ee0:	2300      	movs	r3, #0
10013ee2:	6323      	str	r3, [r4, #48]	@ 0x30
10013ee4:	6c61      	ldr	r1, [r4, #68]	@ 0x44
10013ee6:	b121      	cbz	r1, 10013ef2 <_fclose_r+0x66>
10013ee8:	4628      	mov	r0, r5
10013eea:	f7fc fd11 	bl	10010910 <_free_r>
10013eee:	2300      	movs	r3, #0
10013ef0:	6463      	str	r3, [r4, #68]	@ 0x44
10013ef2:	f7fc fb9f 	bl	10010634 <__sfp_lock_acquire>
10013ef6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013ef8:	2200      	movs	r2, #0
10013efa:	07db      	lsls	r3, r3, #31
10013efc:	81a2      	strh	r2, [r4, #12]
10013efe:	d51c      	bpl.n	10013f3a <_fclose_r+0xae>
10013f00:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013f02:	f7fc fa9b 	bl	1001043c <__retarget_lock_close_recursive>
10013f06:	f7fc fb9b 	bl	10010640 <__sfp_lock_release>
10013f0a:	4630      	mov	r0, r6
10013f0c:	bd70      	pop	{r4, r5, r6, pc}
10013f0e:	2a00      	cmp	r2, #0
10013f10:	d1cc      	bne.n	10013eac <_fclose_r+0x20>
10013f12:	2600      	movs	r6, #0
10013f14:	4630      	mov	r0, r6
10013f16:	bd70      	pop	{r4, r5, r6, pc}
10013f18:	f7fc fb6e 	bl	100105f8 <__sinit>
10013f1c:	e7bf      	b.n	10013e9e <_fclose_r+0x12>
10013f1e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013f20:	f7fc fa8e 	bl	10010440 <__retarget_lock_acquire_recursive>
10013f24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013f28:	2b00      	cmp	r3, #0
10013f2a:	d1bf      	bne.n	10013eac <_fclose_r+0x20>
10013f2c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10013f2e:	07d9      	lsls	r1, r3, #31
10013f30:	d4ef      	bmi.n	10013f12 <_fclose_r+0x86>
10013f32:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013f34:	f7fc fa86 	bl	10010444 <__retarget_lock_release_recursive>
10013f38:	e7eb      	b.n	10013f12 <_fclose_r+0x86>
10013f3a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10013f3c:	f7fc fa82 	bl	10010444 <__retarget_lock_release_recursive>
10013f40:	e7de      	b.n	10013f00 <_fclose_r+0x74>
10013f42:	6921      	ldr	r1, [r4, #16]
10013f44:	4628      	mov	r0, r5
10013f46:	f7fc fce3 	bl	10010910 <_free_r>
10013f4a:	e7c0      	b.n	10013ece <_fclose_r+0x42>

10013f4c <__swsetup_r>:
10013f4c:	b538      	push	{r3, r4, r5, lr}
10013f4e:	4b2e      	ldr	r3, [pc, #184]	@ (10014008 <__swsetup_r+0xbc>)
10013f50:	681b      	ldr	r3, [r3, #0]
10013f52:	4605      	mov	r5, r0
10013f54:	460c      	mov	r4, r1
10013f56:	b113      	cbz	r3, 10013f5e <__swsetup_r+0x12>
10013f58:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
10013f5a:	2a00      	cmp	r2, #0
10013f5c:	d04b      	beq.n	10013ff6 <__swsetup_r+0xaa>
10013f5e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013f62:	0718      	lsls	r0, r3, #28
10013f64:	d51c      	bpl.n	10013fa0 <__swsetup_r+0x54>
10013f66:	6922      	ldr	r2, [r4, #16]
10013f68:	b322      	cbz	r2, 10013fb4 <__swsetup_r+0x68>
10013f6a:	f013 0101 	ands.w	r1, r3, #1
10013f6e:	d007      	beq.n	10013f80 <__swsetup_r+0x34>
10013f70:	6961      	ldr	r1, [r4, #20]
10013f72:	2000      	movs	r0, #0
10013f74:	4249      	negs	r1, r1
10013f76:	60a0      	str	r0, [r4, #8]
10013f78:	61a1      	str	r1, [r4, #24]
10013f7a:	b13a      	cbz	r2, 10013f8c <__swsetup_r+0x40>
10013f7c:	2000      	movs	r0, #0
10013f7e:	bd38      	pop	{r3, r4, r5, pc}
10013f80:	0798      	lsls	r0, r3, #30
10013f82:	bf58      	it	pl
10013f84:	6961      	ldrpl	r1, [r4, #20]
10013f86:	60a1      	str	r1, [r4, #8]
10013f88:	2a00      	cmp	r2, #0
10013f8a:	d1f7      	bne.n	10013f7c <__swsetup_r+0x30>
10013f8c:	0619      	lsls	r1, r3, #24
10013f8e:	bf58      	it	pl
10013f90:	4610      	movpl	r0, r2
10013f92:	d5f4      	bpl.n	10013f7e <__swsetup_r+0x32>
10013f94:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10013f98:	81a3      	strh	r3, [r4, #12]
10013f9a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10013f9e:	bd38      	pop	{r3, r4, r5, pc}
10013fa0:	06d9      	lsls	r1, r3, #27
10013fa2:	d52c      	bpl.n	10013ffe <__swsetup_r+0xb2>
10013fa4:	075a      	lsls	r2, r3, #29
10013fa6:	d412      	bmi.n	10013fce <__swsetup_r+0x82>
10013fa8:	6922      	ldr	r2, [r4, #16]
10013faa:	f043 0308 	orr.w	r3, r3, #8
10013fae:	81a3      	strh	r3, [r4, #12]
10013fb0:	2a00      	cmp	r2, #0
10013fb2:	d1da      	bne.n	10013f6a <__swsetup_r+0x1e>
10013fb4:	f403 7120 	and.w	r1, r3, #640	@ 0x280
10013fb8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
10013fbc:	d0d5      	beq.n	10013f6a <__swsetup_r+0x1e>
10013fbe:	4621      	mov	r1, r4
10013fc0:	4628      	mov	r0, r5
10013fc2:	f000 f823 	bl	1001400c <__smakebuf_r>
10013fc6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013fca:	6922      	ldr	r2, [r4, #16]
10013fcc:	e7cd      	b.n	10013f6a <__swsetup_r+0x1e>
10013fce:	6b21      	ldr	r1, [r4, #48]	@ 0x30
10013fd0:	b151      	cbz	r1, 10013fe8 <__swsetup_r+0x9c>
10013fd2:	f104 0240 	add.w	r2, r4, #64	@ 0x40
10013fd6:	4291      	cmp	r1, r2
10013fd8:	d004      	beq.n	10013fe4 <__swsetup_r+0x98>
10013fda:	4628      	mov	r0, r5
10013fdc:	f7fc fc98 	bl	10010910 <_free_r>
10013fe0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10013fe4:	2200      	movs	r2, #0
10013fe6:	6322      	str	r2, [r4, #48]	@ 0x30
10013fe8:	6922      	ldr	r2, [r4, #16]
10013fea:	2100      	movs	r1, #0
10013fec:	e9c4 2100 	strd	r2, r1, [r4]
10013ff0:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
10013ff4:	e7d9      	b.n	10013faa <__swsetup_r+0x5e>
10013ff6:	4618      	mov	r0, r3
10013ff8:	f7fc fafe 	bl	100105f8 <__sinit>
10013ffc:	e7af      	b.n	10013f5e <__swsetup_r+0x12>
10013ffe:	2209      	movs	r2, #9
10014000:	602a      	str	r2, [r5, #0]
10014002:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10014006:	e7c7      	b.n	10013f98 <__swsetup_r+0x4c>
10014008:	2000041c 	.word	0x2000041c

1001400c <__smakebuf_r>:
1001400c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10014010:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
10014014:	460c      	mov	r4, r1
10014016:	0799      	lsls	r1, r3, #30
10014018:	b096      	sub	sp, #88	@ 0x58
1001401a:	d508      	bpl.n	1001402e <__smakebuf_r+0x22>
1001401c:	f104 0343 	add.w	r3, r4, #67	@ 0x43
10014020:	2201      	movs	r2, #1
10014022:	e9c4 3204 	strd	r3, r2, [r4, #16]
10014026:	6023      	str	r3, [r4, #0]
10014028:	b016      	add	sp, #88	@ 0x58
1001402a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1001402e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10014032:	2900      	cmp	r1, #0
10014034:	4606      	mov	r6, r0
10014036:	db26      	blt.n	10014086 <__smakebuf_r+0x7a>
10014038:	466a      	mov	r2, sp
1001403a:	f001 fb4f 	bl	100156dc <_fstat_r>
1001403e:	2800      	cmp	r0, #0
10014040:	db1f      	blt.n	10014082 <__smakebuf_r+0x76>
10014042:	9d01      	ldr	r5, [sp, #4]
10014044:	f405 4570 	and.w	r5, r5, #61440	@ 0xf000
10014048:	f5a5 5500 	sub.w	r5, r5, #8192	@ 0x2000
1001404c:	fab5 f585 	clz	r5, r5
10014050:	f44f 6880 	mov.w	r8, #1024	@ 0x400
10014054:	096d      	lsrs	r5, r5, #5
10014056:	f44f 6700 	mov.w	r7, #2048	@ 0x800
1001405a:	4641      	mov	r1, r8
1001405c:	4630      	mov	r0, r6
1001405e:	f7fb fe99 	bl	1000fd94 <_malloc_r>
10014062:	b1e8      	cbz	r0, 100140a0 <__smakebuf_r+0x94>
10014064:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014068:	f8c4 8014 	str.w	r8, [r4, #20]
1001406c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
10014070:	6020      	str	r0, [r4, #0]
10014072:	6120      	str	r0, [r4, #16]
10014074:	81a3      	strh	r3, [r4, #12]
10014076:	bb3d      	cbnz	r5, 100140c8 <__smakebuf_r+0xbc>
10014078:	433b      	orrs	r3, r7
1001407a:	81a3      	strh	r3, [r4, #12]
1001407c:	b016      	add	sp, #88	@ 0x58
1001407e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10014082:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10014086:	f013 0580 	ands.w	r5, r3, #128	@ 0x80
1001408a:	d019      	beq.n	100140c0 <__smakebuf_r+0xb4>
1001408c:	f04f 0840 	mov.w	r8, #64	@ 0x40
10014090:	2500      	movs	r5, #0
10014092:	4641      	mov	r1, r8
10014094:	4630      	mov	r0, r6
10014096:	462f      	mov	r7, r5
10014098:	f7fb fe7c 	bl	1000fd94 <_malloc_r>
1001409c:	2800      	cmp	r0, #0
1001409e:	d1e1      	bne.n	10014064 <__smakebuf_r+0x58>
100140a0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100140a4:	059a      	lsls	r2, r3, #22
100140a6:	d4bf      	bmi.n	10014028 <__smakebuf_r+0x1c>
100140a8:	f023 0303 	bic.w	r3, r3, #3
100140ac:	f104 0243 	add.w	r2, r4, #67	@ 0x43
100140b0:	f043 0302 	orr.w	r3, r3, #2
100140b4:	2101      	movs	r1, #1
100140b6:	e9c4 2104 	strd	r2, r1, [r4, #16]
100140ba:	81a3      	strh	r3, [r4, #12]
100140bc:	6022      	str	r2, [r4, #0]
100140be:	e7b3      	b.n	10014028 <__smakebuf_r+0x1c>
100140c0:	f44f 6880 	mov.w	r8, #1024	@ 0x400
100140c4:	462f      	mov	r7, r5
100140c6:	e7c8      	b.n	1001405a <__smakebuf_r+0x4e>
100140c8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100140cc:	4630      	mov	r0, r6
100140ce:	f001 fb1b 	bl	10015708 <_isatty_r>
100140d2:	b910      	cbnz	r0, 100140da <__smakebuf_r+0xce>
100140d4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100140d8:	e7ce      	b.n	10014078 <__smakebuf_r+0x6c>
100140da:	89a3      	ldrh	r3, [r4, #12]
100140dc:	f023 0303 	bic.w	r3, r3, #3
100140e0:	f043 0301 	orr.w	r3, r3, #1
100140e4:	b21b      	sxth	r3, r3
100140e6:	e7c7      	b.n	10014078 <__smakebuf_r+0x6c>

100140e8 <_wcsrtombs_r>:
100140e8:	b500      	push	{lr}
100140ea:	b083      	sub	sp, #12
100140ec:	f8dd c010 	ldr.w	ip, [sp, #16]
100140f0:	e9cd 3c00 	strd	r3, ip, [sp]
100140f4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
100140f8:	f002 f8b0 	bl	1001625c <_wcsnrtombs_r>
100140fc:	b003      	add	sp, #12
100140fe:	f85d fb04 	ldr.w	pc, [sp], #4
10014102:	bf00      	nop

10014104 <quorem>:
10014104:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014108:	6903      	ldr	r3, [r0, #16]
1001410a:	690c      	ldr	r4, [r1, #16]
1001410c:	42a3      	cmp	r3, r4
1001410e:	b083      	sub	sp, #12
10014110:	f2c0 808a 	blt.w	10014228 <quorem+0x124>
10014114:	3c01      	subs	r4, #1
10014116:	f101 0514 	add.w	r5, r1, #20
1001411a:	f100 0814 	add.w	r8, r0, #20
1001411e:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
10014122:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
10014126:	3301      	adds	r3, #1
10014128:	429a      	cmp	r2, r3
1001412a:	468e      	mov	lr, r1
1001412c:	4681      	mov	r9, r0
1001412e:	ea4f 0184 	mov.w	r1, r4, lsl #2
10014132:	eb05 0784 	add.w	r7, r5, r4, lsl #2
10014136:	eb08 0a84 	add.w	sl, r8, r4, lsl #2
1001413a:	fbb2 f6f3 	udiv	r6, r2, r3
1001413e:	d33a      	bcc.n	100141b6 <quorem+0xb2>
10014140:	e9cd 1500 	strd	r1, r5, [sp]
10014144:	2200      	movs	r2, #0
10014146:	46ac      	mov	ip, r5
10014148:	4640      	mov	r0, r8
1001414a:	4613      	mov	r3, r2
1001414c:	f85c 1b04 	ldr.w	r1, [ip], #4
10014150:	6805      	ldr	r5, [r0, #0]
10014152:	fa1f fb81 	uxth.w	fp, r1
10014156:	fb06 220b 	mla	r2, r6, fp, r2
1001415a:	0c09      	lsrs	r1, r1, #16
1001415c:	ea4f 4b12 	mov.w	fp, r2, lsr #16
10014160:	fb06 bb01 	mla	fp, r6, r1, fp
10014164:	b292      	uxth	r2, r2
10014166:	b2a9      	uxth	r1, r5
10014168:	1a89      	subs	r1, r1, r2
1001416a:	4419      	add	r1, r3
1001416c:	fa1f f38b 	uxth.w	r3, fp
10014170:	ebc3 4321 	rsb	r3, r3, r1, asr #16
10014174:	eb03 4315 	add.w	r3, r3, r5, lsr #16
10014178:	b289      	uxth	r1, r1
1001417a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
1001417e:	4567      	cmp	r7, ip
10014180:	f840 1b04 	str.w	r1, [r0], #4
10014184:	ea4f 421b 	mov.w	r2, fp, lsr #16
10014188:	ea4f 4323 	mov.w	r3, r3, asr #16
1001418c:	d2de      	bcs.n	1001414c <quorem+0x48>
1001418e:	e9dd 1500 	ldrd	r1, r5, [sp]
10014192:	f858 3001 	ldr.w	r3, [r8, r1]
10014196:	b973      	cbnz	r3, 100141b6 <quorem+0xb2>
10014198:	f1aa 0a04 	sub.w	sl, sl, #4
1001419c:	45d0      	cmp	r8, sl
1001419e:	d304      	bcc.n	100141aa <quorem+0xa6>
100141a0:	e007      	b.n	100141b2 <quorem+0xae>
100141a2:	45d0      	cmp	r8, sl
100141a4:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
100141a8:	d203      	bcs.n	100141b2 <quorem+0xae>
100141aa:	f85a 3904 	ldr.w	r3, [sl], #-4
100141ae:	2b00      	cmp	r3, #0
100141b0:	d0f7      	beq.n	100141a2 <quorem+0x9e>
100141b2:	f8c9 4010 	str.w	r4, [r9, #16]
100141b6:	4671      	mov	r1, lr
100141b8:	4648      	mov	r0, r9
100141ba:	f001 fe73 	bl	10015ea4 <__mcmp>
100141be:	2800      	cmp	r0, #0
100141c0:	db2e      	blt.n	10014220 <quorem+0x11c>
100141c2:	4641      	mov	r1, r8
100141c4:	2200      	movs	r2, #0
100141c6:	f855 0b04 	ldr.w	r0, [r5], #4
100141ca:	f8d1 c000 	ldr.w	ip, [r1]
100141ce:	fa1f fe80 	uxth.w	lr, r0
100141d2:	fa1f f38c 	uxth.w	r3, ip
100141d6:	eba3 030e 	sub.w	r3, r3, lr
100141da:	4413      	add	r3, r2
100141dc:	0c02      	lsrs	r2, r0, #16
100141de:	ebc2 4223 	rsb	r2, r2, r3, asr #16
100141e2:	eb02 421c 	add.w	r2, r2, ip, lsr #16
100141e6:	b29b      	uxth	r3, r3
100141e8:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
100141ec:	42af      	cmp	r7, r5
100141ee:	f841 3b04 	str.w	r3, [r1], #4
100141f2:	ea4f 4222 	mov.w	r2, r2, asr #16
100141f6:	d2e6      	bcs.n	100141c6 <quorem+0xc2>
100141f8:	f858 2024 	ldr.w	r2, [r8, r4, lsl #2]
100141fc:	eb08 0384 	add.w	r3, r8, r4, lsl #2
10014200:	b96a      	cbnz	r2, 1001421e <quorem+0x11a>
10014202:	3b04      	subs	r3, #4
10014204:	4598      	cmp	r8, r3
10014206:	d304      	bcc.n	10014212 <quorem+0x10e>
10014208:	e007      	b.n	1001421a <quorem+0x116>
1001420a:	4598      	cmp	r8, r3
1001420c:	f104 34ff 	add.w	r4, r4, #4294967295	@ 0xffffffff
10014210:	d203      	bcs.n	1001421a <quorem+0x116>
10014212:	f853 2904 	ldr.w	r2, [r3], #-4
10014216:	2a00      	cmp	r2, #0
10014218:	d0f7      	beq.n	1001420a <quorem+0x106>
1001421a:	f8c9 4010 	str.w	r4, [r9, #16]
1001421e:	3601      	adds	r6, #1
10014220:	4630      	mov	r0, r6
10014222:	b003      	add	sp, #12
10014224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014228:	2000      	movs	r0, #0
1001422a:	b003      	add	sp, #12
1001422c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

10014230 <_dtoa_r>:
10014230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10014234:	6b81      	ldr	r1, [r0, #56]	@ 0x38
10014236:	b09f      	sub	sp, #124	@ 0x7c
10014238:	4616      	mov	r6, r2
1001423a:	461f      	mov	r7, r3
1001423c:	e9cd 6704 	strd	r6, r7, [sp, #16]
10014240:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
10014242:	9003      	str	r0, [sp, #12]
10014244:	b149      	cbz	r1, 1001425a <_dtoa_r+0x2a>
10014246:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
10014248:	604a      	str	r2, [r1, #4]
1001424a:	2301      	movs	r3, #1
1001424c:	4093      	lsls	r3, r2
1001424e:	4604      	mov	r4, r0
10014250:	608b      	str	r3, [r1, #8]
10014252:	f001 fbc5 	bl	100159e0 <_Bfree>
10014256:	2300      	movs	r3, #0
10014258:	63a3      	str	r3, [r4, #56]	@ 0x38
1001425a:	f1b7 0900 	subs.w	r9, r7, #0
1001425e:	bfb4      	ite	lt
10014260:	2301      	movlt	r3, #1
10014262:	2300      	movge	r3, #0
10014264:	602b      	str	r3, [r5, #0]
10014266:	4b76      	ldr	r3, [pc, #472]	@ (10014440 <_dtoa_r+0x210>)
10014268:	bfbc      	itt	lt
1001426a:	f029 4900 	biclt.w	r9, r9, #2147483648	@ 0x80000000
1001426e:	f8cd 9014 	strlt.w	r9, [sp, #20]
10014272:	ea33 0309 	bics.w	r3, r3, r9
10014276:	f000 80aa 	beq.w	100143ce <_dtoa_r+0x19e>
1001427a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
1001427e:	2200      	movs	r2, #0
10014280:	4618      	mov	r0, r3
10014282:	4621      	mov	r1, r4
10014284:	2300      	movs	r3, #0
10014286:	e9cd 0108 	strd	r0, r1, [sp, #32]
1001428a:	f002 fc8f 	bl	10016bac <__aeabi_dcmpeq>
1001428e:	4680      	mov	r8, r0
10014290:	b168      	cbz	r0, 100142ae <_dtoa_r+0x7e>
10014292:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
10014294:	2301      	movs	r3, #1
10014296:	6013      	str	r3, [r2, #0]
10014298:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001429a:	b113      	cbz	r3, 100142a2 <_dtoa_r+0x72>
1001429c:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
1001429e:	4b69      	ldr	r3, [pc, #420]	@ (10014444 <_dtoa_r+0x214>)
100142a0:	6013      	str	r3, [r2, #0]
100142a2:	4b69      	ldr	r3, [pc, #420]	@ (10014448 <_dtoa_r+0x218>)
100142a4:	930a      	str	r3, [sp, #40]	@ 0x28
100142a6:	980a      	ldr	r0, [sp, #40]	@ 0x28
100142a8:	b01f      	add	sp, #124	@ 0x7c
100142aa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100142ae:	ab1c      	add	r3, sp, #112	@ 0x70
100142b0:	9301      	str	r3, [sp, #4]
100142b2:	ab1d      	add	r3, sp, #116	@ 0x74
100142b4:	9300      	str	r3, [sp, #0]
100142b6:	9803      	ldr	r0, [sp, #12]
100142b8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
100142bc:	f001 fec4 	bl	10016048 <__d2b>
100142c0:	ea5f 5519 	movs.w	r5, r9, lsr #20
100142c4:	4682      	mov	sl, r0
100142c6:	f040 8098 	bne.w	100143fa <_dtoa_r+0x1ca>
100142ca:	e9dd 851c 	ldrd	r8, r5, [sp, #112]	@ 0x70
100142ce:	4445      	add	r5, r8
100142d0:	f205 4332 	addw	r3, r5, #1074	@ 0x432
100142d4:	2b20      	cmp	r3, #32
100142d6:	f340 8383 	ble.w	100149e0 <_dtoa_r+0x7b0>
100142da:	f1c3 0340 	rsb	r3, r3, #64	@ 0x40
100142de:	fa09 f903 	lsl.w	r9, r9, r3
100142e2:	f205 4312 	addw	r3, r5, #1042	@ 0x412
100142e6:	fa26 f303 	lsr.w	r3, r6, r3
100142ea:	ea49 0003 	orr.w	r0, r9, r3
100142ee:	f002 f97b 	bl	100165e8 <__aeabi_ui2d>
100142f2:	2301      	movs	r3, #1
100142f4:	3d01      	subs	r5, #1
100142f6:	f1a1 71f8 	sub.w	r1, r1, #32505856	@ 0x1f00000
100142fa:	9311      	str	r3, [sp, #68]	@ 0x44
100142fc:	4b53      	ldr	r3, [pc, #332]	@ (1001444c <_dtoa_r+0x21c>)
100142fe:	2200      	movs	r2, #0
10014300:	f002 f834 	bl	1001636c <__aeabi_dsub>
10014304:	a348      	add	r3, pc, #288	@ (adr r3, 10014428 <_dtoa_r+0x1f8>)
10014306:	e9d3 2300 	ldrd	r2, r3, [r3]
1001430a:	f002 f9e7 	bl	100166dc <__aeabi_dmul>
1001430e:	a348      	add	r3, pc, #288	@ (adr r3, 10014430 <_dtoa_r+0x200>)
10014310:	e9d3 2300 	ldrd	r2, r3, [r3]
10014314:	f002 f82c 	bl	10016370 <__adddf3>
10014318:	4606      	mov	r6, r0
1001431a:	4628      	mov	r0, r5
1001431c:	460f      	mov	r7, r1
1001431e:	f002 f973 	bl	10016608 <__aeabi_i2d>
10014322:	a345      	add	r3, pc, #276	@ (adr r3, 10014438 <_dtoa_r+0x208>)
10014324:	e9d3 2300 	ldrd	r2, r3, [r3]
10014328:	f002 f9d8 	bl	100166dc <__aeabi_dmul>
1001432c:	4602      	mov	r2, r0
1001432e:	460b      	mov	r3, r1
10014330:	4630      	mov	r0, r6
10014332:	4639      	mov	r1, r7
10014334:	f002 f81c 	bl	10016370 <__adddf3>
10014338:	4606      	mov	r6, r0
1001433a:	460f      	mov	r7, r1
1001433c:	f002 fc7e 	bl	10016c3c <__aeabi_d2iz>
10014340:	2200      	movs	r2, #0
10014342:	4683      	mov	fp, r0
10014344:	2300      	movs	r3, #0
10014346:	4630      	mov	r0, r6
10014348:	4639      	mov	r1, r7
1001434a:	f002 fc39 	bl	10016bc0 <__aeabi_dcmplt>
1001434e:	2800      	cmp	r0, #0
10014350:	f040 831a 	bne.w	10014988 <_dtoa_r+0x758>
10014354:	eba8 0805 	sub.w	r8, r8, r5
10014358:	f1bb 0f16 	cmp.w	fp, #22
1001435c:	f108 34ff 	add.w	r4, r8, #4294967295	@ 0xffffffff
10014360:	f200 818b 	bhi.w	1001467a <_dtoa_r+0x44a>
10014364:	4d3a      	ldr	r5, [pc, #232]	@ (10014450 <_dtoa_r+0x220>)
10014366:	eb05 05cb 	add.w	r5, r5, fp, lsl #3
1001436a:	e9d5 2300 	ldrd	r2, r3, [r5]
1001436e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10014372:	f002 fc25 	bl	10016bc0 <__aeabi_dcmplt>
10014376:	2800      	cmp	r0, #0
10014378:	d070      	beq.n	1001445c <_dtoa_r+0x22c>
1001437a:	2300      	movs	r3, #0
1001437c:	2c00      	cmp	r4, #0
1001437e:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10014382:	9310      	str	r3, [sp, #64]	@ 0x40
10014384:	f2c0 817e 	blt.w	10014684 <_dtoa_r+0x454>
10014388:	2300      	movs	r3, #0
1001438a:	930b      	str	r3, [sp, #44]	@ 0x2c
1001438c:	f1bb 0f00 	cmp.w	fp, #0
10014390:	da6a      	bge.n	10014468 <_dtoa_r+0x238>
10014392:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014394:	eba3 030b 	sub.w	r3, r3, fp
10014398:	930b      	str	r3, [sp, #44]	@ 0x2c
1001439a:	f1cb 0300 	rsb	r3, fp, #0
1001439e:	e9cd b30e 	strd	fp, r3, [sp, #56]	@ 0x38
100143a2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100143a4:	2b09      	cmp	r3, #9
100143a6:	f04f 0b00 	mov.w	fp, #0
100143aa:	d865      	bhi.n	10014478 <_dtoa_r+0x248>
100143ac:	2b05      	cmp	r3, #5
100143ae:	f340 831c 	ble.w	100149ea <_dtoa_r+0x7ba>
100143b2:	3b04      	subs	r3, #4
100143b4:	9328      	str	r3, [sp, #160]	@ 0xa0
100143b6:	2500      	movs	r5, #0
100143b8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
100143ba:	3b02      	subs	r3, #2
100143bc:	2b03      	cmp	r3, #3
100143be:	f200 8623 	bhi.w	10015008 <_dtoa_r+0xdd8>
100143c2:	e8df f013 	tbh	[pc, r3, lsl #1]
100143c6:	0460      	.short	0x0460
100143c8:	0454045d 	.word	0x0454045d
100143cc:	0438      	.short	0x0438
100143ce:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
100143d0:	f3c9 0913 	ubfx	r9, r9, #0, #20
100143d4:	f242 730f 	movw	r3, #9999	@ 0x270f
100143d8:	ea59 0906 	orrs.w	r9, r9, r6
100143dc:	6013      	str	r3, [r2, #0]
100143de:	d11c      	bne.n	1001441a <_dtoa_r+0x1ea>
100143e0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
100143e2:	2b00      	cmp	r3, #0
100143e4:	f000 862b 	beq.w	1001503e <_dtoa_r+0xe0e>
100143e8:	4b1a      	ldr	r3, [pc, #104]	@ (10014454 <_dtoa_r+0x224>)
100143ea:	930a      	str	r3, [sp, #40]	@ 0x28
100143ec:	3308      	adds	r3, #8
100143ee:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
100143f0:	980a      	ldr	r0, [sp, #40]	@ 0x28
100143f2:	6013      	str	r3, [r2, #0]
100143f4:	b01f      	add	sp, #124	@ 0x7c
100143f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100143fa:	e9dd 1208 	ldrd	r1, r2, [sp, #32]
100143fe:	f3c2 0313 	ubfx	r3, r2, #0, #20
10014402:	4608      	mov	r0, r1
10014404:	f043 517f 	orr.w	r1, r3, #1069547520	@ 0x3fc00000
10014408:	f8cd 8044 	str.w	r8, [sp, #68]	@ 0x44
1001440c:	f2a5 35ff 	subw	r5, r5, #1023	@ 0x3ff
10014410:	f8dd 8070 	ldr.w	r8, [sp, #112]	@ 0x70
10014414:	f441 1140 	orr.w	r1, r1, #3145728	@ 0x300000
10014418:	e770      	b.n	100142fc <_dtoa_r+0xcc>
1001441a:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
1001441c:	2b00      	cmp	r3, #0
1001441e:	f040 83e7 	bne.w	10014bf0 <_dtoa_r+0x9c0>
10014422:	4b0d      	ldr	r3, [pc, #52]	@ (10014458 <_dtoa_r+0x228>)
10014424:	930a      	str	r3, [sp, #40]	@ 0x28
10014426:	e73e      	b.n	100142a6 <_dtoa_r+0x76>
10014428:	636f4361 	.word	0x636f4361
1001442c:	3fd287a7 	.word	0x3fd287a7
10014430:	8b60c8b3 	.word	0x8b60c8b3
10014434:	3fc68a28 	.word	0x3fc68a28
10014438:	509f79fb 	.word	0x509f79fb
1001443c:	3fd34413 	.word	0x3fd34413
10014440:	7ff00000 	.word	0x7ff00000
10014444:	100170b9 	.word	0x100170b9
10014448:	100170b8 	.word	0x100170b8
1001444c:	3ff80000 	.word	0x3ff80000
10014450:	10017398 	.word	0x10017398
10014454:	10017144 	.word	0x10017144
10014458:	10017150 	.word	0x10017150
1001445c:	f1b8 0f00 	cmp.w	r8, #0
10014460:	f340 8460 	ble.w	10014d24 <_dtoa_r+0xaf4>
10014464:	9010      	str	r0, [sp, #64]	@ 0x40
10014466:	900b      	str	r0, [sp, #44]	@ 0x2c
10014468:	2300      	movs	r3, #0
1001446a:	930f      	str	r3, [sp, #60]	@ 0x3c
1001446c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001446e:	f8cd b038 	str.w	fp, [sp, #56]	@ 0x38
10014472:	2b09      	cmp	r3, #9
10014474:	445c      	add	r4, fp
10014476:	d999      	bls.n	100143ac <_dtoa_r+0x17c>
10014478:	2300      	movs	r3, #0
1001447a:	e9cd 3328 	strd	r3, r3, [sp, #160]	@ 0xa0
1001447e:	2501      	movs	r5, #1
10014480:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10014484:	950c      	str	r5, [sp, #48]	@ 0x30
10014486:	9306      	str	r3, [sp, #24]
10014488:	9b03      	ldr	r3, [sp, #12]
1001448a:	2100      	movs	r1, #0
1001448c:	63d9      	str	r1, [r3, #60]	@ 0x3c
1001448e:	9b06      	ldr	r3, [sp, #24]
10014490:	9318      	str	r3, [sp, #96]	@ 0x60
10014492:	9803      	ldr	r0, [sp, #12]
10014494:	f001 fa7e 	bl	10015994 <_Balloc>
10014498:	900a      	str	r0, [sp, #40]	@ 0x28
1001449a:	2800      	cmp	r0, #0
1001449c:	f000 85bd 	beq.w	1001501a <_dtoa_r+0xdea>
100144a0:	9b03      	ldr	r3, [sp, #12]
100144a2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
100144a4:	639a      	str	r2, [r3, #56]	@ 0x38
100144a6:	9b06      	ldr	r3, [sp, #24]
100144a8:	2b0e      	cmp	r3, #14
100144aa:	f200 8115 	bhi.w	100146d8 <_dtoa_r+0x4a8>
100144ae:	2d00      	cmp	r5, #0
100144b0:	f000 8112 	beq.w	100146d8 <_dtoa_r+0x4a8>
100144b4:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100144b6:	2a00      	cmp	r2, #0
100144b8:	f340 843b 	ble.w	10014d32 <_dtoa_r+0xb02>
100144bc:	4db2      	ldr	r5, [pc, #712]	@ (10014788 <_dtoa_r+0x558>)
100144be:	f002 030f 	and.w	r3, r2, #15
100144c2:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
100144c6:	e9d3 8900 	ldrd	r8, r9, [r3]
100144ca:	4613      	mov	r3, r2
100144cc:	1115      	asrs	r5, r2, #4
100144ce:	05da      	lsls	r2, r3, #23
100144d0:	f140 83fa 	bpl.w	10014cc8 <_dtoa_r+0xa98>
100144d4:	4bad      	ldr	r3, [pc, #692]	@ (1001478c <_dtoa_r+0x55c>)
100144d6:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100144da:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
100144de:	f002 fa27 	bl	10016930 <__aeabi_ddiv>
100144e2:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
100144e6:	f005 050f 	and.w	r5, r5, #15
100144ea:	2703      	movs	r7, #3
100144ec:	b17d      	cbz	r5, 1001450e <_dtoa_r+0x2de>
100144ee:	4ea7      	ldr	r6, [pc, #668]	@ (1001478c <_dtoa_r+0x55c>)
100144f0:	07eb      	lsls	r3, r5, #31
100144f2:	d508      	bpl.n	10014506 <_dtoa_r+0x2d6>
100144f4:	4640      	mov	r0, r8
100144f6:	4649      	mov	r1, r9
100144f8:	e9d6 2300 	ldrd	r2, r3, [r6]
100144fc:	f002 f8ee 	bl	100166dc <__aeabi_dmul>
10014500:	3701      	adds	r7, #1
10014502:	4680      	mov	r8, r0
10014504:	4689      	mov	r9, r1
10014506:	106d      	asrs	r5, r5, #1
10014508:	f106 0608 	add.w	r6, r6, #8
1001450c:	d1f0      	bne.n	100144f0 <_dtoa_r+0x2c0>
1001450e:	4642      	mov	r2, r8
10014510:	464b      	mov	r3, r9
10014512:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	@ 0x48
10014516:	f002 fa0b 	bl	10016930 <__aeabi_ddiv>
1001451a:	4680      	mov	r8, r0
1001451c:	4689      	mov	r9, r1
1001451e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
10014520:	b143      	cbz	r3, 10014534 <_dtoa_r+0x304>
10014522:	4b9b      	ldr	r3, [pc, #620]	@ (10014790 <_dtoa_r+0x560>)
10014524:	2200      	movs	r2, #0
10014526:	4640      	mov	r0, r8
10014528:	4649      	mov	r1, r9
1001452a:	f002 fb49 	bl	10016bc0 <__aeabi_dcmplt>
1001452e:	2800      	cmp	r0, #0
10014530:	f040 84f1 	bne.w	10014f16 <_dtoa_r+0xce6>
10014534:	4638      	mov	r0, r7
10014536:	f002 f867 	bl	10016608 <__aeabi_i2d>
1001453a:	4642      	mov	r2, r8
1001453c:	464b      	mov	r3, r9
1001453e:	f002 f8cd 	bl	100166dc <__aeabi_dmul>
10014542:	4b94      	ldr	r3, [pc, #592]	@ (10014794 <_dtoa_r+0x564>)
10014544:	2200      	movs	r2, #0
10014546:	f001 ff13 	bl	10016370 <__adddf3>
1001454a:	9b06      	ldr	r3, [sp, #24]
1001454c:	4606      	mov	r6, r0
1001454e:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10014552:	2b00      	cmp	r3, #0
10014554:	f000 80a9 	beq.w	100146aa <_dtoa_r+0x47a>
10014558:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
1001455a:	9319      	str	r3, [sp, #100]	@ 0x64
1001455c:	9b06      	ldr	r3, [sp, #24]
1001455e:	9312      	str	r3, [sp, #72]	@ 0x48
10014560:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014562:	4d89      	ldr	r5, [pc, #548]	@ (10014788 <_dtoa_r+0x558>)
10014564:	4649      	mov	r1, r9
10014566:	4640      	mov	r0, r8
10014568:	e9cd 6714 	strd	r6, r7, [sp, #80]	@ 0x50
1001456c:	1c5e      	adds	r6, r3, #1
1001456e:	f002 fb65 	bl	10016c3c <__aeabi_d2iz>
10014572:	9912      	ldr	r1, [sp, #72]	@ 0x48
10014574:	eb05 03c1 	add.w	r3, r5, r1, lsl #3
10014578:	e953 1202 	ldrd	r1, r2, [r3, #-8]
1001457c:	4607      	mov	r7, r0
1001457e:	e9cd 1216 	strd	r1, r2, [sp, #88]	@ 0x58
10014582:	f002 f841 	bl	10016608 <__aeabi_i2d>
10014586:	4602      	mov	r2, r0
10014588:	460b      	mov	r3, r1
1001458a:	4640      	mov	r0, r8
1001458c:	4649      	mov	r1, r9
1001458e:	f001 feed 	bl	1001636c <__aeabi_dsub>
10014592:	4689      	mov	r9, r1
10014594:	990c      	ldr	r1, [sp, #48]	@ 0x30
10014596:	3730      	adds	r7, #48	@ 0x30
10014598:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	@ 0x58
1001459c:	4680      	mov	r8, r0
1001459e:	b2ff      	uxtb	r7, r7
100145a0:	2900      	cmp	r1, #0
100145a2:	f000 8453 	beq.w	10014e4c <_dtoa_r+0xc1c>
100145a6:	497c      	ldr	r1, [pc, #496]	@ (10014798 <_dtoa_r+0x568>)
100145a8:	2000      	movs	r0, #0
100145aa:	f002 f9c1 	bl	10016930 <__aeabi_ddiv>
100145ae:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	@ 0x50
100145b2:	f001 fedb 	bl	1001636c <__aeabi_dsub>
100145b6:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
100145b8:	4602      	mov	r2, r0
100145ba:	460b      	mov	r3, r1
100145bc:	e9cd 2314 	strd	r2, r3, [sp, #80]	@ 0x50
100145c0:	702f      	strb	r7, [r5, #0]
100145c2:	4642      	mov	r2, r8
100145c4:	464b      	mov	r3, r9
100145c6:	f002 fb19 	bl	10016bfc <__aeabi_dcmpgt>
100145ca:	2800      	cmp	r0, #0
100145cc:	f040 8497 	bne.w	10014efe <_dtoa_r+0xcce>
100145d0:	e9cd b41a 	strd	fp, r4, [sp, #104]	@ 0x68
100145d4:	f8cd a058 	str.w	sl, [sp, #88]	@ 0x58
100145d8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
100145da:	e9dd ab14 	ldrd	sl, fp, [sp, #80]	@ 0x50
100145de:	2700      	movs	r7, #0
100145e0:	e02a      	b.n	10014638 <_dtoa_r+0x408>
100145e2:	3701      	adds	r7, #1
100145e4:	42af      	cmp	r7, r5
100145e6:	f280 84de 	bge.w	10014fa6 <_dtoa_r+0xd76>
100145ea:	4b6c      	ldr	r3, [pc, #432]	@ (1001479c <_dtoa_r+0x56c>)
100145ec:	4650      	mov	r0, sl
100145ee:	4659      	mov	r1, fp
100145f0:	2200      	movs	r2, #0
100145f2:	f002 f873 	bl	100166dc <__aeabi_dmul>
100145f6:	4b69      	ldr	r3, [pc, #420]	@ (1001479c <_dtoa_r+0x56c>)
100145f8:	2200      	movs	r2, #0
100145fa:	4682      	mov	sl, r0
100145fc:	468b      	mov	fp, r1
100145fe:	4640      	mov	r0, r8
10014600:	4649      	mov	r1, r9
10014602:	f002 f86b 	bl	100166dc <__aeabi_dmul>
10014606:	4689      	mov	r9, r1
10014608:	4680      	mov	r8, r0
1001460a:	f002 fb17 	bl	10016c3c <__aeabi_d2iz>
1001460e:	4604      	mov	r4, r0
10014610:	f001 fffa 	bl	10016608 <__aeabi_i2d>
10014614:	4602      	mov	r2, r0
10014616:	460b      	mov	r3, r1
10014618:	4640      	mov	r0, r8
1001461a:	4649      	mov	r1, r9
1001461c:	f001 fea6 	bl	1001636c <__aeabi_dsub>
10014620:	3430      	adds	r4, #48	@ 0x30
10014622:	f806 4b01 	strb.w	r4, [r6], #1
10014626:	4652      	mov	r2, sl
10014628:	465b      	mov	r3, fp
1001462a:	4680      	mov	r8, r0
1001462c:	4689      	mov	r9, r1
1001462e:	f002 fac7 	bl	10016bc0 <__aeabi_dcmplt>
10014632:	2800      	cmp	r0, #0
10014634:	f040 84b4 	bne.w	10014fa0 <_dtoa_r+0xd70>
10014638:	4642      	mov	r2, r8
1001463a:	464b      	mov	r3, r9
1001463c:	4954      	ldr	r1, [pc, #336]	@ (10014790 <_dtoa_r+0x560>)
1001463e:	2000      	movs	r0, #0
10014640:	f001 fe94 	bl	1001636c <__aeabi_dsub>
10014644:	4652      	mov	r2, sl
10014646:	465b      	mov	r3, fp
10014648:	f002 faba 	bl	10016bc0 <__aeabi_dcmplt>
1001464c:	2800      	cmp	r0, #0
1001464e:	d0c8      	beq.n	100145e2 <_dtoa_r+0x3b2>
10014650:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10014652:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10014656:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014658:	4637      	mov	r7, r6
1001465a:	f103 0801 	add.w	r8, r3, #1
1001465e:	e002      	b.n	10014666 <_dtoa_r+0x436>
10014660:	4297      	cmp	r7, r2
10014662:	f000 847c 	beq.w	10014f5e <_dtoa_r+0xd2e>
10014666:	463e      	mov	r6, r7
10014668:	f817 3d01 	ldrb.w	r3, [r7, #-1]!
1001466c:	2b39      	cmp	r3, #57	@ 0x39
1001466e:	d0f7      	beq.n	10014660 <_dtoa_r+0x430>
10014670:	3301      	adds	r3, #1
10014672:	b2db      	uxtb	r3, r3
10014674:	703b      	strb	r3, [r7, #0]
10014676:	4645      	mov	r5, r8
10014678:	e175      	b.n	10014966 <_dtoa_r+0x736>
1001467a:	2301      	movs	r3, #1
1001467c:	2c00      	cmp	r4, #0
1001467e:	9310      	str	r3, [sp, #64]	@ 0x40
10014680:	f6bf ae82 	bge.w	10014388 <_dtoa_r+0x158>
10014684:	f1c8 0301 	rsb	r3, r8, #1
10014688:	930b      	str	r3, [sp, #44]	@ 0x2c
1001468a:	2400      	movs	r4, #0
1001468c:	e67e      	b.n	1001438c <_dtoa_r+0x15c>
1001468e:	4638      	mov	r0, r7
10014690:	f001 ffba 	bl	10016608 <__aeabi_i2d>
10014694:	4642      	mov	r2, r8
10014696:	464b      	mov	r3, r9
10014698:	f002 f820 	bl	100166dc <__aeabi_dmul>
1001469c:	4b3d      	ldr	r3, [pc, #244]	@ (10014794 <_dtoa_r+0x564>)
1001469e:	2200      	movs	r2, #0
100146a0:	f001 fe66 	bl	10016370 <__adddf3>
100146a4:	4606      	mov	r6, r0
100146a6:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
100146aa:	4b3d      	ldr	r3, [pc, #244]	@ (100147a0 <_dtoa_r+0x570>)
100146ac:	4640      	mov	r0, r8
100146ae:	4649      	mov	r1, r9
100146b0:	2200      	movs	r2, #0
100146b2:	f001 fe5b 	bl	1001636c <__aeabi_dsub>
100146b6:	4632      	mov	r2, r6
100146b8:	463b      	mov	r3, r7
100146ba:	4680      	mov	r8, r0
100146bc:	4689      	mov	r9, r1
100146be:	f002 fa9d 	bl	10016bfc <__aeabi_dcmpgt>
100146c2:	2800      	cmp	r0, #0
100146c4:	f040 845a 	bne.w	10014f7c <_dtoa_r+0xd4c>
100146c8:	4640      	mov	r0, r8
100146ca:	4649      	mov	r1, r9
100146cc:	4632      	mov	r2, r6
100146ce:	f107 4300 	add.w	r3, r7, #2147483648	@ 0x80000000
100146d2:	f002 fa75 	bl	10016bc0 <__aeabi_dcmplt>
100146d6:	bb28      	cbnz	r0, 10014724 <_dtoa_r+0x4f4>
100146d8:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
100146da:	2b00      	cmp	r3, #0
100146dc:	f2c0 8092 	blt.w	10014804 <_dtoa_r+0x5d4>
100146e0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
100146e2:	2a0e      	cmp	r2, #14
100146e4:	f300 808e 	bgt.w	10014804 <_dtoa_r+0x5d4>
100146e8:	4d27      	ldr	r5, [pc, #156]	@ (10014788 <_dtoa_r+0x558>)
100146ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
100146ec:	eb05 05c3 	add.w	r5, r5, r3, lsl #3
100146f0:	e9d5 3400 	ldrd	r3, r4, [r5]
100146f4:	e9cd 3404 	strd	r3, r4, [sp, #16]
100146f8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
100146fa:	2b00      	cmp	r3, #0
100146fc:	da19      	bge.n	10014732 <_dtoa_r+0x502>
100146fe:	9b06      	ldr	r3, [sp, #24]
10014700:	2b00      	cmp	r3, #0
10014702:	dc16      	bgt.n	10014732 <_dtoa_r+0x502>
10014704:	d10e      	bne.n	10014724 <_dtoa_r+0x4f4>
10014706:	4b26      	ldr	r3, [pc, #152]	@ (100147a0 <_dtoa_r+0x570>)
10014708:	2200      	movs	r2, #0
1001470a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
1001470e:	f001 ffe5 	bl	100166dc <__aeabi_dmul>
10014712:	4602      	mov	r2, r0
10014714:	460b      	mov	r3, r1
10014716:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1001471a:	f002 fa5b 	bl	10016bd4 <__aeabi_dcmple>
1001471e:	2800      	cmp	r0, #0
10014720:	f000 842c 	beq.w	10014f7c <_dtoa_r+0xd4c>
10014724:	f04f 0900 	mov.w	r9, #0
10014728:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
1001472a:	464f      	mov	r7, r9
1001472c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
1001472e:	43dd      	mvns	r5, r3
10014730:	e225      	b.n	10014b7e <_dtoa_r+0x94e>
10014732:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
10014736:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
1001473a:	4622      	mov	r2, r4
1001473c:	462b      	mov	r3, r5
1001473e:	4640      	mov	r0, r8
10014740:	4649      	mov	r1, r9
10014742:	f002 f8f5 	bl	10016930 <__aeabi_ddiv>
10014746:	f002 fa79 	bl	10016c3c <__aeabi_d2iz>
1001474a:	4606      	mov	r6, r0
1001474c:	f001 ff5c 	bl	10016608 <__aeabi_i2d>
10014750:	4622      	mov	r2, r4
10014752:	462b      	mov	r3, r5
10014754:	f001 ffc2 	bl	100166dc <__aeabi_dmul>
10014758:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
1001475a:	460b      	mov	r3, r1
1001475c:	4602      	mov	r2, r0
1001475e:	4649      	mov	r1, r9
10014760:	4640      	mov	r0, r8
10014762:	f001 fe03 	bl	1001636c <__aeabi_dsub>
10014766:	f106 0330 	add.w	r3, r6, #48	@ 0x30
1001476a:	f807 3b01 	strb.w	r3, [r7], #1
1001476e:	9b06      	ldr	r3, [sp, #24]
10014770:	2b01      	cmp	r3, #1
10014772:	f000 8312 	beq.w	10014d9a <_dtoa_r+0xb6a>
10014776:	2501      	movs	r5, #1
10014778:	f8cd a018 	str.w	sl, [sp, #24]
1001477c:	4699      	mov	r9, r3
1001477e:	e9dd ab04 	ldrd	sl, fp, [sp, #16]
10014782:	46a8      	mov	r8, r5
10014784:	e02c      	b.n	100147e0 <_dtoa_r+0x5b0>
10014786:	bf00      	nop
10014788:	10017398 	.word	0x10017398
1001478c:	10017370 	.word	0x10017370
10014790:	3ff00000 	.word	0x3ff00000
10014794:	401c0000 	.word	0x401c0000
10014798:	3fe00000 	.word	0x3fe00000
1001479c:	40240000 	.word	0x40240000
100147a0:	40140000 	.word	0x40140000
100147a4:	4652      	mov	r2, sl
100147a6:	465b      	mov	r3, fp
100147a8:	4620      	mov	r0, r4
100147aa:	4629      	mov	r1, r5
100147ac:	f002 f8c0 	bl	10016930 <__aeabi_ddiv>
100147b0:	f002 fa44 	bl	10016c3c <__aeabi_d2iz>
100147b4:	4606      	mov	r6, r0
100147b6:	f001 ff27 	bl	10016608 <__aeabi_i2d>
100147ba:	4652      	mov	r2, sl
100147bc:	465b      	mov	r3, fp
100147be:	f001 ff8d 	bl	100166dc <__aeabi_dmul>
100147c2:	f108 0801 	add.w	r8, r8, #1
100147c6:	460b      	mov	r3, r1
100147c8:	4602      	mov	r2, r0
100147ca:	4629      	mov	r1, r5
100147cc:	4620      	mov	r0, r4
100147ce:	f001 fdcd 	bl	1001636c <__aeabi_dsub>
100147d2:	f106 0330 	add.w	r3, r6, #48	@ 0x30
100147d6:	45c8      	cmp	r8, r9
100147d8:	f807 3b01 	strb.w	r3, [r7], #1
100147dc:	f000 82db 	beq.w	10014d96 <_dtoa_r+0xb66>
100147e0:	4bb9      	ldr	r3, [pc, #740]	@ (10014ac8 <_dtoa_r+0x898>)
100147e2:	2200      	movs	r2, #0
100147e4:	f001 ff7a 	bl	100166dc <__aeabi_dmul>
100147e8:	2200      	movs	r2, #0
100147ea:	2300      	movs	r3, #0
100147ec:	4604      	mov	r4, r0
100147ee:	460d      	mov	r5, r1
100147f0:	f002 f9dc 	bl	10016bac <__aeabi_dcmpeq>
100147f4:	2800      	cmp	r0, #0
100147f6:	d0d5      	beq.n	100147a4 <_dtoa_r+0x574>
100147f8:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100147fa:	f8dd a018 	ldr.w	sl, [sp, #24]
100147fe:	3501      	adds	r5, #1
10014800:	463e      	mov	r6, r7
10014802:	e0b0      	b.n	10014966 <_dtoa_r+0x736>
10014804:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10014806:	2a00      	cmp	r2, #0
10014808:	f040 80d2 	bne.w	100149b0 <_dtoa_r+0x780>
1001480c:	2300      	movs	r3, #0
1001480e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10014810:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
10014812:	930c      	str	r3, [sp, #48]	@ 0x30
10014814:	461f      	mov	r7, r3
10014816:	b156      	cbz	r6, 1001482e <_dtoa_r+0x5fe>
10014818:	2c00      	cmp	r4, #0
1001481a:	dd08      	ble.n	1001482e <_dtoa_r+0x5fe>
1001481c:	42a6      	cmp	r6, r4
1001481e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10014820:	4633      	mov	r3, r6
10014822:	bfa8      	it	ge
10014824:	4623      	movge	r3, r4
10014826:	1ad2      	subs	r2, r2, r3
10014828:	920b      	str	r2, [sp, #44]	@ 0x2c
1001482a:	1af6      	subs	r6, r6, r3
1001482c:	1ae4      	subs	r4, r4, r3
1001482e:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10014830:	b153      	cbz	r3, 10014848 <_dtoa_r+0x618>
10014832:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10014834:	b113      	cbz	r3, 1001483c <_dtoa_r+0x60c>
10014836:	2d00      	cmp	r5, #0
10014838:	f040 82e8 	bne.w	10014e0c <_dtoa_r+0xbdc>
1001483c:	4651      	mov	r1, sl
1001483e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10014840:	9803      	ldr	r0, [sp, #12]
10014842:	f001 fa5d 	bl	10015d00 <__pow5mult>
10014846:	4682      	mov	sl, r0
10014848:	9803      	ldr	r0, [sp, #12]
1001484a:	2101      	movs	r1, #1
1001484c:	f001 f974 	bl	10015b38 <__i2b>
10014850:	4681      	mov	r9, r0
10014852:	f1bb 0f00 	cmp.w	fp, #0
10014856:	f040 81b6 	bne.w	10014bc6 <_dtoa_r+0x996>
1001485a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
1001485c:	2b01      	cmp	r3, #1
1001485e:	f340 81cc 	ble.w	10014bfa <_dtoa_r+0x9ca>
10014862:	2001      	movs	r0, #1
10014864:	4420      	add	r0, r4
10014866:	f010 001f 	ands.w	r0, r0, #31
1001486a:	f000 809a 	beq.w	100149a2 <_dtoa_r+0x772>
1001486e:	f1c0 0320 	rsb	r3, r0, #32
10014872:	2b04      	cmp	r3, #4
10014874:	f340 81da 	ble.w	10014c2c <_dtoa_r+0x9fc>
10014878:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
1001487a:	f1c0 001c 	rsb	r0, r0, #28
1001487e:	4403      	add	r3, r0
10014880:	930b      	str	r3, [sp, #44]	@ 0x2c
10014882:	4406      	add	r6, r0
10014884:	4404      	add	r4, r0
10014886:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014888:	2b00      	cmp	r3, #0
1001488a:	dd05      	ble.n	10014898 <_dtoa_r+0x668>
1001488c:	4651      	mov	r1, sl
1001488e:	9803      	ldr	r0, [sp, #12]
10014890:	461a      	mov	r2, r3
10014892:	f001 fa8f 	bl	10015db4 <__lshift>
10014896:	4682      	mov	sl, r0
10014898:	2c00      	cmp	r4, #0
1001489a:	dd05      	ble.n	100148a8 <_dtoa_r+0x678>
1001489c:	4649      	mov	r1, r9
1001489e:	9803      	ldr	r0, [sp, #12]
100148a0:	4622      	mov	r2, r4
100148a2:	f001 fa87 	bl	10015db4 <__lshift>
100148a6:	4681      	mov	r9, r0
100148a8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
100148aa:	2b00      	cmp	r3, #0
100148ac:	f040 8170 	bne.w	10014b90 <_dtoa_r+0x960>
100148b0:	9b06      	ldr	r3, [sp, #24]
100148b2:	2b00      	cmp	r3, #0
100148b4:	f340 8148 	ble.w	10014b48 <_dtoa_r+0x918>
100148b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
100148ba:	2b00      	cmp	r3, #0
100148bc:	f040 80a4 	bne.w	10014a08 <_dtoa_r+0x7d8>
100148c0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
100148c2:	3501      	adds	r5, #1
100148c4:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
100148c8:	9c06      	ldr	r4, [sp, #24]
100148ca:	f8dd b00c 	ldr.w	fp, [sp, #12]
100148ce:	2601      	movs	r6, #1
100148d0:	e007      	b.n	100148e2 <_dtoa_r+0x6b2>
100148d2:	4651      	mov	r1, sl
100148d4:	2300      	movs	r3, #0
100148d6:	220a      	movs	r2, #10
100148d8:	4658      	mov	r0, fp
100148da:	f001 f88b 	bl	100159f4 <__multadd>
100148de:	3601      	adds	r6, #1
100148e0:	4682      	mov	sl, r0
100148e2:	4649      	mov	r1, r9
100148e4:	4650      	mov	r0, sl
100148e6:	f7ff fc0d 	bl	10014104 <quorem>
100148ea:	42a6      	cmp	r6, r4
100148ec:	f100 0330 	add.w	r3, r0, #48	@ 0x30
100148f0:	f808 3b01 	strb.w	r3, [r8], #1
100148f4:	dbed      	blt.n	100148d2 <_dtoa_r+0x6a2>
100148f6:	9a06      	ldr	r2, [sp, #24]
100148f8:	2a00      	cmp	r2, #0
100148fa:	bfc8      	it	gt
100148fc:	4616      	movgt	r6, r2
100148fe:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014900:	bfd8      	it	le
10014902:	2601      	movle	r6, #1
10014904:	eb02 0b06 	add.w	fp, r2, r6
10014908:	2400      	movs	r4, #0
1001490a:	4651      	mov	r1, sl
1001490c:	2201      	movs	r2, #1
1001490e:	9803      	ldr	r0, [sp, #12]
10014910:	9304      	str	r3, [sp, #16]
10014912:	f001 fa4f 	bl	10015db4 <__lshift>
10014916:	4649      	mov	r1, r9
10014918:	4682      	mov	sl, r0
1001491a:	f001 fac3 	bl	10015ea4 <__mcmp>
1001491e:	2800      	cmp	r0, #0
10014920:	f340 81e3 	ble.w	10014cea <_dtoa_r+0xaba>
10014924:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014926:	e002      	b.n	1001492e <_dtoa_r+0x6fe>
10014928:	455a      	cmp	r2, fp
1001492a:	f000 81e9 	beq.w	10014d00 <_dtoa_r+0xad0>
1001492e:	465e      	mov	r6, fp
10014930:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
10014934:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10014938:	2b39      	cmp	r3, #57	@ 0x39
1001493a:	d0f5      	beq.n	10014928 <_dtoa_r+0x6f8>
1001493c:	3301      	adds	r3, #1
1001493e:	f88b 3000 	strb.w	r3, [fp]
10014942:	f8dd 800c 	ldr.w	r8, [sp, #12]
10014946:	4649      	mov	r1, r9
10014948:	4640      	mov	r0, r8
1001494a:	f001 f849 	bl	100159e0 <_Bfree>
1001494e:	b157      	cbz	r7, 10014966 <_dtoa_r+0x736>
10014950:	b12c      	cbz	r4, 1001495e <_dtoa_r+0x72e>
10014952:	42bc      	cmp	r4, r7
10014954:	d003      	beq.n	1001495e <_dtoa_r+0x72e>
10014956:	4621      	mov	r1, r4
10014958:	4640      	mov	r0, r8
1001495a:	f001 f841 	bl	100159e0 <_Bfree>
1001495e:	9803      	ldr	r0, [sp, #12]
10014960:	4639      	mov	r1, r7
10014962:	f001 f83d 	bl	100159e0 <_Bfree>
10014966:	9803      	ldr	r0, [sp, #12]
10014968:	4651      	mov	r1, sl
1001496a:	f001 f839 	bl	100159e0 <_Bfree>
1001496e:	2300      	movs	r3, #0
10014970:	7033      	strb	r3, [r6, #0]
10014972:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
10014974:	601d      	str	r5, [r3, #0]
10014976:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
10014978:	2b00      	cmp	r3, #0
1001497a:	f43f ac94 	beq.w	100142a6 <_dtoa_r+0x76>
1001497e:	980a      	ldr	r0, [sp, #40]	@ 0x28
10014980:	601e      	str	r6, [r3, #0]
10014982:	b01f      	add	sp, #124	@ 0x7c
10014984:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10014988:	4658      	mov	r0, fp
1001498a:	f001 fe3d 	bl	10016608 <__aeabi_i2d>
1001498e:	4632      	mov	r2, r6
10014990:	463b      	mov	r3, r7
10014992:	f002 f90b 	bl	10016bac <__aeabi_dcmpeq>
10014996:	2800      	cmp	r0, #0
10014998:	f47f acdc 	bne.w	10014354 <_dtoa_r+0x124>
1001499c:	f10b 3bff 	add.w	fp, fp, #4294967295	@ 0xffffffff
100149a0:	e4d8      	b.n	10014354 <_dtoa_r+0x124>
100149a2:	231c      	movs	r3, #28
100149a4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
100149a6:	441a      	add	r2, r3
100149a8:	920b      	str	r2, [sp, #44]	@ 0x2c
100149aa:	441e      	add	r6, r3
100149ac:	441c      	add	r4, r3
100149ae:	e76a      	b.n	10014886 <_dtoa_r+0x656>
100149b0:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
100149b2:	2a01      	cmp	r2, #1
100149b4:	f340 81a9 	ble.w	10014d0a <_dtoa_r+0xada>
100149b8:	9a06      	ldr	r2, [sp, #24]
100149ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
100149bc:	1e55      	subs	r5, r2, #1
100149be:	42ab      	cmp	r3, r5
100149c0:	f2c0 816b 	blt.w	10014c9a <_dtoa_r+0xa6a>
100149c4:	2a00      	cmp	r2, #0
100149c6:	eba3 0505 	sub.w	r5, r3, r5
100149ca:	f280 82dd 	bge.w	10014f88 <_dtoa_r+0xd58>
100149ce:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
100149d0:	9a06      	ldr	r2, [sp, #24]
100149d2:	1a9e      	subs	r6, r3, r2
100149d4:	9803      	ldr	r0, [sp, #12]
100149d6:	2101      	movs	r1, #1
100149d8:	f001 f8ae 	bl	10015b38 <__i2b>
100149dc:	4607      	mov	r7, r0
100149de:	e71a      	b.n	10014816 <_dtoa_r+0x5e6>
100149e0:	f1c3 0320 	rsb	r3, r3, #32
100149e4:	fa06 f003 	lsl.w	r0, r6, r3
100149e8:	e481      	b.n	100142ee <_dtoa_r+0xbe>
100149ea:	2501      	movs	r5, #1
100149ec:	e4e4      	b.n	100143b8 <_dtoa_r+0x188>
100149ee:	4639      	mov	r1, r7
100149f0:	2300      	movs	r3, #0
100149f2:	9803      	ldr	r0, [sp, #12]
100149f4:	220a      	movs	r2, #10
100149f6:	f000 fffd 	bl	100159f4 <__multadd>
100149fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
100149fc:	2b00      	cmp	r3, #0
100149fe:	4607      	mov	r7, r0
10014a00:	f340 82ef 	ble.w	10014fe2 <_dtoa_r+0xdb2>
10014a04:	950e      	str	r5, [sp, #56]	@ 0x38
10014a06:	9306      	str	r3, [sp, #24]
10014a08:	2e00      	cmp	r6, #0
10014a0a:	f300 813f 	bgt.w	10014c8c <_dtoa_r+0xa5c>
10014a0e:	f1bb 0f00 	cmp.w	fp, #0
10014a12:	f040 81df 	bne.w	10014dd4 <_dtoa_r+0xba4>
10014a16:	46b8      	mov	r8, r7
10014a18:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10014a1a:	9c06      	ldr	r4, [sp, #24]
10014a1c:	1e73      	subs	r3, r6, #1
10014a1e:	441c      	add	r4, r3
10014a20:	9b04      	ldr	r3, [sp, #16]
10014a22:	940c      	str	r4, [sp, #48]	@ 0x30
10014a24:	f003 0301 	and.w	r3, r3, #1
10014a28:	9c03      	ldr	r4, [sp, #12]
10014a2a:	930f      	str	r3, [sp, #60]	@ 0x3c
10014a2c:	4649      	mov	r1, r9
10014a2e:	4650      	mov	r0, sl
10014a30:	f7ff fb68 	bl	10014104 <quorem>
10014a34:	4639      	mov	r1, r7
10014a36:	4683      	mov	fp, r0
10014a38:	4650      	mov	r0, sl
10014a3a:	f001 fa33 	bl	10015ea4 <__mcmp>
10014a3e:	4642      	mov	r2, r8
10014a40:	4649      	mov	r1, r9
10014a42:	4605      	mov	r5, r0
10014a44:	4620      	mov	r0, r4
10014a46:	f001 fa4d 	bl	10015ee4 <__mdiff>
10014a4a:	68c2      	ldr	r2, [r0, #12]
10014a4c:	4601      	mov	r1, r0
10014a4e:	f10b 0330 	add.w	r3, fp, #48	@ 0x30
10014a52:	2a00      	cmp	r2, #0
10014a54:	d13a      	bne.n	10014acc <_dtoa_r+0x89c>
10014a56:	9008      	str	r0, [sp, #32]
10014a58:	4650      	mov	r0, sl
10014a5a:	930b      	str	r3, [sp, #44]	@ 0x2c
10014a5c:	f001 fa22 	bl	10015ea4 <__mcmp>
10014a60:	9908      	ldr	r1, [sp, #32]
10014a62:	9006      	str	r0, [sp, #24]
10014a64:	4620      	mov	r0, r4
10014a66:	f000 ffbb 	bl	100159e0 <_Bfree>
10014a6a:	9a06      	ldr	r2, [sp, #24]
10014a6c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014a6e:	2a00      	cmp	r2, #0
10014a70:	d15a      	bne.n	10014b28 <_dtoa_r+0x8f8>
10014a72:	9a28      	ldr	r2, [sp, #160]	@ 0xa0
10014a74:	b91a      	cbnz	r2, 10014a7e <_dtoa_r+0x84e>
10014a76:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
10014a78:	2a00      	cmp	r2, #0
10014a7a:	f000 829a 	beq.w	10014fb2 <_dtoa_r+0xd82>
10014a7e:	2d00      	cmp	r5, #0
10014a80:	db45      	blt.n	10014b0e <_dtoa_r+0x8de>
10014a82:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
10014a84:	46b3      	mov	fp, r6
10014a86:	42b2      	cmp	r2, r6
10014a88:	f80b 3b01 	strb.w	r3, [fp], #1
10014a8c:	f000 81b9 	beq.w	10014e02 <_dtoa_r+0xbd2>
10014a90:	4651      	mov	r1, sl
10014a92:	2300      	movs	r3, #0
10014a94:	220a      	movs	r2, #10
10014a96:	4620      	mov	r0, r4
10014a98:	f000 ffac 	bl	100159f4 <__multadd>
10014a9c:	4547      	cmp	r7, r8
10014a9e:	4682      	mov	sl, r0
10014aa0:	4639      	mov	r1, r7
10014aa2:	f04f 0300 	mov.w	r3, #0
10014aa6:	f04f 020a 	mov.w	r2, #10
10014aaa:	4620      	mov	r0, r4
10014aac:	d036      	beq.n	10014b1c <_dtoa_r+0x8ec>
10014aae:	f000 ffa1 	bl	100159f4 <__multadd>
10014ab2:	4641      	mov	r1, r8
10014ab4:	4607      	mov	r7, r0
10014ab6:	2300      	movs	r3, #0
10014ab8:	220a      	movs	r2, #10
10014aba:	4620      	mov	r0, r4
10014abc:	f000 ff9a 	bl	100159f4 <__multadd>
10014ac0:	465e      	mov	r6, fp
10014ac2:	4680      	mov	r8, r0
10014ac4:	e7b2      	b.n	10014a2c <_dtoa_r+0x7fc>
10014ac6:	bf00      	nop
10014ac8:	40240000 	.word	0x40240000
10014acc:	9803      	ldr	r0, [sp, #12]
10014ace:	9306      	str	r3, [sp, #24]
10014ad0:	f000 ff86 	bl	100159e0 <_Bfree>
10014ad4:	2d00      	cmp	r5, #0
10014ad6:	9b06      	ldr	r3, [sp, #24]
10014ad8:	db06      	blt.n	10014ae8 <_dtoa_r+0x8b8>
10014ada:	9a04      	ldr	r2, [sp, #16]
10014adc:	9928      	ldr	r1, [sp, #160]	@ 0xa0
10014ade:	f002 0201 	and.w	r2, r2, #1
10014ae2:	430d      	orrs	r5, r1
10014ae4:	432a      	orrs	r2, r5
10014ae6:	d12a      	bne.n	10014b3e <_dtoa_r+0x90e>
10014ae8:	4651      	mov	r1, sl
10014aea:	2201      	movs	r2, #1
10014aec:	9803      	ldr	r0, [sp, #12]
10014aee:	9304      	str	r3, [sp, #16]
10014af0:	f001 f960 	bl	10015db4 <__lshift>
10014af4:	4649      	mov	r1, r9
10014af6:	4682      	mov	sl, r0
10014af8:	f001 f9d4 	bl	10015ea4 <__mcmp>
10014afc:	2800      	cmp	r0, #0
10014afe:	9b04      	ldr	r3, [sp, #16]
10014b00:	f340 80e8 	ble.w	10014cd4 <_dtoa_r+0xaa4>
10014b04:	2b39      	cmp	r3, #57	@ 0x39
10014b06:	f000 822f 	beq.w	10014f68 <_dtoa_r+0xd38>
10014b0a:	f10b 0331 	add.w	r3, fp, #49	@ 0x31
10014b0e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014b10:	f806 3b01 	strb.w	r3, [r6], #1
10014b14:	463c      	mov	r4, r7
10014b16:	3501      	adds	r5, #1
10014b18:	4647      	mov	r7, r8
10014b1a:	e712      	b.n	10014942 <_dtoa_r+0x712>
10014b1c:	f000 ff6a 	bl	100159f4 <__multadd>
10014b20:	465e      	mov	r6, fp
10014b22:	4607      	mov	r7, r0
10014b24:	4680      	mov	r8, r0
10014b26:	e781      	b.n	10014a2c <_dtoa_r+0x7fc>
10014b28:	2d00      	cmp	r5, #0
10014b2a:	f2c0 827d 	blt.w	10015028 <_dtoa_r+0xdf8>
10014b2e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
10014b30:	430d      	orrs	r5, r1
10014b32:	990f      	ldr	r1, [sp, #60]	@ 0x3c
10014b34:	430d      	orrs	r5, r1
10014b36:	f000 8277 	beq.w	10015028 <_dtoa_r+0xdf8>
10014b3a:	2a00      	cmp	r2, #0
10014b3c:	dda1      	ble.n	10014a82 <_dtoa_r+0x852>
10014b3e:	2b39      	cmp	r3, #57	@ 0x39
10014b40:	f000 8212 	beq.w	10014f68 <_dtoa_r+0xd38>
10014b44:	3301      	adds	r3, #1
10014b46:	e7e2      	b.n	10014b0e <_dtoa_r+0x8de>
10014b48:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10014b4a:	2b02      	cmp	r3, #2
10014b4c:	f77f aeb4 	ble.w	100148b8 <_dtoa_r+0x688>
10014b50:	9b06      	ldr	r3, [sp, #24]
10014b52:	2b00      	cmp	r3, #0
10014b54:	f040 811d 	bne.w	10014d92 <_dtoa_r+0xb62>
10014b58:	4649      	mov	r1, r9
10014b5a:	2205      	movs	r2, #5
10014b5c:	9803      	ldr	r0, [sp, #12]
10014b5e:	f000 ff49 	bl	100159f4 <__multadd>
10014b62:	4601      	mov	r1, r0
10014b64:	4681      	mov	r9, r0
10014b66:	4650      	mov	r0, sl
10014b68:	f001 f99c 	bl	10015ea4 <__mcmp>
10014b6c:	2800      	cmp	r0, #0
10014b6e:	f340 8110 	ble.w	10014d92 <_dtoa_r+0xb62>
10014b72:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10014b74:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014b76:	2331      	movs	r3, #49	@ 0x31
10014b78:	f806 3b01 	strb.w	r3, [r6], #1
10014b7c:	3501      	adds	r5, #1
10014b7e:	9803      	ldr	r0, [sp, #12]
10014b80:	4649      	mov	r1, r9
10014b82:	3501      	adds	r5, #1
10014b84:	f000 ff2c 	bl	100159e0 <_Bfree>
10014b88:	2f00      	cmp	r7, #0
10014b8a:	f47f aee8 	bne.w	1001495e <_dtoa_r+0x72e>
10014b8e:	e6ea      	b.n	10014966 <_dtoa_r+0x736>
10014b90:	4649      	mov	r1, r9
10014b92:	4650      	mov	r0, sl
10014b94:	f001 f986 	bl	10015ea4 <__mcmp>
10014b98:	2800      	cmp	r0, #0
10014b9a:	f6bf ae89 	bge.w	100148b0 <_dtoa_r+0x680>
10014b9e:	4651      	mov	r1, sl
10014ba0:	2300      	movs	r3, #0
10014ba2:	9803      	ldr	r0, [sp, #12]
10014ba4:	220a      	movs	r2, #10
10014ba6:	f000 ff25 	bl	100159f4 <__multadd>
10014baa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014bac:	1e5d      	subs	r5, r3, #1
10014bae:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
10014bb0:	4682      	mov	sl, r0
10014bb2:	2b00      	cmp	r3, #0
10014bb4:	f47f af1b 	bne.w	100149ee <_dtoa_r+0x7be>
10014bb8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014bba:	2b00      	cmp	r3, #0
10014bbc:	f340 81ff 	ble.w	10014fbe <_dtoa_r+0xd8e>
10014bc0:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014bc2:	9306      	str	r3, [sp, #24]
10014bc4:	e67e      	b.n	100148c4 <_dtoa_r+0x694>
10014bc6:	4601      	mov	r1, r0
10014bc8:	465a      	mov	r2, fp
10014bca:	9803      	ldr	r0, [sp, #12]
10014bcc:	f001 f898 	bl	10015d00 <__pow5mult>
10014bd0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10014bd2:	2b01      	cmp	r3, #1
10014bd4:	4681      	mov	r9, r0
10014bd6:	dd6c      	ble.n	10014cb2 <_dtoa_r+0xa82>
10014bd8:	f04f 0b00 	mov.w	fp, #0
10014bdc:	f8d9 3010 	ldr.w	r3, [r9, #16]
10014be0:	eb09 0383 	add.w	r3, r9, r3, lsl #2
10014be4:	6918      	ldr	r0, [r3, #16]
10014be6:	f000 ff55 	bl	10015a94 <__hi0bits>
10014bea:	f1c0 0020 	rsb	r0, r0, #32
10014bee:	e639      	b.n	10014864 <_dtoa_r+0x634>
10014bf0:	4b92      	ldr	r3, [pc, #584]	@ (10014e3c <_dtoa_r+0xc0c>)
10014bf2:	930a      	str	r3, [sp, #40]	@ 0x28
10014bf4:	3303      	adds	r3, #3
10014bf6:	f7ff bbfa 	b.w	100143ee <_dtoa_r+0x1be>
10014bfa:	9b04      	ldr	r3, [sp, #16]
10014bfc:	2b00      	cmp	r3, #0
10014bfe:	f47f ae30 	bne.w	10014862 <_dtoa_r+0x632>
10014c02:	e9dd 1204 	ldrd	r1, r2, [sp, #16]
10014c06:	f3c2 0313 	ubfx	r3, r2, #0, #20
10014c0a:	2b00      	cmp	r3, #0
10014c0c:	f47f ae29 	bne.w	10014862 <_dtoa_r+0x632>
10014c10:	4b8b      	ldr	r3, [pc, #556]	@ (10014e40 <_dtoa_r+0xc10>)
10014c12:	4013      	ands	r3, r2
10014c14:	b123      	cbz	r3, 10014c20 <_dtoa_r+0x9f0>
10014c16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014c18:	3301      	adds	r3, #1
10014c1a:	930b      	str	r3, [sp, #44]	@ 0x2c
10014c1c:	3401      	adds	r4, #1
10014c1e:	2301      	movs	r3, #1
10014c20:	f1bb 0f00 	cmp.w	fp, #0
10014c24:	f040 81ae 	bne.w	10014f84 <_dtoa_r+0xd54>
10014c28:	469b      	mov	fp, r3
10014c2a:	e61a      	b.n	10014862 <_dtoa_r+0x632>
10014c2c:	f43f ae2b 	beq.w	10014886 <_dtoa_r+0x656>
10014c30:	f1c0 033c 	rsb	r3, r0, #60	@ 0x3c
10014c34:	e6b6      	b.n	100149a4 <_dtoa_r+0x774>
10014c36:	2301      	movs	r3, #1
10014c38:	930c      	str	r3, [sp, #48]	@ 0x30
10014c3a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10014c3c:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10014c3e:	4413      	add	r3, r2
10014c40:	9318      	str	r3, [sp, #96]	@ 0x60
10014c42:	3301      	adds	r3, #1
10014c44:	2b01      	cmp	r3, #1
10014c46:	461e      	mov	r6, r3
10014c48:	9306      	str	r3, [sp, #24]
10014c4a:	bfb8      	it	lt
10014c4c:	2601      	movlt	r6, #1
10014c4e:	2e17      	cmp	r6, #23
10014c50:	f340 81d5 	ble.w	10014ffe <_dtoa_r+0xdce>
10014c54:	2201      	movs	r2, #1
10014c56:	2304      	movs	r3, #4
10014c58:	005b      	lsls	r3, r3, #1
10014c5a:	f103 0014 	add.w	r0, r3, #20
10014c5e:	42b0      	cmp	r0, r6
10014c60:	4611      	mov	r1, r2
10014c62:	f102 0201 	add.w	r2, r2, #1
10014c66:	d9f7      	bls.n	10014c58 <_dtoa_r+0xa28>
10014c68:	9b03      	ldr	r3, [sp, #12]
10014c6a:	63d9      	str	r1, [r3, #60]	@ 0x3c
10014c6c:	e411      	b.n	10014492 <_dtoa_r+0x262>
10014c6e:	2301      	movs	r3, #1
10014c70:	930c      	str	r3, [sp, #48]	@ 0x30
10014c72:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
10014c74:	2b00      	cmp	r3, #0
10014c76:	dd33      	ble.n	10014ce0 <_dtoa_r+0xab0>
10014c78:	9318      	str	r3, [sp, #96]	@ 0x60
10014c7a:	9306      	str	r3, [sp, #24]
10014c7c:	461e      	mov	r6, r3
10014c7e:	e7e6      	b.n	10014c4e <_dtoa_r+0xa1e>
10014c80:	2300      	movs	r3, #0
10014c82:	930c      	str	r3, [sp, #48]	@ 0x30
10014c84:	e7d9      	b.n	10014c3a <_dtoa_r+0xa0a>
10014c86:	2300      	movs	r3, #0
10014c88:	930c      	str	r3, [sp, #48]	@ 0x30
10014c8a:	e7f2      	b.n	10014c72 <_dtoa_r+0xa42>
10014c8c:	4639      	mov	r1, r7
10014c8e:	9803      	ldr	r0, [sp, #12]
10014c90:	4632      	mov	r2, r6
10014c92:	f001 f88f 	bl	10015db4 <__lshift>
10014c96:	4607      	mov	r7, r0
10014c98:	e6b9      	b.n	10014a0e <_dtoa_r+0x7de>
10014c9a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10014c9c:	9a06      	ldr	r2, [sp, #24]
10014c9e:	950f      	str	r5, [sp, #60]	@ 0x3c
10014ca0:	1aeb      	subs	r3, r5, r3
10014ca2:	449b      	add	fp, r3
10014ca4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014ca6:	461e      	mov	r6, r3
10014ca8:	4413      	add	r3, r2
10014caa:	4414      	add	r4, r2
10014cac:	930b      	str	r3, [sp, #44]	@ 0x2c
10014cae:	2500      	movs	r5, #0
10014cb0:	e690      	b.n	100149d4 <_dtoa_r+0x7a4>
10014cb2:	9b04      	ldr	r3, [sp, #16]
10014cb4:	2b00      	cmp	r3, #0
10014cb6:	d18f      	bne.n	10014bd8 <_dtoa_r+0x9a8>
10014cb8:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
10014cbc:	f3c1 0313 	ubfx	r3, r1, #0, #20
10014cc0:	460a      	mov	r2, r1
10014cc2:	2b00      	cmp	r3, #0
10014cc4:	d188      	bne.n	10014bd8 <_dtoa_r+0x9a8>
10014cc6:	e7a3      	b.n	10014c10 <_dtoa_r+0x9e0>
10014cc8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10014ccc:	2702      	movs	r7, #2
10014cce:	e9cd 2312 	strd	r2, r3, [sp, #72]	@ 0x48
10014cd2:	e40b      	b.n	100144ec <_dtoa_r+0x2bc>
10014cd4:	f47f af1b 	bne.w	10014b0e <_dtoa_r+0x8de>
10014cd8:	07da      	lsls	r2, r3, #31
10014cda:	f57f af18 	bpl.w	10014b0e <_dtoa_r+0x8de>
10014cde:	e711      	b.n	10014b04 <_dtoa_r+0x8d4>
10014ce0:	2301      	movs	r3, #1
10014ce2:	9329      	str	r3, [sp, #164]	@ 0xa4
10014ce4:	9306      	str	r3, [sp, #24]
10014ce6:	f7ff bbcf 	b.w	10014488 <_dtoa_r+0x258>
10014cea:	d103      	bne.n	10014cf4 <_dtoa_r+0xac4>
10014cec:	9b04      	ldr	r3, [sp, #16]
10014cee:	07db      	lsls	r3, r3, #31
10014cf0:	f53f ae18 	bmi.w	10014924 <_dtoa_r+0x6f4>
10014cf4:	465e      	mov	r6, fp
10014cf6:	f81b 3d01 	ldrb.w	r3, [fp, #-1]!
10014cfa:	2b30      	cmp	r3, #48	@ 0x30
10014cfc:	d0fa      	beq.n	10014cf4 <_dtoa_r+0xac4>
10014cfe:	e620      	b.n	10014942 <_dtoa_r+0x712>
10014d00:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014d02:	2331      	movs	r3, #49	@ 0x31
10014d04:	3501      	adds	r5, #1
10014d06:	7013      	strb	r3, [r2, #0]
10014d08:	e61b      	b.n	10014942 <_dtoa_r+0x712>
10014d0a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
10014d0c:	2a00      	cmp	r2, #0
10014d0e:	f000 80f9 	beq.w	10014f04 <_dtoa_r+0xcd4>
10014d12:	f203 4333 	addw	r3, r3, #1075	@ 0x433
10014d16:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
10014d18:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
10014d1a:	4616      	mov	r6, r2
10014d1c:	441a      	add	r2, r3
10014d1e:	441c      	add	r4, r3
10014d20:	920b      	str	r2, [sp, #44]	@ 0x2c
10014d22:	e657      	b.n	100149d4 <_dtoa_r+0x7a4>
10014d24:	f1c8 0301 	rsb	r3, r8, #1
10014d28:	4604      	mov	r4, r0
10014d2a:	930b      	str	r3, [sp, #44]	@ 0x2c
10014d2c:	9010      	str	r0, [sp, #64]	@ 0x40
10014d2e:	f7ff bb9b 	b.w	10014468 <_dtoa_r+0x238>
10014d32:	f000 80eb 	beq.w	10014f0c <_dtoa_r+0xcdc>
10014d36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014d38:	4d42      	ldr	r5, [pc, #264]	@ (10014e44 <_dtoa_r+0xc14>)
10014d3a:	425e      	negs	r6, r3
10014d3c:	f006 030f 	and.w	r3, r6, #15
10014d40:	eb05 03c3 	add.w	r3, r5, r3, lsl #3
10014d44:	e9d3 2300 	ldrd	r2, r3, [r3]
10014d48:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10014d4c:	f001 fcc6 	bl	100166dc <__aeabi_dmul>
10014d50:	1135      	asrs	r5, r6, #4
10014d52:	e9cd 0112 	strd	r0, r1, [sp, #72]	@ 0x48
10014d56:	f000 814d 	beq.w	10014ff4 <_dtoa_r+0xdc4>
10014d5a:	4e3b      	ldr	r6, [pc, #236]	@ (10014e48 <_dtoa_r+0xc18>)
10014d5c:	2300      	movs	r3, #0
10014d5e:	2702      	movs	r7, #2
10014d60:	4680      	mov	r8, r0
10014d62:	4689      	mov	r9, r1
10014d64:	07e8      	lsls	r0, r5, #31
10014d66:	d509      	bpl.n	10014d7c <_dtoa_r+0xb4c>
10014d68:	e9d6 2300 	ldrd	r2, r3, [r6]
10014d6c:	4640      	mov	r0, r8
10014d6e:	4649      	mov	r1, r9
10014d70:	f001 fcb4 	bl	100166dc <__aeabi_dmul>
10014d74:	3701      	adds	r7, #1
10014d76:	4680      	mov	r8, r0
10014d78:	4689      	mov	r9, r1
10014d7a:	2301      	movs	r3, #1
10014d7c:	106d      	asrs	r5, r5, #1
10014d7e:	f106 0608 	add.w	r6, r6, #8
10014d82:	d1ef      	bne.n	10014d64 <_dtoa_r+0xb34>
10014d84:	2b00      	cmp	r3, #0
10014d86:	f47f abca 	bne.w	1001451e <_dtoa_r+0x2ee>
10014d8a:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
10014d8e:	f7ff bbc6 	b.w	1001451e <_dtoa_r+0x2ee>
10014d92:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
10014d94:	e4ca      	b.n	1001472c <_dtoa_r+0x4fc>
10014d96:	f8dd a018 	ldr.w	sl, [sp, #24]
10014d9a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014d9c:	4602      	mov	r2, r0
10014d9e:	460b      	mov	r3, r1
10014da0:	f001 fae6 	bl	10016370 <__adddf3>
10014da4:	4602      	mov	r2, r0
10014da6:	460b      	mov	r3, r1
10014da8:	e9cd 2306 	strd	r2, r3, [sp, #24]
10014dac:	3501      	adds	r5, #1
10014dae:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10014db2:	46a8      	mov	r8, r5
10014db4:	f001 ff22 	bl	10016bfc <__aeabi_dcmpgt>
10014db8:	b940      	cbnz	r0, 10014dcc <_dtoa_r+0xb9c>
10014dba:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
10014dbe:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10014dc2:	f001 fef3 	bl	10016bac <__aeabi_dcmpeq>
10014dc6:	b118      	cbz	r0, 10014dd0 <_dtoa_r+0xba0>
10014dc8:	07f1      	lsls	r1, r6, #31
10014dca:	d501      	bpl.n	10014dd0 <_dtoa_r+0xba0>
10014dcc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014dce:	e44a      	b.n	10014666 <_dtoa_r+0x436>
10014dd0:	463e      	mov	r6, r7
10014dd2:	e5c8      	b.n	10014966 <_dtoa_r+0x736>
10014dd4:	6879      	ldr	r1, [r7, #4]
10014dd6:	9803      	ldr	r0, [sp, #12]
10014dd8:	f000 fddc 	bl	10015994 <_Balloc>
10014ddc:	4605      	mov	r5, r0
10014dde:	2800      	cmp	r0, #0
10014de0:	f000 8126 	beq.w	10015030 <_dtoa_r+0xe00>
10014de4:	693b      	ldr	r3, [r7, #16]
10014de6:	3302      	adds	r3, #2
10014de8:	009a      	lsls	r2, r3, #2
10014dea:	f107 010c 	add.w	r1, r7, #12
10014dee:	300c      	adds	r0, #12
10014df0:	f7fb fc2c 	bl	1001064c <memcpy>
10014df4:	9803      	ldr	r0, [sp, #12]
10014df6:	4629      	mov	r1, r5
10014df8:	2201      	movs	r2, #1
10014dfa:	f000 ffdb 	bl	10015db4 <__lshift>
10014dfe:	4680      	mov	r8, r0
10014e00:	e60a      	b.n	10014a18 <_dtoa_r+0x7e8>
10014e02:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014e04:	463c      	mov	r4, r7
10014e06:	3501      	adds	r5, #1
10014e08:	4647      	mov	r7, r8
10014e0a:	e57e      	b.n	1001490a <_dtoa_r+0x6da>
10014e0c:	f8dd 800c 	ldr.w	r8, [sp, #12]
10014e10:	4639      	mov	r1, r7
10014e12:	462a      	mov	r2, r5
10014e14:	4640      	mov	r0, r8
10014e16:	f000 ff73 	bl	10015d00 <__pow5mult>
10014e1a:	4652      	mov	r2, sl
10014e1c:	4601      	mov	r1, r0
10014e1e:	4607      	mov	r7, r0
10014e20:	4640      	mov	r0, r8
10014e22:	f000 feb7 	bl	10015b94 <__multiply>
10014e26:	4651      	mov	r1, sl
10014e28:	4682      	mov	sl, r0
10014e2a:	4640      	mov	r0, r8
10014e2c:	f000 fdd8 	bl	100159e0 <_Bfree>
10014e30:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
10014e32:	1b5b      	subs	r3, r3, r5
10014e34:	930f      	str	r3, [sp, #60]	@ 0x3c
10014e36:	f43f ad07 	beq.w	10014848 <_dtoa_r+0x618>
10014e3a:	e4ff      	b.n	1001483c <_dtoa_r+0x60c>
10014e3c:	10017150 	.word	0x10017150
10014e40:	7ff00000 	.word	0x7ff00000
10014e44:	10017398 	.word	0x10017398
10014e48:	10017370 	.word	0x10017370
10014e4c:	e9dd 0114 	ldrd	r0, r1, [sp, #80]	@ 0x50
10014e50:	f001 fc44 	bl	100166dc <__aeabi_dmul>
10014e54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014e56:	701f      	strb	r7, [r3, #0]
10014e58:	9b12      	ldr	r3, [sp, #72]	@ 0x48
10014e5a:	2b01      	cmp	r3, #1
10014e5c:	e9cd 010c 	strd	r0, r1, [sp, #48]	@ 0x30
10014e60:	f000 80c6 	beq.w	10014ff0 <_dtoa_r+0xdc0>
10014e64:	9f12      	ldr	r7, [sp, #72]	@ 0x48
10014e66:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
10014e68:	f8cd b044 	str.w	fp, [sp, #68]	@ 0x44
10014e6c:	441f      	add	r7, r3
10014e6e:	4b7c      	ldr	r3, [pc, #496]	@ (10015060 <_dtoa_r+0xe30>)
10014e70:	2200      	movs	r2, #0
10014e72:	4640      	mov	r0, r8
10014e74:	4649      	mov	r1, r9
10014e76:	f001 fc31 	bl	100166dc <__aeabi_dmul>
10014e7a:	4689      	mov	r9, r1
10014e7c:	4680      	mov	r8, r0
10014e7e:	f001 fedd 	bl	10016c3c <__aeabi_d2iz>
10014e82:	4683      	mov	fp, r0
10014e84:	f001 fbc0 	bl	10016608 <__aeabi_i2d>
10014e88:	f10b 0b30 	add.w	fp, fp, #48	@ 0x30
10014e8c:	4602      	mov	r2, r0
10014e8e:	460b      	mov	r3, r1
10014e90:	4640      	mov	r0, r8
10014e92:	4649      	mov	r1, r9
10014e94:	f001 fa6a 	bl	1001636c <__aeabi_dsub>
10014e98:	f806 bb01 	strb.w	fp, [r6], #1
10014e9c:	42b7      	cmp	r7, r6
10014e9e:	4680      	mov	r8, r0
10014ea0:	4689      	mov	r9, r1
10014ea2:	d1e4      	bne.n	10014e6e <_dtoa_r+0xc3e>
10014ea4:	f8dd b044 	ldr.w	fp, [sp, #68]	@ 0x44
10014ea8:	4b6e      	ldr	r3, [pc, #440]	@ (10015064 <_dtoa_r+0xe34>)
10014eaa:	2200      	movs	r2, #0
10014eac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
10014eb0:	f001 fa5e 	bl	10016370 <__adddf3>
10014eb4:	4602      	mov	r2, r0
10014eb6:	460b      	mov	r3, r1
10014eb8:	4640      	mov	r0, r8
10014eba:	4649      	mov	r1, r9
10014ebc:	f001 fe9e 	bl	10016bfc <__aeabi_dcmpgt>
10014ec0:	2800      	cmp	r0, #0
10014ec2:	d167      	bne.n	10014f94 <_dtoa_r+0xd64>
10014ec4:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	@ 0x30
10014ec8:	4966      	ldr	r1, [pc, #408]	@ (10015064 <_dtoa_r+0xe34>)
10014eca:	2000      	movs	r0, #0
10014ecc:	f001 fa4e 	bl	1001636c <__aeabi_dsub>
10014ed0:	4602      	mov	r2, r0
10014ed2:	460b      	mov	r3, r1
10014ed4:	4640      	mov	r0, r8
10014ed6:	4649      	mov	r1, r9
10014ed8:	f001 fe72 	bl	10016bc0 <__aeabi_dcmplt>
10014edc:	b948      	cbnz	r0, 10014ef2 <_dtoa_r+0xcc2>
10014ede:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
10014ee0:	2b00      	cmp	r3, #0
10014ee2:	f6ff ac93 	blt.w	1001480c <_dtoa_r+0x5dc>
10014ee6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
10014ee8:	2b0e      	cmp	r3, #14
10014eea:	f73f ac8f 	bgt.w	1001480c <_dtoa_r+0x5dc>
10014eee:	f7ff bbfc 	b.w	100146ea <_dtoa_r+0x4ba>
10014ef2:	463e      	mov	r6, r7
10014ef4:	3f01      	subs	r7, #1
10014ef6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
10014efa:	2b30      	cmp	r3, #48	@ 0x30
10014efc:	d0f9      	beq.n	10014ef2 <_dtoa_r+0xcc2>
10014efe:	9d19      	ldr	r5, [sp, #100]	@ 0x64
10014f00:	3501      	adds	r5, #1
10014f02:	e530      	b.n	10014966 <_dtoa_r+0x736>
10014f04:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
10014f06:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
10014f0a:	e704      	b.n	10014d16 <_dtoa_r+0xae6>
10014f0c:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
10014f10:	2702      	movs	r7, #2
10014f12:	f7ff bb04 	b.w	1001451e <_dtoa_r+0x2ee>
10014f16:	9b06      	ldr	r3, [sp, #24]
10014f18:	2b00      	cmp	r3, #0
10014f1a:	f43f abb8 	beq.w	1001468e <_dtoa_r+0x45e>
10014f1e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014f20:	2b00      	cmp	r3, #0
10014f22:	f77f abd9 	ble.w	100146d8 <_dtoa_r+0x4a8>
10014f26:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
10014f28:	9312      	str	r3, [sp, #72]	@ 0x48
10014f2a:	3a01      	subs	r2, #1
10014f2c:	4b4c      	ldr	r3, [pc, #304]	@ (10015060 <_dtoa_r+0xe30>)
10014f2e:	9219      	str	r2, [sp, #100]	@ 0x64
10014f30:	4640      	mov	r0, r8
10014f32:	2200      	movs	r2, #0
10014f34:	4649      	mov	r1, r9
10014f36:	f001 fbd1 	bl	100166dc <__aeabi_dmul>
10014f3a:	4680      	mov	r8, r0
10014f3c:	4689      	mov	r9, r1
10014f3e:	1c78      	adds	r0, r7, #1
10014f40:	f001 fb62 	bl	10016608 <__aeabi_i2d>
10014f44:	4642      	mov	r2, r8
10014f46:	464b      	mov	r3, r9
10014f48:	f001 fbc8 	bl	100166dc <__aeabi_dmul>
10014f4c:	4b46      	ldr	r3, [pc, #280]	@ (10015068 <_dtoa_r+0xe38>)
10014f4e:	2200      	movs	r2, #0
10014f50:	f001 fa0e 	bl	10016370 <__adddf3>
10014f54:	4606      	mov	r6, r0
10014f56:	f1a1 7750 	sub.w	r7, r1, #54525952	@ 0x3400000
10014f5a:	f7ff bb01 	b.w	10014560 <_dtoa_r+0x330>
10014f5e:	f108 0801 	add.w	r8, r8, #1
10014f62:	2331      	movs	r3, #49	@ 0x31
10014f64:	f7ff bb86 	b.w	10014674 <_dtoa_r+0x444>
10014f68:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014f6a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014f6c:	46b3      	mov	fp, r6
10014f6e:	2339      	movs	r3, #57	@ 0x39
10014f70:	463c      	mov	r4, r7
10014f72:	f80b 3b01 	strb.w	r3, [fp], #1
10014f76:	3501      	adds	r5, #1
10014f78:	4647      	mov	r7, r8
10014f7a:	e4d8      	b.n	1001492e <_dtoa_r+0x6fe>
10014f7c:	f04f 0900 	mov.w	r9, #0
10014f80:	464f      	mov	r7, r9
10014f82:	e5f6      	b.n	10014b72 <_dtoa_r+0x942>
10014f84:	469b      	mov	fp, r3
10014f86:	e629      	b.n	10014bdc <_dtoa_r+0x9ac>
10014f88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
10014f8a:	461e      	mov	r6, r3
10014f8c:	4413      	add	r3, r2
10014f8e:	4414      	add	r4, r2
10014f90:	930b      	str	r3, [sp, #44]	@ 0x2c
10014f92:	e51f      	b.n	100149d4 <_dtoa_r+0x7a4>
10014f94:	9b19      	ldr	r3, [sp, #100]	@ 0x64
10014f96:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014f98:	f103 0801 	add.w	r8, r3, #1
10014f9c:	f7ff bb63 	b.w	10014666 <_dtoa_r+0x436>
10014fa0:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10014fa4:	e7ab      	b.n	10014efe <_dtoa_r+0xcce>
10014fa6:	e9dd b41a 	ldrd	fp, r4, [sp, #104]	@ 0x68
10014faa:	f8dd a058 	ldr.w	sl, [sp, #88]	@ 0x58
10014fae:	f7ff bb93 	b.w	100146d8 <_dtoa_r+0x4a8>
10014fb2:	2b39      	cmp	r3, #57	@ 0x39
10014fb4:	d0d8      	beq.n	10014f68 <_dtoa_r+0xd38>
10014fb6:	2d00      	cmp	r5, #0
10014fb8:	f73f ada7 	bgt.w	10014b0a <_dtoa_r+0x8da>
10014fbc:	e5a7      	b.n	10014b0e <_dtoa_r+0x8de>
10014fbe:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10014fc0:	2b02      	cmp	r3, #2
10014fc2:	dc0a      	bgt.n	10014fda <_dtoa_r+0xdaa>
10014fc4:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014fc6:	9306      	str	r3, [sp, #24]
10014fc8:	4649      	mov	r1, r9
10014fca:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
10014fcc:	f7ff f89a 	bl	10014104 <quorem>
10014fd0:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
10014fd2:	f100 0330 	add.w	r3, r0, #48	@ 0x30
10014fd6:	7013      	strb	r3, [r2, #0]
10014fd8:	e48d      	b.n	100148f6 <_dtoa_r+0x6c6>
10014fda:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014fdc:	9306      	str	r3, [sp, #24]
10014fde:	950e      	str	r5, [sp, #56]	@ 0x38
10014fe0:	e5b6      	b.n	10014b50 <_dtoa_r+0x920>
10014fe2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
10014fe4:	2b02      	cmp	r3, #2
10014fe6:	dcf8      	bgt.n	10014fda <_dtoa_r+0xdaa>
10014fe8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
10014fea:	950e      	str	r5, [sp, #56]	@ 0x38
10014fec:	9306      	str	r3, [sp, #24]
10014fee:	e50b      	b.n	10014a08 <_dtoa_r+0x7d8>
10014ff0:	4637      	mov	r7, r6
10014ff2:	e759      	b.n	10014ea8 <_dtoa_r+0xc78>
10014ff4:	e9dd 8912 	ldrd	r8, r9, [sp, #72]	@ 0x48
10014ff8:	2702      	movs	r7, #2
10014ffa:	f7ff ba90 	b.w	1001451e <_dtoa_r+0x2ee>
10014ffe:	9b03      	ldr	r3, [sp, #12]
10015000:	2100      	movs	r1, #0
10015002:	63d9      	str	r1, [r3, #60]	@ 0x3c
10015004:	f7ff ba45 	b.w	10014492 <_dtoa_r+0x262>
10015008:	9b03      	ldr	r3, [sp, #12]
1001500a:	2500      	movs	r5, #0
1001500c:	63dd      	str	r5, [r3, #60]	@ 0x3c
1001500e:	4629      	mov	r1, r5
10015010:	4618      	mov	r0, r3
10015012:	f000 fcbf 	bl	10015994 <_Balloc>
10015016:	900a      	str	r0, [sp, #40]	@ 0x28
10015018:	b9a8      	cbnz	r0, 10015046 <_dtoa_r+0xe16>
1001501a:	4b14      	ldr	r3, [pc, #80]	@ (1001506c <_dtoa_r+0xe3c>)
1001501c:	4814      	ldr	r0, [pc, #80]	@ (10015070 <_dtoa_r+0xe40>)
1001501e:	2200      	movs	r2, #0
10015020:	f240 11af 	movw	r1, #431	@ 0x1af
10015024:	f000 fc96 	bl	10015954 <__assert_func>
10015028:	2a00      	cmp	r2, #0
1001502a:	f77f ad70 	ble.w	10014b0e <_dtoa_r+0x8de>
1001502e:	e55b      	b.n	10014ae8 <_dtoa_r+0x8b8>
10015030:	4b0e      	ldr	r3, [pc, #56]	@ (1001506c <_dtoa_r+0xe3c>)
10015032:	480f      	ldr	r0, [pc, #60]	@ (10015070 <_dtoa_r+0xe40>)
10015034:	462a      	mov	r2, r5
10015036:	f240 21ef 	movw	r1, #751	@ 0x2ef
1001503a:	f000 fc8b 	bl	10015954 <__assert_func>
1001503e:	4b0d      	ldr	r3, [pc, #52]	@ (10015074 <_dtoa_r+0xe44>)
10015040:	930a      	str	r3, [sp, #40]	@ 0x28
10015042:	f7ff b930 	b.w	100142a6 <_dtoa_r+0x76>
10015046:	9b03      	ldr	r3, [sp, #12]
10015048:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
1001504a:	639a      	str	r2, [r3, #56]	@ 0x38
1001504c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10015050:	2201      	movs	r2, #1
10015052:	9529      	str	r5, [sp, #164]	@ 0xa4
10015054:	9318      	str	r3, [sp, #96]	@ 0x60
10015056:	920c      	str	r2, [sp, #48]	@ 0x30
10015058:	9306      	str	r3, [sp, #24]
1001505a:	f7ff bb3d 	b.w	100146d8 <_dtoa_r+0x4a8>
1001505e:	bf00      	nop
10015060:	40240000 	.word	0x40240000
10015064:	3fe00000 	.word	0x3fe00000
10015068:	401c0000 	.word	0x401c0000
1001506c:	10017154 	.word	0x10017154
10015070:	10017168 	.word	0x10017168
10015074:	10017144 	.word	0x10017144

10015078 <_close_r>:
10015078:	b538      	push	{r3, r4, r5, lr}
1001507a:	4d07      	ldr	r5, [pc, #28]	@ (10015098 <_close_r+0x20>)
1001507c:	2200      	movs	r2, #0
1001507e:	4604      	mov	r4, r0
10015080:	4608      	mov	r0, r1
10015082:	602a      	str	r2, [r5, #0]
10015084:	f7f9 f9b0 	bl	1000e3e8 <_close>
10015088:	1c43      	adds	r3, r0, #1
1001508a:	d000      	beq.n	1001508e <_close_r+0x16>
1001508c:	bd38      	pop	{r3, r4, r5, pc}
1001508e:	682b      	ldr	r3, [r5, #0]
10015090:	2b00      	cmp	r3, #0
10015092:	d0fb      	beq.n	1001508c <_close_r+0x14>
10015094:	6023      	str	r3, [r4, #0]
10015096:	bd38      	pop	{r3, r4, r5, pc}
10015098:	20000e54 	.word	0x20000e54

1001509c <__sflush_r>:
1001509c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
100150a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100150a2:	4607      	mov	r7, r0
100150a4:	0710      	lsls	r0, r2, #28
100150a6:	460c      	mov	r4, r1
100150a8:	d446      	bmi.n	10015138 <__sflush_r+0x9c>
100150aa:	6849      	ldr	r1, [r1, #4]
100150ac:	f442 6300 	orr.w	r3, r2, #2048	@ 0x800
100150b0:	2900      	cmp	r1, #0
100150b2:	81a3      	strh	r3, [r4, #12]
100150b4:	dd5c      	ble.n	10015170 <__sflush_r+0xd4>
100150b6:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100150b8:	2d00      	cmp	r5, #0
100150ba:	d03b      	beq.n	10015134 <__sflush_r+0x98>
100150bc:	2100      	movs	r1, #0
100150be:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
100150c2:	683e      	ldr	r6, [r7, #0]
100150c4:	6039      	str	r1, [r7, #0]
100150c6:	69e1      	ldr	r1, [r4, #28]
100150c8:	d15e      	bne.n	10015188 <__sflush_r+0xec>
100150ca:	2301      	movs	r3, #1
100150cc:	4638      	mov	r0, r7
100150ce:	47a8      	blx	r5
100150d0:	1c41      	adds	r1, r0, #1
100150d2:	4602      	mov	r2, r0
100150d4:	d068      	beq.n	100151a8 <__sflush_r+0x10c>
100150d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100150da:	6aa5      	ldr	r5, [r4, #40]	@ 0x28
100150dc:	69e1      	ldr	r1, [r4, #28]
100150de:	075b      	lsls	r3, r3, #29
100150e0:	d505      	bpl.n	100150ee <__sflush_r+0x52>
100150e2:	6863      	ldr	r3, [r4, #4]
100150e4:	1ad2      	subs	r2, r2, r3
100150e6:	6b23      	ldr	r3, [r4, #48]	@ 0x30
100150e8:	b10b      	cbz	r3, 100150ee <__sflush_r+0x52>
100150ea:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
100150ec:	1ad2      	subs	r2, r2, r3
100150ee:	2300      	movs	r3, #0
100150f0:	4638      	mov	r0, r7
100150f2:	47a8      	blx	r5
100150f4:	1c45      	adds	r5, r0, #1
100150f6:	d149      	bne.n	1001518c <__sflush_r+0xf0>
100150f8:	6839      	ldr	r1, [r7, #0]
100150fa:	291d      	cmp	r1, #29
100150fc:	d83c      	bhi.n	10015178 <__sflush_r+0xdc>
100150fe:	4a30      	ldr	r2, [pc, #192]	@ (100151c0 <__sflush_r+0x124>)
10015100:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015104:	410a      	asrs	r2, r1
10015106:	f012 0201 	ands.w	r2, r2, #1
1001510a:	d137      	bne.n	1001517c <__sflush_r+0xe0>
1001510c:	6062      	str	r2, [r4, #4]
1001510e:	6922      	ldr	r2, [r4, #16]
10015110:	6022      	str	r2, [r4, #0]
10015112:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10015116:	81a2      	strh	r2, [r4, #12]
10015118:	04da      	lsls	r2, r3, #19
1001511a:	d44e      	bmi.n	100151ba <__sflush_r+0x11e>
1001511c:	6b21      	ldr	r1, [r4, #48]	@ 0x30
1001511e:	603e      	str	r6, [r7, #0]
10015120:	b141      	cbz	r1, 10015134 <__sflush_r+0x98>
10015122:	f104 0340 	add.w	r3, r4, #64	@ 0x40
10015126:	4299      	cmp	r1, r3
10015128:	d002      	beq.n	10015130 <__sflush_r+0x94>
1001512a:	4638      	mov	r0, r7
1001512c:	f7fb fbf0 	bl	10010910 <_free_r>
10015130:	2300      	movs	r3, #0
10015132:	6323      	str	r3, [r4, #48]	@ 0x30
10015134:	2000      	movs	r0, #0
10015136:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10015138:	690e      	ldr	r6, [r1, #16]
1001513a:	2e00      	cmp	r6, #0
1001513c:	d0fa      	beq.n	10015134 <__sflush_r+0x98>
1001513e:	680d      	ldr	r5, [r1, #0]
10015140:	600e      	str	r6, [r1, #0]
10015142:	0791      	lsls	r1, r2, #30
10015144:	bf0c      	ite	eq
10015146:	6963      	ldreq	r3, [r4, #20]
10015148:	2300      	movne	r3, #0
1001514a:	1bad      	subs	r5, r5, r6
1001514c:	60a3      	str	r3, [r4, #8]
1001514e:	e00c      	b.n	1001516a <__sflush_r+0xce>
10015150:	f8d4 c024 	ldr.w	ip, [r4, #36]	@ 0x24
10015154:	69e1      	ldr	r1, [r4, #28]
10015156:	462b      	mov	r3, r5
10015158:	4632      	mov	r2, r6
1001515a:	4638      	mov	r0, r7
1001515c:	47e0      	blx	ip
1001515e:	f1b0 0c00 	subs.w	ip, r0, #0
10015162:	eba5 050c 	sub.w	r5, r5, ip
10015166:	4466      	add	r6, ip
10015168:	dd06      	ble.n	10015178 <__sflush_r+0xdc>
1001516a:	2d00      	cmp	r5, #0
1001516c:	dcf0      	bgt.n	10015150 <__sflush_r+0xb4>
1001516e:	e7e1      	b.n	10015134 <__sflush_r+0x98>
10015170:	6be1      	ldr	r1, [r4, #60]	@ 0x3c
10015172:	2900      	cmp	r1, #0
10015174:	dc9f      	bgt.n	100150b6 <__sflush_r+0x1a>
10015176:	e7dd      	b.n	10015134 <__sflush_r+0x98>
10015178:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001517c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
10015180:	81a3      	strh	r3, [r4, #12]
10015182:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015186:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10015188:	6d22      	ldr	r2, [r4, #80]	@ 0x50
1001518a:	e7a8      	b.n	100150de <__sflush_r+0x42>
1001518c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
10015190:	6922      	ldr	r2, [r4, #16]
10015192:	6022      	str	r2, [r4, #0]
10015194:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
10015198:	81a2      	strh	r2, [r4, #12]
1001519a:	04db      	lsls	r3, r3, #19
1001519c:	f04f 0200 	mov.w	r2, #0
100151a0:	6062      	str	r2, [r4, #4]
100151a2:	d5bb      	bpl.n	1001511c <__sflush_r+0x80>
100151a4:	6520      	str	r0, [r4, #80]	@ 0x50
100151a6:	e7b9      	b.n	1001511c <__sflush_r+0x80>
100151a8:	683b      	ldr	r3, [r7, #0]
100151aa:	2b00      	cmp	r3, #0
100151ac:	d093      	beq.n	100150d6 <__sflush_r+0x3a>
100151ae:	2b1d      	cmp	r3, #29
100151b0:	d001      	beq.n	100151b6 <__sflush_r+0x11a>
100151b2:	2b16      	cmp	r3, #22
100151b4:	d1e0      	bne.n	10015178 <__sflush_r+0xdc>
100151b6:	603e      	str	r6, [r7, #0]
100151b8:	e7bc      	b.n	10015134 <__sflush_r+0x98>
100151ba:	2900      	cmp	r1, #0
100151bc:	d1ae      	bne.n	1001511c <__sflush_r+0x80>
100151be:	e7f1      	b.n	100151a4 <__sflush_r+0x108>
100151c0:	dfbffffe 	.word	0xdfbffffe

100151c4 <_fflush_r>:
100151c4:	b538      	push	{r3, r4, r5, lr}
100151c6:	460c      	mov	r4, r1
100151c8:	4605      	mov	r5, r0
100151ca:	b108      	cbz	r0, 100151d0 <_fflush_r+0xc>
100151cc:	6b43      	ldr	r3, [r0, #52]	@ 0x34
100151ce:	b303      	cbz	r3, 10015212 <_fflush_r+0x4e>
100151d0:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
100151d4:	b188      	cbz	r0, 100151fa <_fflush_r+0x36>
100151d6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100151d8:	07db      	lsls	r3, r3, #31
100151da:	d401      	bmi.n	100151e0 <_fflush_r+0x1c>
100151dc:	0581      	lsls	r1, r0, #22
100151de:	d50f      	bpl.n	10015200 <_fflush_r+0x3c>
100151e0:	4628      	mov	r0, r5
100151e2:	4621      	mov	r1, r4
100151e4:	f7ff ff5a 	bl	1001509c <__sflush_r>
100151e8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
100151ea:	07da      	lsls	r2, r3, #31
100151ec:	4605      	mov	r5, r0
100151ee:	d402      	bmi.n	100151f6 <_fflush_r+0x32>
100151f0:	89a3      	ldrh	r3, [r4, #12]
100151f2:	059b      	lsls	r3, r3, #22
100151f4:	d508      	bpl.n	10015208 <_fflush_r+0x44>
100151f6:	4628      	mov	r0, r5
100151f8:	bd38      	pop	{r3, r4, r5, pc}
100151fa:	4605      	mov	r5, r0
100151fc:	4628      	mov	r0, r5
100151fe:	bd38      	pop	{r3, r4, r5, pc}
10015200:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015202:	f7fb f91d 	bl	10010440 <__retarget_lock_acquire_recursive>
10015206:	e7eb      	b.n	100151e0 <_fflush_r+0x1c>
10015208:	6da0      	ldr	r0, [r4, #88]	@ 0x58
1001520a:	f7fb f91b 	bl	10010444 <__retarget_lock_release_recursive>
1001520e:	4628      	mov	r0, r5
10015210:	bd38      	pop	{r3, r4, r5, pc}
10015212:	f7fb f9f1 	bl	100105f8 <__sinit>
10015216:	e7db      	b.n	100151d0 <_fflush_r+0xc>
	...

10015220 <memchr>:
10015220:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
10015224:	2a10      	cmp	r2, #16
10015226:	db2b      	blt.n	10015280 <memchr+0x60>
10015228:	f010 0f07 	tst.w	r0, #7
1001522c:	d008      	beq.n	10015240 <memchr+0x20>
1001522e:	f810 3b01 	ldrb.w	r3, [r0], #1
10015232:	3a01      	subs	r2, #1
10015234:	428b      	cmp	r3, r1
10015236:	d02d      	beq.n	10015294 <memchr+0x74>
10015238:	f010 0f07 	tst.w	r0, #7
1001523c:	b342      	cbz	r2, 10015290 <memchr+0x70>
1001523e:	d1f6      	bne.n	1001522e <memchr+0xe>
10015240:	b4f0      	push	{r4, r5, r6, r7}
10015242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
10015246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
1001524a:	f022 0407 	bic.w	r4, r2, #7
1001524e:	f07f 0700 	mvns.w	r7, #0
10015252:	2300      	movs	r3, #0
10015254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
10015258:	3c08      	subs	r4, #8
1001525a:	ea85 0501 	eor.w	r5, r5, r1
1001525e:	ea86 0601 	eor.w	r6, r6, r1
10015262:	fa85 f547 	uadd8	r5, r5, r7
10015266:	faa3 f587 	sel	r5, r3, r7
1001526a:	fa86 f647 	uadd8	r6, r6, r7
1001526e:	faa5 f687 	sel	r6, r5, r7
10015272:	b98e      	cbnz	r6, 10015298 <memchr+0x78>
10015274:	d1ee      	bne.n	10015254 <memchr+0x34>
10015276:	bcf0      	pop	{r4, r5, r6, r7}
10015278:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
1001527c:	f002 0207 	and.w	r2, r2, #7
10015280:	b132      	cbz	r2, 10015290 <memchr+0x70>
10015282:	f810 3b01 	ldrb.w	r3, [r0], #1
10015286:	3a01      	subs	r2, #1
10015288:	ea83 0301 	eor.w	r3, r3, r1
1001528c:	b113      	cbz	r3, 10015294 <memchr+0x74>
1001528e:	d1f8      	bne.n	10015282 <memchr+0x62>
10015290:	2000      	movs	r0, #0
10015292:	4770      	bx	lr
10015294:	3801      	subs	r0, #1
10015296:	4770      	bx	lr
10015298:	2d00      	cmp	r5, #0
1001529a:	bf06      	itte	eq
1001529c:	4635      	moveq	r5, r6
1001529e:	3803      	subeq	r0, #3
100152a0:	3807      	subne	r0, #7
100152a2:	f015 0f01 	tst.w	r5, #1
100152a6:	d107      	bne.n	100152b8 <memchr+0x98>
100152a8:	3001      	adds	r0, #1
100152aa:	f415 7f80 	tst.w	r5, #256	@ 0x100
100152ae:	bf02      	ittt	eq
100152b0:	3001      	addeq	r0, #1
100152b2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
100152b6:	3001      	addeq	r0, #1
100152b8:	bcf0      	pop	{r4, r5, r6, r7}
100152ba:	3801      	subs	r0, #1
100152bc:	4770      	bx	lr
100152be:	bf00      	nop

100152c0 <frexp>:
100152c0:	f8df c060 	ldr.w	ip, [pc, #96]	@ 10015324 <frexp+0x64>
100152c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
100152c6:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
100152ca:	2700      	movs	r7, #0
100152cc:	4563      	cmp	r3, ip
100152ce:	4604      	mov	r4, r0
100152d0:	460d      	mov	r5, r1
100152d2:	4616      	mov	r6, r2
100152d4:	6017      	str	r7, [r2, #0]
100152d6:	d822      	bhi.n	1001531e <frexp+0x5e>
100152d8:	4684      	mov	ip, r0
100152da:	ea53 0c0c 	orrs.w	ip, r3, ip
100152de:	d01e      	beq.n	1001531e <frexp+0x5e>
100152e0:	f8df c044 	ldr.w	ip, [pc, #68]	@ 10015328 <frexp+0x68>
100152e4:	ea01 0c0c 	and.w	ip, r1, ip
100152e8:	460a      	mov	r2, r1
100152ea:	f1bc 0f00 	cmp.w	ip, #0
100152ee:	d109      	bne.n	10015304 <frexp+0x44>
100152f0:	4b0e      	ldr	r3, [pc, #56]	@ (1001532c <frexp+0x6c>)
100152f2:	2200      	movs	r2, #0
100152f4:	f001 f9f2 	bl	100166dc <__aeabi_dmul>
100152f8:	f06f 0735 	mvn.w	r7, #53	@ 0x35
100152fc:	4604      	mov	r4, r0
100152fe:	460a      	mov	r2, r1
10015300:	f021 4300 	bic.w	r3, r1, #2147483648	@ 0x80000000
10015304:	f022 42ff 	bic.w	r2, r2, #2139095040	@ 0x7f800000
10015308:	151b      	asrs	r3, r3, #20
1001530a:	f422 02e0 	bic.w	r2, r2, #7340032	@ 0x700000
1001530e:	f2a3 33fe 	subw	r3, r3, #1022	@ 0x3fe
10015312:	f042 557f 	orr.w	r5, r2, #1069547520	@ 0x3fc00000
10015316:	443b      	add	r3, r7
10015318:	f445 1500 	orr.w	r5, r5, #2097152	@ 0x200000
1001531c:	6033      	str	r3, [r6, #0]
1001531e:	4620      	mov	r0, r4
10015320:	4629      	mov	r1, r5
10015322:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10015324:	7fefffff 	.word	0x7fefffff
10015328:	7ff00000 	.word	0x7ff00000
1001532c:	43500000 	.word	0x43500000

10015330 <_realloc_r>:
10015330:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015334:	4616      	mov	r6, r2
10015336:	2900      	cmp	r1, #0
10015338:	f000 8096 	beq.w	10015468 <_realloc_r+0x138>
1001533c:	460c      	mov	r4, r1
1001533e:	4680      	mov	r8, r0
10015340:	f106 050b 	add.w	r5, r6, #11
10015344:	f7fb f8a2 	bl	1001048c <__malloc_lock>
10015348:	f854 1c04 	ldr.w	r1, [r4, #-4]
1001534c:	2d16      	cmp	r5, #22
1001534e:	f1a4 0908 	sub.w	r9, r4, #8
10015352:	f021 0703 	bic.w	r7, r1, #3
10015356:	d858      	bhi.n	1001540a <_realloc_r+0xda>
10015358:	2510      	movs	r5, #16
1001535a:	42ae      	cmp	r6, r5
1001535c:	d858      	bhi.n	10015410 <_realloc_r+0xe0>
1001535e:	42af      	cmp	r7, r5
10015360:	da60      	bge.n	10015424 <_realloc_r+0xf4>
10015362:	4bbe      	ldr	r3, [pc, #760]	@ (1001565c <_realloc_r+0x32c>)
10015364:	689a      	ldr	r2, [r3, #8]
10015366:	eb09 0c07 	add.w	ip, r9, r7
1001536a:	4562      	cmp	r2, ip
1001536c:	f8dc 0004 	ldr.w	r0, [ip, #4]
10015370:	f000 8090 	beq.w	10015494 <_realloc_r+0x164>
10015374:	f020 0301 	bic.w	r3, r0, #1
10015378:	4463      	add	r3, ip
1001537a:	685b      	ldr	r3, [r3, #4]
1001537c:	07da      	lsls	r2, r3, #31
1001537e:	d468      	bmi.n	10015452 <_realloc_r+0x122>
10015380:	f020 0003 	bic.w	r0, r0, #3
10015384:	183b      	adds	r3, r7, r0
10015386:	429d      	cmp	r5, r3
10015388:	dd47      	ble.n	1001541a <_realloc_r+0xea>
1001538a:	07cb      	lsls	r3, r1, #31
1001538c:	d412      	bmi.n	100153b4 <_realloc_r+0x84>
1001538e:	f854 3c08 	ldr.w	r3, [r4, #-8]
10015392:	eba9 0b03 	sub.w	fp, r9, r3
10015396:	f8db 3004 	ldr.w	r3, [fp, #4]
1001539a:	f023 0203 	bic.w	r2, r3, #3
1001539e:	4410      	add	r0, r2
100153a0:	eb00 0a07 	add.w	sl, r0, r7
100153a4:	4555      	cmp	r5, sl
100153a6:	f340 80f6 	ble.w	10015596 <_realloc_r+0x266>
100153aa:	eb07 0a02 	add.w	sl, r7, r2
100153ae:	4555      	cmp	r5, sl
100153b0:	f340 80cc 	ble.w	1001554c <_realloc_r+0x21c>
100153b4:	4631      	mov	r1, r6
100153b6:	4640      	mov	r0, r8
100153b8:	f7fa fcec 	bl	1000fd94 <_malloc_r>
100153bc:	4606      	mov	r6, r0
100153be:	2800      	cmp	r0, #0
100153c0:	f000 8120 	beq.w	10015604 <_realloc_r+0x2d4>
100153c4:	f854 3c04 	ldr.w	r3, [r4, #-4]
100153c8:	f023 0301 	bic.w	r3, r3, #1
100153cc:	444b      	add	r3, r9
100153ce:	f1a0 0208 	sub.w	r2, r0, #8
100153d2:	4293      	cmp	r3, r2
100153d4:	f000 80b4 	beq.w	10015540 <_realloc_r+0x210>
100153d8:	1f3a      	subs	r2, r7, #4
100153da:	2a24      	cmp	r2, #36	@ 0x24
100153dc:	f200 80d7 	bhi.w	1001558e <_realloc_r+0x25e>
100153e0:	2a13      	cmp	r2, #19
100153e2:	f200 80a2 	bhi.w	1001552a <_realloc_r+0x1fa>
100153e6:	4603      	mov	r3, r0
100153e8:	4622      	mov	r2, r4
100153ea:	6811      	ldr	r1, [r2, #0]
100153ec:	6019      	str	r1, [r3, #0]
100153ee:	6851      	ldr	r1, [r2, #4]
100153f0:	6059      	str	r1, [r3, #4]
100153f2:	6892      	ldr	r2, [r2, #8]
100153f4:	609a      	str	r2, [r3, #8]
100153f6:	4621      	mov	r1, r4
100153f8:	4640      	mov	r0, r8
100153fa:	f7fb fa89 	bl	10010910 <_free_r>
100153fe:	4640      	mov	r0, r8
10015400:	f7fb f84a 	bl	10010498 <__malloc_unlock>
10015404:	4630      	mov	r0, r6
10015406:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001540a:	f035 0507 	bics.w	r5, r5, #7
1001540e:	d5a4      	bpl.n	1001535a <_realloc_r+0x2a>
10015410:	230c      	movs	r3, #12
10015412:	f8c8 3000 	str.w	r3, [r8]
10015416:	2600      	movs	r6, #0
10015418:	e018      	b.n	1001544c <_realloc_r+0x11c>
1001541a:	461f      	mov	r7, r3
1001541c:	e9dc 2302 	ldrd	r2, r3, [ip, #8]
10015420:	60d3      	str	r3, [r2, #12]
10015422:	609a      	str	r2, [r3, #8]
10015424:	f8d9 3004 	ldr.w	r3, [r9, #4]
10015428:	1b7a      	subs	r2, r7, r5
1001542a:	2a0f      	cmp	r2, #15
1001542c:	f003 0301 	and.w	r3, r3, #1
10015430:	eb09 0007 	add.w	r0, r9, r7
10015434:	d81d      	bhi.n	10015472 <_realloc_r+0x142>
10015436:	433b      	orrs	r3, r7
10015438:	f8c9 3004 	str.w	r3, [r9, #4]
1001543c:	6843      	ldr	r3, [r0, #4]
1001543e:	f043 0301 	orr.w	r3, r3, #1
10015442:	6043      	str	r3, [r0, #4]
10015444:	4640      	mov	r0, r8
10015446:	f7fb f827 	bl	10010498 <__malloc_unlock>
1001544a:	4626      	mov	r6, r4
1001544c:	4630      	mov	r0, r6
1001544e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015452:	07c9      	lsls	r1, r1, #31
10015454:	d4ae      	bmi.n	100153b4 <_realloc_r+0x84>
10015456:	f854 3c08 	ldr.w	r3, [r4, #-8]
1001545a:	eba9 0b03 	sub.w	fp, r9, r3
1001545e:	f8db 3004 	ldr.w	r3, [fp, #4]
10015462:	f023 0203 	bic.w	r2, r3, #3
10015466:	e7a0      	b.n	100153aa <_realloc_r+0x7a>
10015468:	e8bd 4ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
1001546c:	4611      	mov	r1, r2
1001546e:	f7fa bc91 	b.w	1000fd94 <_malloc_r>
10015472:	eb09 0105 	add.w	r1, r9, r5
10015476:	432b      	orrs	r3, r5
10015478:	f042 0201 	orr.w	r2, r2, #1
1001547c:	f8c9 3004 	str.w	r3, [r9, #4]
10015480:	604a      	str	r2, [r1, #4]
10015482:	6843      	ldr	r3, [r0, #4]
10015484:	f043 0301 	orr.w	r3, r3, #1
10015488:	6043      	str	r3, [r0, #4]
1001548a:	3108      	adds	r1, #8
1001548c:	4640      	mov	r0, r8
1001548e:	f7fb fa3f 	bl	10010910 <_free_r>
10015492:	e7d7      	b.n	10015444 <_realloc_r+0x114>
10015494:	f020 0003 	bic.w	r0, r0, #3
10015498:	19c2      	adds	r2, r0, r7
1001549a:	f105 0c10 	add.w	ip, r5, #16
1001549e:	4562      	cmp	r2, ip
100154a0:	f280 8091 	bge.w	100155c6 <_realloc_r+0x296>
100154a4:	07ca      	lsls	r2, r1, #31
100154a6:	d485      	bmi.n	100153b4 <_realloc_r+0x84>
100154a8:	f854 2c08 	ldr.w	r2, [r4, #-8]
100154ac:	eba9 0b02 	sub.w	fp, r9, r2
100154b0:	f8db 2004 	ldr.w	r2, [fp, #4]
100154b4:	f022 0203 	bic.w	r2, r2, #3
100154b8:	4410      	add	r0, r2
100154ba:	eb00 0a07 	add.w	sl, r0, r7
100154be:	45d4      	cmp	ip, sl
100154c0:	f73f af73 	bgt.w	100153aa <_realloc_r+0x7a>
100154c4:	465e      	mov	r6, fp
100154c6:	f8db 100c 	ldr.w	r1, [fp, #12]
100154ca:	f856 0f08 	ldr.w	r0, [r6, #8]!
100154ce:	1f3a      	subs	r2, r7, #4
100154d0:	2a24      	cmp	r2, #36	@ 0x24
100154d2:	60c1      	str	r1, [r0, #12]
100154d4:	6088      	str	r0, [r1, #8]
100154d6:	f200 80ae 	bhi.w	10015636 <_realloc_r+0x306>
100154da:	2a13      	cmp	r2, #19
100154dc:	f240 80a9 	bls.w	10015632 <_realloc_r+0x302>
100154e0:	6821      	ldr	r1, [r4, #0]
100154e2:	f8cb 1008 	str.w	r1, [fp, #8]
100154e6:	6861      	ldr	r1, [r4, #4]
100154e8:	f8cb 100c 	str.w	r1, [fp, #12]
100154ec:	2a1b      	cmp	r2, #27
100154ee:	f200 80a8 	bhi.w	10015642 <_realloc_r+0x312>
100154f2:	3408      	adds	r4, #8
100154f4:	f10b 0210 	add.w	r2, fp, #16
100154f8:	6821      	ldr	r1, [r4, #0]
100154fa:	6011      	str	r1, [r2, #0]
100154fc:	6861      	ldr	r1, [r4, #4]
100154fe:	6051      	str	r1, [r2, #4]
10015500:	68a1      	ldr	r1, [r4, #8]
10015502:	6091      	str	r1, [r2, #8]
10015504:	eb0b 0105 	add.w	r1, fp, r5
10015508:	ebaa 0205 	sub.w	r2, sl, r5
1001550c:	f042 0201 	orr.w	r2, r2, #1
10015510:	6099      	str	r1, [r3, #8]
10015512:	604a      	str	r2, [r1, #4]
10015514:	f8db 3004 	ldr.w	r3, [fp, #4]
10015518:	f003 0301 	and.w	r3, r3, #1
1001551c:	432b      	orrs	r3, r5
1001551e:	4640      	mov	r0, r8
10015520:	f8cb 3004 	str.w	r3, [fp, #4]
10015524:	f7fa ffb8 	bl	10010498 <__malloc_unlock>
10015528:	e790      	b.n	1001544c <_realloc_r+0x11c>
1001552a:	6823      	ldr	r3, [r4, #0]
1001552c:	6003      	str	r3, [r0, #0]
1001552e:	6863      	ldr	r3, [r4, #4]
10015530:	6043      	str	r3, [r0, #4]
10015532:	2a1b      	cmp	r2, #27
10015534:	d83c      	bhi.n	100155b0 <_realloc_r+0x280>
10015536:	f104 0208 	add.w	r2, r4, #8
1001553a:	f100 0308 	add.w	r3, r0, #8
1001553e:	e754      	b.n	100153ea <_realloc_r+0xba>
10015540:	f850 3c04 	ldr.w	r3, [r0, #-4]
10015544:	f023 0303 	bic.w	r3, r3, #3
10015548:	441f      	add	r7, r3
1001554a:	e76b      	b.n	10015424 <_realloc_r+0xf4>
1001554c:	1f3a      	subs	r2, r7, #4
1001554e:	465e      	mov	r6, fp
10015550:	f8db 300c 	ldr.w	r3, [fp, #12]
10015554:	f856 1f08 	ldr.w	r1, [r6, #8]!
10015558:	2a24      	cmp	r2, #36	@ 0x24
1001555a:	60cb      	str	r3, [r1, #12]
1001555c:	6099      	str	r1, [r3, #8]
1001555e:	d822      	bhi.n	100155a6 <_realloc_r+0x276>
10015560:	2a13      	cmp	r2, #19
10015562:	d91e      	bls.n	100155a2 <_realloc_r+0x272>
10015564:	6823      	ldr	r3, [r4, #0]
10015566:	f8cb 3008 	str.w	r3, [fp, #8]
1001556a:	6863      	ldr	r3, [r4, #4]
1001556c:	f8cb 300c 	str.w	r3, [fp, #12]
10015570:	2a1b      	cmp	r2, #27
10015572:	d83b      	bhi.n	100155ec <_realloc_r+0x2bc>
10015574:	3408      	adds	r4, #8
10015576:	f10b 0310 	add.w	r3, fp, #16
1001557a:	6822      	ldr	r2, [r4, #0]
1001557c:	601a      	str	r2, [r3, #0]
1001557e:	6862      	ldr	r2, [r4, #4]
10015580:	605a      	str	r2, [r3, #4]
10015582:	68a2      	ldr	r2, [r4, #8]
10015584:	609a      	str	r2, [r3, #8]
10015586:	4634      	mov	r4, r6
10015588:	4657      	mov	r7, sl
1001558a:	46d9      	mov	r9, fp
1001558c:	e74a      	b.n	10015424 <_realloc_r+0xf4>
1001558e:	4621      	mov	r1, r4
10015590:	f7fe fbcc 	bl	10013d2c <memmove>
10015594:	e72f      	b.n	100153f6 <_realloc_r+0xc6>
10015596:	e9dc 1302 	ldrd	r1, r3, [ip, #8]
1001559a:	1f3a      	subs	r2, r7, #4
1001559c:	60cb      	str	r3, [r1, #12]
1001559e:	6099      	str	r1, [r3, #8]
100155a0:	e7d5      	b.n	1001554e <_realloc_r+0x21e>
100155a2:	4633      	mov	r3, r6
100155a4:	e7e9      	b.n	1001557a <_realloc_r+0x24a>
100155a6:	4621      	mov	r1, r4
100155a8:	4630      	mov	r0, r6
100155aa:	f7fe fbbf 	bl	10013d2c <memmove>
100155ae:	e7ea      	b.n	10015586 <_realloc_r+0x256>
100155b0:	68a3      	ldr	r3, [r4, #8]
100155b2:	6083      	str	r3, [r0, #8]
100155b4:	68e3      	ldr	r3, [r4, #12]
100155b6:	60c3      	str	r3, [r0, #12]
100155b8:	2a24      	cmp	r2, #36	@ 0x24
100155ba:	d027      	beq.n	1001560c <_realloc_r+0x2dc>
100155bc:	f104 0210 	add.w	r2, r4, #16
100155c0:	f100 0310 	add.w	r3, r0, #16
100155c4:	e711      	b.n	100153ea <_realloc_r+0xba>
100155c6:	eb09 0105 	add.w	r1, r9, r5
100155ca:	6099      	str	r1, [r3, #8]
100155cc:	1b53      	subs	r3, r2, r5
100155ce:	f043 0301 	orr.w	r3, r3, #1
100155d2:	604b      	str	r3, [r1, #4]
100155d4:	f854 3c04 	ldr.w	r3, [r4, #-4]
100155d8:	f003 0301 	and.w	r3, r3, #1
100155dc:	432b      	orrs	r3, r5
100155de:	4640      	mov	r0, r8
100155e0:	f844 3c04 	str.w	r3, [r4, #-4]
100155e4:	f7fa ff58 	bl	10010498 <__malloc_unlock>
100155e8:	4626      	mov	r6, r4
100155ea:	e72f      	b.n	1001544c <_realloc_r+0x11c>
100155ec:	68a3      	ldr	r3, [r4, #8]
100155ee:	f8cb 3010 	str.w	r3, [fp, #16]
100155f2:	68e3      	ldr	r3, [r4, #12]
100155f4:	f8cb 3014 	str.w	r3, [fp, #20]
100155f8:	2a24      	cmp	r2, #36	@ 0x24
100155fa:	d010      	beq.n	1001561e <_realloc_r+0x2ee>
100155fc:	3410      	adds	r4, #16
100155fe:	f10b 0318 	add.w	r3, fp, #24
10015602:	e7ba      	b.n	1001557a <_realloc_r+0x24a>
10015604:	4640      	mov	r0, r8
10015606:	f7fa ff47 	bl	10010498 <__malloc_unlock>
1001560a:	e704      	b.n	10015416 <_realloc_r+0xe6>
1001560c:	6923      	ldr	r3, [r4, #16]
1001560e:	6103      	str	r3, [r0, #16]
10015610:	6961      	ldr	r1, [r4, #20]
10015612:	6141      	str	r1, [r0, #20]
10015614:	f104 0218 	add.w	r2, r4, #24
10015618:	f100 0318 	add.w	r3, r0, #24
1001561c:	e6e5      	b.n	100153ea <_realloc_r+0xba>
1001561e:	6923      	ldr	r3, [r4, #16]
10015620:	f8cb 3018 	str.w	r3, [fp, #24]
10015624:	6963      	ldr	r3, [r4, #20]
10015626:	f8cb 301c 	str.w	r3, [fp, #28]
1001562a:	3418      	adds	r4, #24
1001562c:	f10b 0320 	add.w	r3, fp, #32
10015630:	e7a3      	b.n	1001557a <_realloc_r+0x24a>
10015632:	4632      	mov	r2, r6
10015634:	e760      	b.n	100154f8 <_realloc_r+0x1c8>
10015636:	4621      	mov	r1, r4
10015638:	4630      	mov	r0, r6
1001563a:	f7fe fb77 	bl	10013d2c <memmove>
1001563e:	4b07      	ldr	r3, [pc, #28]	@ (1001565c <_realloc_r+0x32c>)
10015640:	e760      	b.n	10015504 <_realloc_r+0x1d4>
10015642:	68a1      	ldr	r1, [r4, #8]
10015644:	f8cb 1010 	str.w	r1, [fp, #16]
10015648:	68e1      	ldr	r1, [r4, #12]
1001564a:	f8cb 1014 	str.w	r1, [fp, #20]
1001564e:	2a24      	cmp	r2, #36	@ 0x24
10015650:	d006      	beq.n	10015660 <_realloc_r+0x330>
10015652:	3410      	adds	r4, #16
10015654:	f10b 0218 	add.w	r2, fp, #24
10015658:	e74e      	b.n	100154f8 <_realloc_r+0x1c8>
1001565a:	bf00      	nop
1001565c:	20000010 	.word	0x20000010
10015660:	6922      	ldr	r2, [r4, #16]
10015662:	f8cb 2018 	str.w	r2, [fp, #24]
10015666:	6962      	ldr	r2, [r4, #20]
10015668:	f8cb 201c 	str.w	r2, [fp, #28]
1001566c:	3418      	adds	r4, #24
1001566e:	f10b 0220 	add.w	r2, fp, #32
10015672:	e741      	b.n	100154f8 <_realloc_r+0x1c8>

10015674 <strncpy>:
10015674:	ea40 0301 	orr.w	r3, r0, r1
10015678:	079b      	lsls	r3, r3, #30
1001567a:	b510      	push	{r4, lr}
1001567c:	d101      	bne.n	10015682 <strncpy+0xe>
1001567e:	2a03      	cmp	r2, #3
10015680:	d817      	bhi.n	100156b2 <strncpy+0x3e>
10015682:	4684      	mov	ip, r0
10015684:	f101 3eff 	add.w	lr, r1, #4294967295	@ 0xffffffff
10015688:	e007      	b.n	1001569a <strncpy+0x26>
1001568a:	f81e 1f01 	ldrb.w	r1, [lr, #1]!
1001568e:	f803 1b01 	strb.w	r1, [r3], #1
10015692:	1e54      	subs	r4, r2, #1
10015694:	b129      	cbz	r1, 100156a2 <strncpy+0x2e>
10015696:	469c      	mov	ip, r3
10015698:	4622      	mov	r2, r4
1001569a:	4663      	mov	r3, ip
1001569c:	2a00      	cmp	r2, #0
1001569e:	d1f4      	bne.n	1001568a <strncpy+0x16>
100156a0:	bd10      	pop	{r4, pc}
100156a2:	4494      	add	ip, r2
100156a4:	2c00      	cmp	r4, #0
100156a6:	d0fb      	beq.n	100156a0 <strncpy+0x2c>
100156a8:	f803 1b01 	strb.w	r1, [r3], #1
100156ac:	4563      	cmp	r3, ip
100156ae:	d1fb      	bne.n	100156a8 <strncpy+0x34>
100156b0:	bd10      	pop	{r4, pc}
100156b2:	468e      	mov	lr, r1
100156b4:	4684      	mov	ip, r0
100156b6:	f8de 4000 	ldr.w	r4, [lr]
100156ba:	f1a4 3301 	sub.w	r3, r4, #16843009	@ 0x1010101
100156be:	ea23 0304 	bic.w	r3, r3, r4
100156c2:	f013 3f80 	tst.w	r3, #2155905152	@ 0x80808080
100156c6:	4671      	mov	r1, lr
100156c8:	f10e 0e04 	add.w	lr, lr, #4
100156cc:	d1da      	bne.n	10015684 <strncpy+0x10>
100156ce:	3a04      	subs	r2, #4
100156d0:	2a03      	cmp	r2, #3
100156d2:	f84c 4b04 	str.w	r4, [ip], #4
100156d6:	d8ee      	bhi.n	100156b6 <strncpy+0x42>
100156d8:	4671      	mov	r1, lr
100156da:	e7d3      	b.n	10015684 <strncpy+0x10>

100156dc <_fstat_r>:
100156dc:	b570      	push	{r4, r5, r6, lr}
100156de:	460c      	mov	r4, r1
100156e0:	4d08      	ldr	r5, [pc, #32]	@ (10015704 <_fstat_r+0x28>)
100156e2:	4603      	mov	r3, r0
100156e4:	2600      	movs	r6, #0
100156e6:	4620      	mov	r0, r4
100156e8:	4611      	mov	r1, r2
100156ea:	461c      	mov	r4, r3
100156ec:	602e      	str	r6, [r5, #0]
100156ee:	f7f8 fe87 	bl	1000e400 <_fstat>
100156f2:	1c43      	adds	r3, r0, #1
100156f4:	d000      	beq.n	100156f8 <_fstat_r+0x1c>
100156f6:	bd70      	pop	{r4, r5, r6, pc}
100156f8:	682b      	ldr	r3, [r5, #0]
100156fa:	2b00      	cmp	r3, #0
100156fc:	d0fb      	beq.n	100156f6 <_fstat_r+0x1a>
100156fe:	6023      	str	r3, [r4, #0]
10015700:	bd70      	pop	{r4, r5, r6, pc}
10015702:	bf00      	nop
10015704:	20000e54 	.word	0x20000e54

10015708 <_isatty_r>:
10015708:	b538      	push	{r3, r4, r5, lr}
1001570a:	4d07      	ldr	r5, [pc, #28]	@ (10015728 <_isatty_r+0x20>)
1001570c:	2200      	movs	r2, #0
1001570e:	4604      	mov	r4, r0
10015710:	4608      	mov	r0, r1
10015712:	602a      	str	r2, [r5, #0]
10015714:	f7f8 fe6c 	bl	1000e3f0 <_isatty>
10015718:	1c43      	adds	r3, r0, #1
1001571a:	d000      	beq.n	1001571e <_isatty_r+0x16>
1001571c:	bd38      	pop	{r3, r4, r5, pc}
1001571e:	682b      	ldr	r3, [r5, #0]
10015720:	2b00      	cmp	r3, #0
10015722:	d0fb      	beq.n	1001571c <_isatty_r+0x14>
10015724:	6023      	str	r3, [r4, #0]
10015726:	bd38      	pop	{r3, r4, r5, pc}
10015728:	20000e54 	.word	0x20000e54

1001572c <_lseek_r>:
1001572c:	b538      	push	{r3, r4, r5, lr}
1001572e:	460c      	mov	r4, r1
10015730:	4d08      	ldr	r5, [pc, #32]	@ (10015754 <_lseek_r+0x28>)
10015732:	4684      	mov	ip, r0
10015734:	4611      	mov	r1, r2
10015736:	4620      	mov	r0, r4
10015738:	461a      	mov	r2, r3
1001573a:	2300      	movs	r3, #0
1001573c:	602b      	str	r3, [r5, #0]
1001573e:	4664      	mov	r4, ip
10015740:	f7f8 fe5a 	bl	1000e3f8 <_lseek>
10015744:	1c43      	adds	r3, r0, #1
10015746:	d000      	beq.n	1001574a <_lseek_r+0x1e>
10015748:	bd38      	pop	{r3, r4, r5, pc}
1001574a:	682b      	ldr	r3, [r5, #0]
1001574c:	2b00      	cmp	r3, #0
1001574e:	d0fb      	beq.n	10015748 <_lseek_r+0x1c>
10015750:	6023      	str	r3, [r4, #0]
10015752:	bd38      	pop	{r3, r4, r5, pc}
10015754:	20000e54 	.word	0x20000e54

10015758 <_read_r>:
10015758:	b538      	push	{r3, r4, r5, lr}
1001575a:	460c      	mov	r4, r1
1001575c:	4d08      	ldr	r5, [pc, #32]	@ (10015780 <_read_r+0x28>)
1001575e:	4684      	mov	ip, r0
10015760:	4611      	mov	r1, r2
10015762:	4620      	mov	r0, r4
10015764:	461a      	mov	r2, r3
10015766:	2300      	movs	r3, #0
10015768:	602b      	str	r3, [r5, #0]
1001576a:	4664      	mov	r4, ip
1001576c:	f7f8 fe4c 	bl	1000e408 <_read>
10015770:	1c43      	adds	r3, r0, #1
10015772:	d000      	beq.n	10015776 <_read_r+0x1e>
10015774:	bd38      	pop	{r3, r4, r5, pc}
10015776:	682b      	ldr	r3, [r5, #0]
10015778:	2b00      	cmp	r3, #0
1001577a:	d0fb      	beq.n	10015774 <_read_r+0x1c>
1001577c:	6023      	str	r3, [r4, #0]
1001577e:	bd38      	pop	{r3, r4, r5, pc}
10015780:	20000e54 	.word	0x20000e54

10015784 <__fputwc>:
10015784:	b570      	push	{r4, r5, r6, lr}
10015786:	b082      	sub	sp, #8
10015788:	4606      	mov	r6, r0
1001578a:	460d      	mov	r5, r1
1001578c:	4614      	mov	r4, r2
1001578e:	f7fe fb73 	bl	10013e78 <__locale_mb_cur_max>
10015792:	2801      	cmp	r0, #1
10015794:	d102      	bne.n	1001579c <__fputwc+0x18>
10015796:	1e6b      	subs	r3, r5, #1
10015798:	2bfe      	cmp	r3, #254	@ 0xfe
1001579a:	d926      	bls.n	100157ea <__fputwc+0x66>
1001579c:	f104 035c 	add.w	r3, r4, #92	@ 0x5c
100157a0:	462a      	mov	r2, r5
100157a2:	a901      	add	r1, sp, #4
100157a4:	4630      	mov	r0, r6
100157a6:	f7fe fb41 	bl	10013e2c <_wcrtomb_r>
100157aa:	1c43      	adds	r3, r0, #1
100157ac:	d020      	beq.n	100157f0 <__fputwc+0x6c>
100157ae:	b178      	cbz	r0, 100157d0 <__fputwc+0x4c>
100157b0:	68a3      	ldr	r3, [r4, #8]
100157b2:	f89d 1004 	ldrb.w	r1, [sp, #4]
100157b6:	3b01      	subs	r3, #1
100157b8:	2b00      	cmp	r3, #0
100157ba:	60a3      	str	r3, [r4, #8]
100157bc:	da04      	bge.n	100157c8 <__fputwc+0x44>
100157be:	69a2      	ldr	r2, [r4, #24]
100157c0:	4293      	cmp	r3, r2
100157c2:	db08      	blt.n	100157d6 <__fputwc+0x52>
100157c4:	290a      	cmp	r1, #10
100157c6:	d006      	beq.n	100157d6 <__fputwc+0x52>
100157c8:	6823      	ldr	r3, [r4, #0]
100157ca:	1c5a      	adds	r2, r3, #1
100157cc:	6022      	str	r2, [r4, #0]
100157ce:	7019      	strb	r1, [r3, #0]
100157d0:	4628      	mov	r0, r5
100157d2:	b002      	add	sp, #8
100157d4:	bd70      	pop	{r4, r5, r6, pc}
100157d6:	4622      	mov	r2, r4
100157d8:	4630      	mov	r0, r6
100157da:	f000 f84f 	bl	1001587c <__swbuf_r>
100157de:	3001      	adds	r0, #1
100157e0:	d1f6      	bne.n	100157d0 <__fputwc+0x4c>
100157e2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100157e6:	b002      	add	sp, #8
100157e8:	bd70      	pop	{r4, r5, r6, pc}
100157ea:	f88d 5004 	strb.w	r5, [sp, #4]
100157ee:	e7df      	b.n	100157b0 <__fputwc+0x2c>
100157f0:	89a3      	ldrh	r3, [r4, #12]
100157f2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
100157f6:	81a3      	strh	r3, [r4, #12]
100157f8:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
100157fc:	e7f3      	b.n	100157e6 <__fputwc+0x62>
100157fe:	bf00      	nop

10015800 <_fputwc_r>:
10015800:	b530      	push	{r4, r5, lr}
10015802:	4614      	mov	r4, r2
10015804:	6e52      	ldr	r2, [r2, #100]	@ 0x64
10015806:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001580a:	4605      	mov	r5, r0
1001580c:	07d0      	lsls	r0, r2, #31
1001580e:	b083      	sub	sp, #12
10015810:	d401      	bmi.n	10015816 <_fputwc_r+0x16>
10015812:	059a      	lsls	r2, r3, #22
10015814:	d51c      	bpl.n	10015850 <_fputwc_r+0x50>
10015816:	0498      	lsls	r0, r3, #18
10015818:	d406      	bmi.n	10015828 <_fputwc_r+0x28>
1001581a:	6e62      	ldr	r2, [r4, #100]	@ 0x64
1001581c:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
10015820:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
10015824:	81a3      	strh	r3, [r4, #12]
10015826:	6662      	str	r2, [r4, #100]	@ 0x64
10015828:	4622      	mov	r2, r4
1001582a:	4628      	mov	r0, r5
1001582c:	f7ff ffaa 	bl	10015784 <__fputwc>
10015830:	6e63      	ldr	r3, [r4, #100]	@ 0x64
10015832:	07da      	lsls	r2, r3, #31
10015834:	4605      	mov	r5, r0
10015836:	d402      	bmi.n	1001583e <_fputwc_r+0x3e>
10015838:	89a3      	ldrh	r3, [r4, #12]
1001583a:	059b      	lsls	r3, r3, #22
1001583c:	d502      	bpl.n	10015844 <_fputwc_r+0x44>
1001583e:	4628      	mov	r0, r5
10015840:	b003      	add	sp, #12
10015842:	bd30      	pop	{r4, r5, pc}
10015844:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015846:	f7fa fdfd 	bl	10010444 <__retarget_lock_release_recursive>
1001584a:	4628      	mov	r0, r5
1001584c:	b003      	add	sp, #12
1001584e:	bd30      	pop	{r4, r5, pc}
10015850:	6da0      	ldr	r0, [r4, #88]	@ 0x58
10015852:	9101      	str	r1, [sp, #4]
10015854:	f7fa fdf4 	bl	10010440 <__retarget_lock_acquire_recursive>
10015858:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
1001585c:	9901      	ldr	r1, [sp, #4]
1001585e:	e7da      	b.n	10015816 <_fputwc_r+0x16>

10015860 <__ascii_wctomb>:
10015860:	b149      	cbz	r1, 10015876 <__ascii_wctomb+0x16>
10015862:	2aff      	cmp	r2, #255	@ 0xff
10015864:	d802      	bhi.n	1001586c <__ascii_wctomb+0xc>
10015866:	700a      	strb	r2, [r1, #0]
10015868:	2001      	movs	r0, #1
1001586a:	4770      	bx	lr
1001586c:	238a      	movs	r3, #138	@ 0x8a
1001586e:	6003      	str	r3, [r0, #0]
10015870:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015874:	4770      	bx	lr
10015876:	4608      	mov	r0, r1
10015878:	4770      	bx	lr
1001587a:	bf00      	nop

1001587c <__swbuf_r>:
1001587c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001587e:	460d      	mov	r5, r1
10015880:	4614      	mov	r4, r2
10015882:	4606      	mov	r6, r0
10015884:	b110      	cbz	r0, 1001588c <__swbuf_r+0x10>
10015886:	6b43      	ldr	r3, [r0, #52]	@ 0x34
10015888:	2b00      	cmp	r3, #0
1001588a:	d04a      	beq.n	10015922 <__swbuf_r+0xa6>
1001588c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10015890:	69a3      	ldr	r3, [r4, #24]
10015892:	60a3      	str	r3, [r4, #8]
10015894:	0710      	lsls	r0, r2, #28
10015896:	d51b      	bpl.n	100158d0 <__swbuf_r+0x54>
10015898:	6923      	ldr	r3, [r4, #16]
1001589a:	b1cb      	cbz	r3, 100158d0 <__swbuf_r+0x54>
1001589c:	b2ed      	uxtb	r5, r5
1001589e:	0491      	lsls	r1, r2, #18
100158a0:	462f      	mov	r7, r5
100158a2:	d521      	bpl.n	100158e8 <__swbuf_r+0x6c>
100158a4:	6822      	ldr	r2, [r4, #0]
100158a6:	6961      	ldr	r1, [r4, #20]
100158a8:	1ad3      	subs	r3, r2, r3
100158aa:	4299      	cmp	r1, r3
100158ac:	dd28      	ble.n	10015900 <__swbuf_r+0x84>
100158ae:	3301      	adds	r3, #1
100158b0:	68a1      	ldr	r1, [r4, #8]
100158b2:	3901      	subs	r1, #1
100158b4:	60a1      	str	r1, [r4, #8]
100158b6:	1c51      	adds	r1, r2, #1
100158b8:	6021      	str	r1, [r4, #0]
100158ba:	7015      	strb	r5, [r2, #0]
100158bc:	6962      	ldr	r2, [r4, #20]
100158be:	429a      	cmp	r2, r3
100158c0:	d026      	beq.n	10015910 <__swbuf_r+0x94>
100158c2:	89a3      	ldrh	r3, [r4, #12]
100158c4:	07db      	lsls	r3, r3, #31
100158c6:	d501      	bpl.n	100158cc <__swbuf_r+0x50>
100158c8:	2d0a      	cmp	r5, #10
100158ca:	d021      	beq.n	10015910 <__swbuf_r+0x94>
100158cc:	4638      	mov	r0, r7
100158ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100158d0:	4621      	mov	r1, r4
100158d2:	4630      	mov	r0, r6
100158d4:	f7fe fb3a 	bl	10013f4c <__swsetup_r>
100158d8:	bb00      	cbnz	r0, 1001591c <__swbuf_r+0xa0>
100158da:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
100158de:	6923      	ldr	r3, [r4, #16]
100158e0:	b2ed      	uxtb	r5, r5
100158e2:	0491      	lsls	r1, r2, #18
100158e4:	462f      	mov	r7, r5
100158e6:	d4dd      	bmi.n	100158a4 <__swbuf_r+0x28>
100158e8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
100158ec:	81a2      	strh	r2, [r4, #12]
100158ee:	6e62      	ldr	r2, [r4, #100]	@ 0x64
100158f0:	6961      	ldr	r1, [r4, #20]
100158f2:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
100158f6:	6662      	str	r2, [r4, #100]	@ 0x64
100158f8:	6822      	ldr	r2, [r4, #0]
100158fa:	1ad3      	subs	r3, r2, r3
100158fc:	4299      	cmp	r1, r3
100158fe:	dcd6      	bgt.n	100158ae <__swbuf_r+0x32>
10015900:	4621      	mov	r1, r4
10015902:	4630      	mov	r0, r6
10015904:	f7ff fc5e 	bl	100151c4 <_fflush_r>
10015908:	b940      	cbnz	r0, 1001591c <__swbuf_r+0xa0>
1001590a:	6822      	ldr	r2, [r4, #0]
1001590c:	2301      	movs	r3, #1
1001590e:	e7cf      	b.n	100158b0 <__swbuf_r+0x34>
10015910:	4621      	mov	r1, r4
10015912:	4630      	mov	r0, r6
10015914:	f7ff fc56 	bl	100151c4 <_fflush_r>
10015918:	2800      	cmp	r0, #0
1001591a:	d0d7      	beq.n	100158cc <__swbuf_r+0x50>
1001591c:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
10015920:	e7d4      	b.n	100158cc <__swbuf_r+0x50>
10015922:	f7fa fe69 	bl	100105f8 <__sinit>
10015926:	e7b1      	b.n	1001588c <__swbuf_r+0x10>

10015928 <__ascii_mbtowc>:
10015928:	b082      	sub	sp, #8
1001592a:	b149      	cbz	r1, 10015940 <__ascii_mbtowc+0x18>
1001592c:	b15a      	cbz	r2, 10015946 <__ascii_mbtowc+0x1e>
1001592e:	b16b      	cbz	r3, 1001594c <__ascii_mbtowc+0x24>
10015930:	7813      	ldrb	r3, [r2, #0]
10015932:	600b      	str	r3, [r1, #0]
10015934:	7812      	ldrb	r2, [r2, #0]
10015936:	1e10      	subs	r0, r2, #0
10015938:	bf18      	it	ne
1001593a:	2001      	movne	r0, #1
1001593c:	b002      	add	sp, #8
1001593e:	4770      	bx	lr
10015940:	a901      	add	r1, sp, #4
10015942:	2a00      	cmp	r2, #0
10015944:	d1f3      	bne.n	1001592e <__ascii_mbtowc+0x6>
10015946:	4610      	mov	r0, r2
10015948:	b002      	add	sp, #8
1001594a:	4770      	bx	lr
1001594c:	f06f 0001 	mvn.w	r0, #1
10015950:	e7f4      	b.n	1001593c <__ascii_mbtowc+0x14>
10015952:	bf00      	nop

10015954 <__assert_func>:
10015954:	b500      	push	{lr}
10015956:	4c0b      	ldr	r4, [pc, #44]	@ (10015984 <__assert_func+0x30>)
10015958:	6825      	ldr	r5, [r4, #0]
1001595a:	4614      	mov	r4, r2
1001595c:	68ee      	ldr	r6, [r5, #12]
1001595e:	461a      	mov	r2, r3
10015960:	b085      	sub	sp, #20
10015962:	4603      	mov	r3, r0
10015964:	460d      	mov	r5, r1
10015966:	b14c      	cbz	r4, 1001597c <__assert_func+0x28>
10015968:	4907      	ldr	r1, [pc, #28]	@ (10015988 <__assert_func+0x34>)
1001596a:	9500      	str	r5, [sp, #0]
1001596c:	e9cd 1401 	strd	r1, r4, [sp, #4]
10015970:	4630      	mov	r0, r6
10015972:	4906      	ldr	r1, [pc, #24]	@ (1001598c <__assert_func+0x38>)
10015974:	f000 fc84 	bl	10016280 <fiprintf>
10015978:	f000 fc96 	bl	100162a8 <abort>
1001597c:	4904      	ldr	r1, [pc, #16]	@ (10015990 <__assert_func+0x3c>)
1001597e:	460c      	mov	r4, r1
10015980:	e7f3      	b.n	1001596a <__assert_func+0x16>
10015982:	bf00      	nop
10015984:	2000041c 	.word	0x2000041c
10015988:	100172c8 	.word	0x100172c8
1001598c:	100172d8 	.word	0x100172d8
10015990:	100172d4 	.word	0x100172d4

10015994 <_Balloc>:
10015994:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10015996:	b570      	push	{r4, r5, r6, lr}
10015998:	4605      	mov	r5, r0
1001599a:	460c      	mov	r4, r1
1001599c:	b14b      	cbz	r3, 100159b2 <_Balloc+0x1e>
1001599e:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
100159a2:	b180      	cbz	r0, 100159c6 <_Balloc+0x32>
100159a4:	6802      	ldr	r2, [r0, #0]
100159a6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
100159aa:	2300      	movs	r3, #0
100159ac:	60c3      	str	r3, [r0, #12]
100159ae:	6103      	str	r3, [r0, #16]
100159b0:	bd70      	pop	{r4, r5, r6, pc}
100159b2:	2221      	movs	r2, #33	@ 0x21
100159b4:	2104      	movs	r1, #4
100159b6:	f000 fba5 	bl	10016104 <_calloc_r>
100159ba:	4603      	mov	r3, r0
100159bc:	6468      	str	r0, [r5, #68]	@ 0x44
100159be:	2800      	cmp	r0, #0
100159c0:	d1ed      	bne.n	1001599e <_Balloc+0xa>
100159c2:	2000      	movs	r0, #0
100159c4:	bd70      	pop	{r4, r5, r6, pc}
100159c6:	2101      	movs	r1, #1
100159c8:	fa01 f604 	lsl.w	r6, r1, r4
100159cc:	1d72      	adds	r2, r6, #5
100159ce:	0092      	lsls	r2, r2, #2
100159d0:	4628      	mov	r0, r5
100159d2:	f000 fb97 	bl	10016104 <_calloc_r>
100159d6:	2800      	cmp	r0, #0
100159d8:	d0f3      	beq.n	100159c2 <_Balloc+0x2e>
100159da:	e9c0 4601 	strd	r4, r6, [r0, #4]
100159de:	e7e4      	b.n	100159aa <_Balloc+0x16>

100159e0 <_Bfree>:
100159e0:	b131      	cbz	r1, 100159f0 <_Bfree+0x10>
100159e2:	6c43      	ldr	r3, [r0, #68]	@ 0x44
100159e4:	684a      	ldr	r2, [r1, #4]
100159e6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
100159ea:	6008      	str	r0, [r1, #0]
100159ec:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
100159f0:	4770      	bx	lr
100159f2:	bf00      	nop

100159f4 <__multadd>:
100159f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
100159f8:	690d      	ldr	r5, [r1, #16]
100159fa:	4607      	mov	r7, r0
100159fc:	460e      	mov	r6, r1
100159fe:	461c      	mov	r4, r3
10015a00:	f101 0e14 	add.w	lr, r1, #20
10015a04:	2000      	movs	r0, #0
10015a06:	f8de 1000 	ldr.w	r1, [lr]
10015a0a:	b28b      	uxth	r3, r1
10015a0c:	fb02 4303 	mla	r3, r2, r3, r4
10015a10:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10015a14:	0c09      	lsrs	r1, r1, #16
10015a16:	fb02 cc01 	mla	ip, r2, r1, ip
10015a1a:	3001      	adds	r0, #1
10015a1c:	b29b      	uxth	r3, r3
10015a1e:	eb03 430c 	add.w	r3, r3, ip, lsl #16
10015a22:	4285      	cmp	r5, r0
10015a24:	f84e 3b04 	str.w	r3, [lr], #4
10015a28:	ea4f 441c 	mov.w	r4, ip, lsr #16
10015a2c:	dceb      	bgt.n	10015a06 <__multadd+0x12>
10015a2e:	b13c      	cbz	r4, 10015a40 <__multadd+0x4c>
10015a30:	68b3      	ldr	r3, [r6, #8]
10015a32:	42ab      	cmp	r3, r5
10015a34:	dd07      	ble.n	10015a46 <__multadd+0x52>
10015a36:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10015a3a:	3501      	adds	r5, #1
10015a3c:	615c      	str	r4, [r3, #20]
10015a3e:	6135      	str	r5, [r6, #16]
10015a40:	4630      	mov	r0, r6
10015a42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10015a46:	6871      	ldr	r1, [r6, #4]
10015a48:	4638      	mov	r0, r7
10015a4a:	3101      	adds	r1, #1
10015a4c:	f7ff ffa2 	bl	10015994 <_Balloc>
10015a50:	4680      	mov	r8, r0
10015a52:	b1a8      	cbz	r0, 10015a80 <__multadd+0x8c>
10015a54:	6932      	ldr	r2, [r6, #16]
10015a56:	3202      	adds	r2, #2
10015a58:	f106 010c 	add.w	r1, r6, #12
10015a5c:	0092      	lsls	r2, r2, #2
10015a5e:	300c      	adds	r0, #12
10015a60:	f7fa fdf4 	bl	1001064c <memcpy>
10015a64:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015a66:	6872      	ldr	r2, [r6, #4]
10015a68:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10015a6c:	6031      	str	r1, [r6, #0]
10015a6e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
10015a72:	4646      	mov	r6, r8
10015a74:	eb06 0385 	add.w	r3, r6, r5, lsl #2
10015a78:	3501      	adds	r5, #1
10015a7a:	615c      	str	r4, [r3, #20]
10015a7c:	6135      	str	r5, [r6, #16]
10015a7e:	e7df      	b.n	10015a40 <__multadd+0x4c>
10015a80:	4b02      	ldr	r3, [pc, #8]	@ (10015a8c <__multadd+0x98>)
10015a82:	4803      	ldr	r0, [pc, #12]	@ (10015a90 <__multadd+0x9c>)
10015a84:	4642      	mov	r2, r8
10015a86:	21ba      	movs	r1, #186	@ 0xba
10015a88:	f7ff ff64 	bl	10015954 <__assert_func>
10015a8c:	10017154 	.word	0x10017154
10015a90:	10017308 	.word	0x10017308

10015a94 <__hi0bits>:
10015a94:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
10015a98:	4603      	mov	r3, r0
10015a9a:	bf36      	itet	cc
10015a9c:	0403      	lslcc	r3, r0, #16
10015a9e:	2000      	movcs	r0, #0
10015aa0:	2010      	movcc	r0, #16
10015aa2:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
10015aa6:	bf3c      	itt	cc
10015aa8:	021b      	lslcc	r3, r3, #8
10015aaa:	3008      	addcc	r0, #8
10015aac:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
10015ab0:	bf3c      	itt	cc
10015ab2:	011b      	lslcc	r3, r3, #4
10015ab4:	3004      	addcc	r0, #4
10015ab6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
10015aba:	d303      	bcc.n	10015ac4 <__hi0bits+0x30>
10015abc:	2b00      	cmp	r3, #0
10015abe:	db06      	blt.n	10015ace <__hi0bits+0x3a>
10015ac0:	3001      	adds	r0, #1
10015ac2:	4770      	bx	lr
10015ac4:	009b      	lsls	r3, r3, #2
10015ac6:	d403      	bmi.n	10015ad0 <__hi0bits+0x3c>
10015ac8:	005b      	lsls	r3, r3, #1
10015aca:	d403      	bmi.n	10015ad4 <__hi0bits+0x40>
10015acc:	2020      	movs	r0, #32
10015ace:	4770      	bx	lr
10015ad0:	3002      	adds	r0, #2
10015ad2:	4770      	bx	lr
10015ad4:	3003      	adds	r0, #3
10015ad6:	4770      	bx	lr

10015ad8 <__lo0bits>:
10015ad8:	6803      	ldr	r3, [r0, #0]
10015ada:	f013 0207 	ands.w	r2, r3, #7
10015ade:	4601      	mov	r1, r0
10015ae0:	d007      	beq.n	10015af2 <__lo0bits+0x1a>
10015ae2:	07da      	lsls	r2, r3, #31
10015ae4:	d41f      	bmi.n	10015b26 <__lo0bits+0x4e>
10015ae6:	0798      	lsls	r0, r3, #30
10015ae8:	d521      	bpl.n	10015b2e <__lo0bits+0x56>
10015aea:	085b      	lsrs	r3, r3, #1
10015aec:	600b      	str	r3, [r1, #0]
10015aee:	2001      	movs	r0, #1
10015af0:	4770      	bx	lr
10015af2:	b298      	uxth	r0, r3
10015af4:	b1a0      	cbz	r0, 10015b20 <__lo0bits+0x48>
10015af6:	4610      	mov	r0, r2
10015af8:	b2da      	uxtb	r2, r3
10015afa:	b90a      	cbnz	r2, 10015b00 <__lo0bits+0x28>
10015afc:	3008      	adds	r0, #8
10015afe:	0a1b      	lsrs	r3, r3, #8
10015b00:	071a      	lsls	r2, r3, #28
10015b02:	bf04      	itt	eq
10015b04:	091b      	lsreq	r3, r3, #4
10015b06:	3004      	addeq	r0, #4
10015b08:	079a      	lsls	r2, r3, #30
10015b0a:	bf04      	itt	eq
10015b0c:	089b      	lsreq	r3, r3, #2
10015b0e:	3002      	addeq	r0, #2
10015b10:	07da      	lsls	r2, r3, #31
10015b12:	d403      	bmi.n	10015b1c <__lo0bits+0x44>
10015b14:	085b      	lsrs	r3, r3, #1
10015b16:	f100 0001 	add.w	r0, r0, #1
10015b1a:	d006      	beq.n	10015b2a <__lo0bits+0x52>
10015b1c:	600b      	str	r3, [r1, #0]
10015b1e:	4770      	bx	lr
10015b20:	0c1b      	lsrs	r3, r3, #16
10015b22:	2010      	movs	r0, #16
10015b24:	e7e8      	b.n	10015af8 <__lo0bits+0x20>
10015b26:	2000      	movs	r0, #0
10015b28:	4770      	bx	lr
10015b2a:	2020      	movs	r0, #32
10015b2c:	4770      	bx	lr
10015b2e:	089b      	lsrs	r3, r3, #2
10015b30:	600b      	str	r3, [r1, #0]
10015b32:	2002      	movs	r0, #2
10015b34:	4770      	bx	lr
10015b36:	bf00      	nop

10015b38 <__i2b>:
10015b38:	b538      	push	{r3, r4, r5, lr}
10015b3a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
10015b3c:	4604      	mov	r4, r0
10015b3e:	460d      	mov	r5, r1
10015b40:	b14b      	cbz	r3, 10015b56 <__i2b+0x1e>
10015b42:	6858      	ldr	r0, [r3, #4]
10015b44:	b1b0      	cbz	r0, 10015b74 <__i2b+0x3c>
10015b46:	6802      	ldr	r2, [r0, #0]
10015b48:	605a      	str	r2, [r3, #4]
10015b4a:	2200      	movs	r2, #0
10015b4c:	2301      	movs	r3, #1
10015b4e:	6145      	str	r5, [r0, #20]
10015b50:	60c2      	str	r2, [r0, #12]
10015b52:	6103      	str	r3, [r0, #16]
10015b54:	bd38      	pop	{r3, r4, r5, pc}
10015b56:	2221      	movs	r2, #33	@ 0x21
10015b58:	2104      	movs	r1, #4
10015b5a:	f000 fad3 	bl	10016104 <_calloc_r>
10015b5e:	4603      	mov	r3, r0
10015b60:	6460      	str	r0, [r4, #68]	@ 0x44
10015b62:	2800      	cmp	r0, #0
10015b64:	d1ed      	bne.n	10015b42 <__i2b+0xa>
10015b66:	4b09      	ldr	r3, [pc, #36]	@ (10015b8c <__i2b+0x54>)
10015b68:	4809      	ldr	r0, [pc, #36]	@ (10015b90 <__i2b+0x58>)
10015b6a:	2200      	movs	r2, #0
10015b6c:	f240 1145 	movw	r1, #325	@ 0x145
10015b70:	f7ff fef0 	bl	10015954 <__assert_func>
10015b74:	221c      	movs	r2, #28
10015b76:	2101      	movs	r1, #1
10015b78:	4620      	mov	r0, r4
10015b7a:	f000 fac3 	bl	10016104 <_calloc_r>
10015b7e:	2800      	cmp	r0, #0
10015b80:	d0f1      	beq.n	10015b66 <__i2b+0x2e>
10015b82:	2201      	movs	r2, #1
10015b84:	2302      	movs	r3, #2
10015b86:	6042      	str	r2, [r0, #4]
10015b88:	6083      	str	r3, [r0, #8]
10015b8a:	e7de      	b.n	10015b4a <__i2b+0x12>
10015b8c:	10017154 	.word	0x10017154
10015b90:	10017308 	.word	0x10017308

10015b94 <__multiply>:
10015b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015b98:	f8d1 8010 	ldr.w	r8, [r1, #16]
10015b9c:	6915      	ldr	r5, [r2, #16]
10015b9e:	45a8      	cmp	r8, r5
10015ba0:	b085      	sub	sp, #20
10015ba2:	460e      	mov	r6, r1
10015ba4:	4692      	mov	sl, r2
10015ba6:	db05      	blt.n	10015bb4 <__multiply+0x20>
10015ba8:	462a      	mov	r2, r5
10015baa:	4653      	mov	r3, sl
10015bac:	4645      	mov	r5, r8
10015bae:	468a      	mov	sl, r1
10015bb0:	4690      	mov	r8, r2
10015bb2:	461e      	mov	r6, r3
10015bb4:	f8da 3008 	ldr.w	r3, [sl, #8]
10015bb8:	f8da 1004 	ldr.w	r1, [sl, #4]
10015bbc:	eb05 0408 	add.w	r4, r5, r8
10015bc0:	42a3      	cmp	r3, r4
10015bc2:	bfb8      	it	lt
10015bc4:	3101      	addlt	r1, #1
10015bc6:	f7ff fee5 	bl	10015994 <_Balloc>
10015bca:	4684      	mov	ip, r0
10015bcc:	2800      	cmp	r0, #0
10015bce:	f000 808b 	beq.w	10015ce8 <__multiply+0x154>
10015bd2:	f100 0714 	add.w	r7, r0, #20
10015bd6:	eb07 0e84 	add.w	lr, r7, r4, lsl #2
10015bda:	4577      	cmp	r7, lr
10015bdc:	d205      	bcs.n	10015bea <__multiply+0x56>
10015bde:	463b      	mov	r3, r7
10015be0:	2200      	movs	r2, #0
10015be2:	f843 2b04 	str.w	r2, [r3], #4
10015be6:	459e      	cmp	lr, r3
10015be8:	d8fb      	bhi.n	10015be2 <__multiply+0x4e>
10015bea:	3614      	adds	r6, #20
10015bec:	eb06 0888 	add.w	r8, r6, r8, lsl #2
10015bf0:	f10a 0914 	add.w	r9, sl, #20
10015bf4:	4546      	cmp	r6, r8
10015bf6:	eb09 0585 	add.w	r5, r9, r5, lsl #2
10015bfa:	d266      	bcs.n	10015cca <__multiply+0x136>
10015bfc:	eba5 030a 	sub.w	r3, r5, sl
10015c00:	3b15      	subs	r3, #21
10015c02:	f023 0303 	bic.w	r3, r3, #3
10015c06:	f10a 0a15 	add.w	sl, sl, #21
10015c0a:	3304      	adds	r3, #4
10015c0c:	4555      	cmp	r5, sl
10015c0e:	bf2c      	ite	cs
10015c10:	469b      	movcs	fp, r3
10015c12:	f04f 0b04 	movcc.w	fp, #4
10015c16:	f8cd e008 	str.w	lr, [sp, #8]
10015c1a:	9403      	str	r4, [sp, #12]
10015c1c:	46ae      	mov	lr, r5
10015c1e:	46e2      	mov	sl, ip
10015c20:	e005      	b.n	10015c2e <__multiply+0x9a>
10015c22:	0c09      	lsrs	r1, r1, #16
10015c24:	d12a      	bne.n	10015c7c <__multiply+0xe8>
10015c26:	45b0      	cmp	r8, r6
10015c28:	f107 0704 	add.w	r7, r7, #4
10015c2c:	d94a      	bls.n	10015cc4 <__multiply+0x130>
10015c2e:	f856 1b04 	ldr.w	r1, [r6], #4
10015c32:	b28d      	uxth	r5, r1
10015c34:	2d00      	cmp	r5, #0
10015c36:	d0f4      	beq.n	10015c22 <__multiply+0x8e>
10015c38:	46cc      	mov	ip, r9
10015c3a:	463c      	mov	r4, r7
10015c3c:	2300      	movs	r3, #0
10015c3e:	9601      	str	r6, [sp, #4]
10015c40:	f85c 0b04 	ldr.w	r0, [ip], #4
10015c44:	6821      	ldr	r1, [r4, #0]
10015c46:	b286      	uxth	r6, r0
10015c48:	b28a      	uxth	r2, r1
10015c4a:	0c00      	lsrs	r0, r0, #16
10015c4c:	fb05 2206 	mla	r2, r5, r6, r2
10015c50:	0c09      	lsrs	r1, r1, #16
10015c52:	441a      	add	r2, r3
10015c54:	fb05 1100 	mla	r1, r5, r0, r1
10015c58:	eb01 4112 	add.w	r1, r1, r2, lsr #16
10015c5c:	b292      	uxth	r2, r2
10015c5e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
10015c62:	45e6      	cmp	lr, ip
10015c64:	f844 2b04 	str.w	r2, [r4], #4
10015c68:	ea4f 4311 	mov.w	r3, r1, lsr #16
10015c6c:	d8e8      	bhi.n	10015c40 <__multiply+0xac>
10015c6e:	9e01      	ldr	r6, [sp, #4]
10015c70:	f847 300b 	str.w	r3, [r7, fp]
10015c74:	f856 1c04 	ldr.w	r1, [r6, #-4]
10015c78:	0c09      	lsrs	r1, r1, #16
10015c7a:	d0d4      	beq.n	10015c26 <__multiply+0x92>
10015c7c:	683b      	ldr	r3, [r7, #0]
10015c7e:	2200      	movs	r2, #0
10015c80:	4648      	mov	r0, r9
10015c82:	461d      	mov	r5, r3
10015c84:	463c      	mov	r4, r7
10015c86:	4694      	mov	ip, r2
10015c88:	8802      	ldrh	r2, [r0, #0]
10015c8a:	fb01 c202 	mla	r2, r1, r2, ip
10015c8e:	eb02 4215 	add.w	r2, r2, r5, lsr #16
10015c92:	b29b      	uxth	r3, r3
10015c94:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
10015c98:	f844 3b04 	str.w	r3, [r4], #4
10015c9c:	f850 3b04 	ldr.w	r3, [r0], #4
10015ca0:	6825      	ldr	r5, [r4, #0]
10015ca2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10015ca6:	b2ab      	uxth	r3, r5
10015ca8:	fb01 330c 	mla	r3, r1, ip, r3
10015cac:	eb03 4312 	add.w	r3, r3, r2, lsr #16
10015cb0:	4586      	cmp	lr, r0
10015cb2:	ea4f 4c13 	mov.w	ip, r3, lsr #16
10015cb6:	d8e7      	bhi.n	10015c88 <__multiply+0xf4>
10015cb8:	45b0      	cmp	r8, r6
10015cba:	f847 300b 	str.w	r3, [r7, fp]
10015cbe:	f107 0704 	add.w	r7, r7, #4
10015cc2:	d8b4      	bhi.n	10015c2e <__multiply+0x9a>
10015cc4:	e9dd e402 	ldrd	lr, r4, [sp, #8]
10015cc8:	46d4      	mov	ip, sl
10015cca:	2c00      	cmp	r4, #0
10015ccc:	dc02      	bgt.n	10015cd4 <__multiply+0x140>
10015cce:	e005      	b.n	10015cdc <__multiply+0x148>
10015cd0:	3c01      	subs	r4, #1
10015cd2:	d003      	beq.n	10015cdc <__multiply+0x148>
10015cd4:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
10015cd8:	2b00      	cmp	r3, #0
10015cda:	d0f9      	beq.n	10015cd0 <__multiply+0x13c>
10015cdc:	4660      	mov	r0, ip
10015cde:	f8cc 4010 	str.w	r4, [ip, #16]
10015ce2:	b005      	add	sp, #20
10015ce4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015ce8:	4b03      	ldr	r3, [pc, #12]	@ (10015cf8 <__multiply+0x164>)
10015cea:	4804      	ldr	r0, [pc, #16]	@ (10015cfc <__multiply+0x168>)
10015cec:	4662      	mov	r2, ip
10015cee:	f44f 71b1 	mov.w	r1, #354	@ 0x162
10015cf2:	f7ff fe2f 	bl	10015954 <__assert_func>
10015cf6:	bf00      	nop
10015cf8:	10017154 	.word	0x10017154
10015cfc:	10017308 	.word	0x10017308

10015d00 <__pow5mult>:
10015d00:	f012 0303 	ands.w	r3, r2, #3
10015d04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10015d08:	4614      	mov	r4, r2
10015d0a:	4607      	mov	r7, r0
10015d0c:	d12c      	bne.n	10015d68 <__pow5mult+0x68>
10015d0e:	460d      	mov	r5, r1
10015d10:	10a4      	asrs	r4, r4, #2
10015d12:	d01c      	beq.n	10015d4e <__pow5mult+0x4e>
10015d14:	6c3e      	ldr	r6, [r7, #64]	@ 0x40
10015d16:	b386      	cbz	r6, 10015d7a <__pow5mult+0x7a>
10015d18:	07e3      	lsls	r3, r4, #31
10015d1a:	f04f 0800 	mov.w	r8, #0
10015d1e:	d406      	bmi.n	10015d2e <__pow5mult+0x2e>
10015d20:	1064      	asrs	r4, r4, #1
10015d22:	d014      	beq.n	10015d4e <__pow5mult+0x4e>
10015d24:	6830      	ldr	r0, [r6, #0]
10015d26:	b1a8      	cbz	r0, 10015d54 <__pow5mult+0x54>
10015d28:	4606      	mov	r6, r0
10015d2a:	07e3      	lsls	r3, r4, #31
10015d2c:	d5f8      	bpl.n	10015d20 <__pow5mult+0x20>
10015d2e:	4632      	mov	r2, r6
10015d30:	4629      	mov	r1, r5
10015d32:	4638      	mov	r0, r7
10015d34:	f7ff ff2e 	bl	10015b94 <__multiply>
10015d38:	b135      	cbz	r5, 10015d48 <__pow5mult+0x48>
10015d3a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
10015d3c:	6869      	ldr	r1, [r5, #4]
10015d3e:	f853 2021 	ldr.w	r2, [r3, r1, lsl #2]
10015d42:	602a      	str	r2, [r5, #0]
10015d44:	f843 5021 	str.w	r5, [r3, r1, lsl #2]
10015d48:	1064      	asrs	r4, r4, #1
10015d4a:	4605      	mov	r5, r0
10015d4c:	d1ea      	bne.n	10015d24 <__pow5mult+0x24>
10015d4e:	4628      	mov	r0, r5
10015d50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10015d54:	4632      	mov	r2, r6
10015d56:	4631      	mov	r1, r6
10015d58:	4638      	mov	r0, r7
10015d5a:	f7ff ff1b 	bl	10015b94 <__multiply>
10015d5e:	6030      	str	r0, [r6, #0]
10015d60:	f8c0 8000 	str.w	r8, [r0]
10015d64:	4606      	mov	r6, r0
10015d66:	e7e0      	b.n	10015d2a <__pow5mult+0x2a>
10015d68:	3b01      	subs	r3, #1
10015d6a:	4a0f      	ldr	r2, [pc, #60]	@ (10015da8 <__pow5mult+0xa8>)
10015d6c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10015d70:	2300      	movs	r3, #0
10015d72:	f7ff fe3f 	bl	100159f4 <__multadd>
10015d76:	4605      	mov	r5, r0
10015d78:	e7ca      	b.n	10015d10 <__pow5mult+0x10>
10015d7a:	2101      	movs	r1, #1
10015d7c:	4638      	mov	r0, r7
10015d7e:	f7ff fe09 	bl	10015994 <_Balloc>
10015d82:	4606      	mov	r6, r0
10015d84:	b140      	cbz	r0, 10015d98 <__pow5mult+0x98>
10015d86:	2301      	movs	r3, #1
10015d88:	f240 2271 	movw	r2, #625	@ 0x271
10015d8c:	e9c0 3204 	strd	r3, r2, [r0, #16]
10015d90:	2300      	movs	r3, #0
10015d92:	6438      	str	r0, [r7, #64]	@ 0x40
10015d94:	6003      	str	r3, [r0, #0]
10015d96:	e7bf      	b.n	10015d18 <__pow5mult+0x18>
10015d98:	4b04      	ldr	r3, [pc, #16]	@ (10015dac <__pow5mult+0xac>)
10015d9a:	4805      	ldr	r0, [pc, #20]	@ (10015db0 <__pow5mult+0xb0>)
10015d9c:	4632      	mov	r2, r6
10015d9e:	f240 1145 	movw	r1, #325	@ 0x145
10015da2:	f7ff fdd7 	bl	10015954 <__assert_func>
10015da6:	bf00      	nop
10015da8:	10017364 	.word	0x10017364
10015dac:	10017154 	.word	0x10017154
10015db0:	10017308 	.word	0x10017308

10015db4 <__lshift>:
10015db4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10015db8:	460c      	mov	r4, r1
10015dba:	4690      	mov	r8, r2
10015dbc:	6927      	ldr	r7, [r4, #16]
10015dbe:	68a3      	ldr	r3, [r4, #8]
10015dc0:	6849      	ldr	r1, [r1, #4]
10015dc2:	eb07 1762 	add.w	r7, r7, r2, asr #5
10015dc6:	1c7d      	adds	r5, r7, #1
10015dc8:	429d      	cmp	r5, r3
10015dca:	4606      	mov	r6, r0
10015dcc:	ea4f 1962 	mov.w	r9, r2, asr #5
10015dd0:	dd04      	ble.n	10015ddc <__lshift+0x28>
10015dd2:	005b      	lsls	r3, r3, #1
10015dd4:	429d      	cmp	r5, r3
10015dd6:	f101 0101 	add.w	r1, r1, #1
10015dda:	dcfa      	bgt.n	10015dd2 <__lshift+0x1e>
10015ddc:	4630      	mov	r0, r6
10015dde:	f7ff fdd9 	bl	10015994 <_Balloc>
10015de2:	4684      	mov	ip, r0
10015de4:	2800      	cmp	r0, #0
10015de6:	d051      	beq.n	10015e8c <__lshift+0xd8>
10015de8:	f1b9 0f00 	cmp.w	r9, #0
10015dec:	f100 0014 	add.w	r0, r0, #20
10015df0:	dd0e      	ble.n	10015e10 <__lshift+0x5c>
10015df2:	f109 0205 	add.w	r2, r9, #5
10015df6:	ea4f 0e82 	mov.w	lr, r2, lsl #2
10015dfa:	4603      	mov	r3, r0
10015dfc:	eb0c 0282 	add.w	r2, ip, r2, lsl #2
10015e00:	2100      	movs	r1, #0
10015e02:	f843 1b04 	str.w	r1, [r3], #4
10015e06:	4293      	cmp	r3, r2
10015e08:	d1fb      	bne.n	10015e02 <__lshift+0x4e>
10015e0a:	f1ae 0314 	sub.w	r3, lr, #20
10015e0e:	4418      	add	r0, r3
10015e10:	6921      	ldr	r1, [r4, #16]
10015e12:	f104 0314 	add.w	r3, r4, #20
10015e16:	f018 081f 	ands.w	r8, r8, #31
10015e1a:	eb03 0181 	add.w	r1, r3, r1, lsl #2
10015e1e:	d02d      	beq.n	10015e7c <__lshift+0xc8>
10015e20:	f1c8 0920 	rsb	r9, r8, #32
10015e24:	4686      	mov	lr, r0
10015e26:	f04f 0a00 	mov.w	sl, #0
10015e2a:	681a      	ldr	r2, [r3, #0]
10015e2c:	fa02 f208 	lsl.w	r2, r2, r8
10015e30:	ea42 020a 	orr.w	r2, r2, sl
10015e34:	f84e 2b04 	str.w	r2, [lr], #4
10015e38:	f853 2b04 	ldr.w	r2, [r3], #4
10015e3c:	4299      	cmp	r1, r3
10015e3e:	fa22 fa09 	lsr.w	sl, r2, r9
10015e42:	d8f2      	bhi.n	10015e2a <__lshift+0x76>
10015e44:	1b0b      	subs	r3, r1, r4
10015e46:	3b15      	subs	r3, #21
10015e48:	f023 0303 	bic.w	r3, r3, #3
10015e4c:	3304      	adds	r3, #4
10015e4e:	f104 0215 	add.w	r2, r4, #21
10015e52:	4291      	cmp	r1, r2
10015e54:	bf38      	it	cc
10015e56:	2304      	movcc	r3, #4
10015e58:	f840 a003 	str.w	sl, [r0, r3]
10015e5c:	f1ba 0f00 	cmp.w	sl, #0
10015e60:	d100      	bne.n	10015e64 <__lshift+0xb0>
10015e62:	463d      	mov	r5, r7
10015e64:	6c73      	ldr	r3, [r6, #68]	@ 0x44
10015e66:	6862      	ldr	r2, [r4, #4]
10015e68:	f8cc 5010 	str.w	r5, [ip, #16]
10015e6c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
10015e70:	6021      	str	r1, [r4, #0]
10015e72:	4660      	mov	r0, ip
10015e74:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
10015e78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10015e7c:	3804      	subs	r0, #4
10015e7e:	f853 2b04 	ldr.w	r2, [r3], #4
10015e82:	f840 2f04 	str.w	r2, [r0, #4]!
10015e86:	4299      	cmp	r1, r3
10015e88:	d8f9      	bhi.n	10015e7e <__lshift+0xca>
10015e8a:	e7ea      	b.n	10015e62 <__lshift+0xae>
10015e8c:	4b03      	ldr	r3, [pc, #12]	@ (10015e9c <__lshift+0xe8>)
10015e8e:	4804      	ldr	r0, [pc, #16]	@ (10015ea0 <__lshift+0xec>)
10015e90:	4662      	mov	r2, ip
10015e92:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
10015e96:	f7ff fd5d 	bl	10015954 <__assert_func>
10015e9a:	bf00      	nop
10015e9c:	10017154 	.word	0x10017154
10015ea0:	10017308 	.word	0x10017308

10015ea4 <__mcmp>:
10015ea4:	690b      	ldr	r3, [r1, #16]
10015ea6:	4684      	mov	ip, r0
10015ea8:	6900      	ldr	r0, [r0, #16]
10015eaa:	1ac0      	subs	r0, r0, r3
10015eac:	d115      	bne.n	10015eda <__mcmp+0x36>
10015eae:	f10c 0c14 	add.w	ip, ip, #20
10015eb2:	3114      	adds	r1, #20
10015eb4:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
10015eb8:	b410      	push	{r4}
10015eba:	eb01 0383 	add.w	r3, r1, r3, lsl #2
10015ebe:	e001      	b.n	10015ec4 <__mcmp+0x20>
10015ec0:	4594      	cmp	ip, r2
10015ec2:	d208      	bcs.n	10015ed6 <__mcmp+0x32>
10015ec4:	f852 4d04 	ldr.w	r4, [r2, #-4]!
10015ec8:	f853 1d04 	ldr.w	r1, [r3, #-4]!
10015ecc:	428c      	cmp	r4, r1
10015ece:	d0f7      	beq.n	10015ec0 <__mcmp+0x1c>
10015ed0:	d204      	bcs.n	10015edc <__mcmp+0x38>
10015ed2:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10015ed6:	bc10      	pop	{r4}
10015ed8:	4770      	bx	lr
10015eda:	4770      	bx	lr
10015edc:	2001      	movs	r0, #1
10015ede:	bc10      	pop	{r4}
10015ee0:	4770      	bx	lr
10015ee2:	bf00      	nop

10015ee4 <__mdiff>:
10015ee4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10015ee8:	6913      	ldr	r3, [r2, #16]
10015eea:	690f      	ldr	r7, [r1, #16]
10015eec:	1aff      	subs	r7, r7, r3
10015eee:	2f00      	cmp	r7, #0
10015ef0:	b083      	sub	sp, #12
10015ef2:	460d      	mov	r5, r1
10015ef4:	4690      	mov	r8, r2
10015ef6:	d115      	bne.n	10015f24 <__mdiff+0x40>
10015ef8:	f101 0614 	add.w	r6, r1, #20
10015efc:	3214      	adds	r2, #20
10015efe:	eb02 0283 	add.w	r2, r2, r3, lsl #2
10015f02:	eb06 0383 	add.w	r3, r6, r3, lsl #2
10015f06:	e001      	b.n	10015f0c <__mdiff+0x28>
10015f08:	429e      	cmp	r6, r3
10015f0a:	d276      	bcs.n	10015ffa <__mdiff+0x116>
10015f0c:	f853 4d04 	ldr.w	r4, [r3, #-4]!
10015f10:	f852 1d04 	ldr.w	r1, [r2, #-4]!
10015f14:	428c      	cmp	r4, r1
10015f16:	d0f7      	beq.n	10015f08 <__mdiff+0x24>
10015f18:	d206      	bcs.n	10015f28 <__mdiff+0x44>
10015f1a:	462b      	mov	r3, r5
10015f1c:	2701      	movs	r7, #1
10015f1e:	4645      	mov	r5, r8
10015f20:	4698      	mov	r8, r3
10015f22:	e001      	b.n	10015f28 <__mdiff+0x44>
10015f24:	dbf9      	blt.n	10015f1a <__mdiff+0x36>
10015f26:	2700      	movs	r7, #0
10015f28:	6869      	ldr	r1, [r5, #4]
10015f2a:	f7ff fd33 	bl	10015994 <_Balloc>
10015f2e:	4681      	mov	r9, r0
10015f30:	2800      	cmp	r0, #0
10015f32:	d076      	beq.n	10016022 <__mdiff+0x13e>
10015f34:	692e      	ldr	r6, [r5, #16]
10015f36:	60c7      	str	r7, [r0, #12]
10015f38:	f8d8 0010 	ldr.w	r0, [r8, #16]
10015f3c:	f105 0b14 	add.w	fp, r5, #20
10015f40:	f108 0e14 	add.w	lr, r8, #20
10015f44:	f109 0a14 	add.w	sl, r9, #20
10015f48:	f105 0110 	add.w	r1, r5, #16
10015f4c:	eb0e 0080 	add.w	r0, lr, r0, lsl #2
10015f50:	eb0b 0286 	add.w	r2, fp, r6, lsl #2
10015f54:	4657      	mov	r7, sl
10015f56:	f04f 0c00 	mov.w	ip, #0
10015f5a:	f8cd b004 	str.w	fp, [sp, #4]
10015f5e:	f85e 4b04 	ldr.w	r4, [lr], #4
10015f62:	f851 5f04 	ldr.w	r5, [r1, #4]!
10015f66:	fa1f fb84 	uxth.w	fp, r4
10015f6a:	b2ab      	uxth	r3, r5
10015f6c:	eba3 030b 	sub.w	r3, r3, fp
10015f70:	0c24      	lsrs	r4, r4, #16
10015f72:	4463      	add	r3, ip
10015f74:	ebc4 4415 	rsb	r4, r4, r5, lsr #16
10015f78:	eb04 4423 	add.w	r4, r4, r3, asr #16
10015f7c:	b29b      	uxth	r3, r3
10015f7e:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10015f82:	4570      	cmp	r0, lr
10015f84:	f847 3b04 	str.w	r3, [r7], #4
10015f88:	ea4f 4c24 	mov.w	ip, r4, asr #16
10015f8c:	d8e7      	bhi.n	10015f5e <__mdiff+0x7a>
10015f8e:	eba0 0108 	sub.w	r1, r0, r8
10015f92:	3915      	subs	r1, #21
10015f94:	0889      	lsrs	r1, r1, #2
10015f96:	1c4c      	adds	r4, r1, #1
10015f98:	f8dd b004 	ldr.w	fp, [sp, #4]
10015f9c:	f108 0815 	add.w	r8, r8, #21
10015fa0:	00a4      	lsls	r4, r4, #2
10015fa2:	4540      	cmp	r0, r8
10015fa4:	bf38      	it	cc
10015fa6:	2404      	movcc	r4, #4
10015fa8:	eb0b 0504 	add.w	r5, fp, r4
10015fac:	42aa      	cmp	r2, r5
10015fae:	4454      	add	r4, sl
10015fb0:	d930      	bls.n	10016014 <__mdiff+0x130>
10015fb2:	4627      	mov	r7, r4
10015fb4:	4628      	mov	r0, r5
10015fb6:	f850 3b04 	ldr.w	r3, [r0], #4
10015fba:	fa1c fe83 	uxtah	lr, ip, r3
10015fbe:	0c19      	lsrs	r1, r3, #16
10015fc0:	4463      	add	r3, ip
10015fc2:	eb01 412e 	add.w	r1, r1, lr, asr #16
10015fc6:	b29b      	uxth	r3, r3
10015fc8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10015fcc:	4282      	cmp	r2, r0
10015fce:	f847 3b04 	str.w	r3, [r7], #4
10015fd2:	ea4f 4c21 	mov.w	ip, r1, asr #16
10015fd6:	d8ee      	bhi.n	10015fb6 <__mdiff+0xd2>
10015fd8:	3a01      	subs	r2, #1
10015fda:	1b52      	subs	r2, r2, r5
10015fdc:	f022 0203 	bic.w	r2, r2, #3
10015fe0:	4414      	add	r4, r2
10015fe2:	b923      	cbnz	r3, 10015fee <__mdiff+0x10a>
10015fe4:	f854 3d04 	ldr.w	r3, [r4, #-4]!
10015fe8:	3e01      	subs	r6, #1
10015fea:	2b00      	cmp	r3, #0
10015fec:	d0fa      	beq.n	10015fe4 <__mdiff+0x100>
10015fee:	4648      	mov	r0, r9
10015ff0:	f8c9 6010 	str.w	r6, [r9, #16]
10015ff4:	b003      	add	sp, #12
10015ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10015ffa:	2100      	movs	r1, #0
10015ffc:	f7ff fcca 	bl	10015994 <_Balloc>
10016000:	4681      	mov	r9, r0
10016002:	b1a8      	cbz	r0, 10016030 <__mdiff+0x14c>
10016004:	2201      	movs	r2, #1
10016006:	2300      	movs	r3, #0
10016008:	e9c0 2304 	strd	r2, r3, [r0, #16]
1001600c:	4648      	mov	r0, r9
1001600e:	b003      	add	sp, #12
10016010:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016014:	0089      	lsls	r1, r1, #2
10016016:	4540      	cmp	r0, r8
10016018:	bf38      	it	cc
1001601a:	2100      	movcc	r1, #0
1001601c:	eb0a 0401 	add.w	r4, sl, r1
10016020:	e7df      	b.n	10015fe2 <__mdiff+0xfe>
10016022:	4b07      	ldr	r3, [pc, #28]	@ (10016040 <__mdiff+0x15c>)
10016024:	4807      	ldr	r0, [pc, #28]	@ (10016044 <__mdiff+0x160>)
10016026:	464a      	mov	r2, r9
10016028:	f240 2145 	movw	r1, #581	@ 0x245
1001602c:	f7ff fc92 	bl	10015954 <__assert_func>
10016030:	4b03      	ldr	r3, [pc, #12]	@ (10016040 <__mdiff+0x15c>)
10016032:	4804      	ldr	r0, [pc, #16]	@ (10016044 <__mdiff+0x160>)
10016034:	464a      	mov	r2, r9
10016036:	f240 2137 	movw	r1, #567	@ 0x237
1001603a:	f7ff fc8b 	bl	10015954 <__assert_func>
1001603e:	bf00      	nop
10016040:	10017154 	.word	0x10017154
10016044:	10017308 	.word	0x10017308

10016048 <__d2b>:
10016048:	b5f0      	push	{r4, r5, r6, r7, lr}
1001604a:	2101      	movs	r1, #1
1001604c:	b083      	sub	sp, #12
1001604e:	4616      	mov	r6, r2
10016050:	461f      	mov	r7, r3
10016052:	f7ff fc9f 	bl	10015994 <_Balloc>
10016056:	4605      	mov	r5, r0
10016058:	2800      	cmp	r0, #0
1001605a:	d047      	beq.n	100160ec <__d2b+0xa4>
1001605c:	f3c7 540a 	ubfx	r4, r7, #20, #11
10016060:	f3c7 0313 	ubfx	r3, r7, #0, #20
10016064:	b10c      	cbz	r4, 1001606a <__d2b+0x22>
10016066:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001606a:	2e00      	cmp	r6, #0
1001606c:	9301      	str	r3, [sp, #4]
1001606e:	d114      	bne.n	1001609a <__d2b+0x52>
10016070:	a801      	add	r0, sp, #4
10016072:	f7ff fd31 	bl	10015ad8 <__lo0bits>
10016076:	9b01      	ldr	r3, [sp, #4]
10016078:	616b      	str	r3, [r5, #20]
1001607a:	2201      	movs	r2, #1
1001607c:	3020      	adds	r0, #32
1001607e:	612a      	str	r2, [r5, #16]
10016080:	b314      	cbz	r4, 100160c8 <__d2b+0x80>
10016082:	9b08      	ldr	r3, [sp, #32]
10016084:	f2a4 4433 	subw	r4, r4, #1075	@ 0x433
10016088:	4404      	add	r4, r0
1001608a:	601c      	str	r4, [r3, #0]
1001608c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
1001608e:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
10016092:	6018      	str	r0, [r3, #0]
10016094:	4628      	mov	r0, r5
10016096:	b003      	add	sp, #12
10016098:	bdf0      	pop	{r4, r5, r6, r7, pc}
1001609a:	4668      	mov	r0, sp
1001609c:	9600      	str	r6, [sp, #0]
1001609e:	f7ff fd1b 	bl	10015ad8 <__lo0bits>
100160a2:	9b01      	ldr	r3, [sp, #4]
100160a4:	b300      	cbz	r0, 100160e8 <__d2b+0xa0>
100160a6:	9900      	ldr	r1, [sp, #0]
100160a8:	f1c0 0220 	rsb	r2, r0, #32
100160ac:	fa03 f202 	lsl.w	r2, r3, r2
100160b0:	40c3      	lsrs	r3, r0
100160b2:	9301      	str	r3, [sp, #4]
100160b4:	430a      	orrs	r2, r1
100160b6:	2b00      	cmp	r3, #0
100160b8:	e9c5 2305 	strd	r2, r3, [r5, #20]
100160bc:	bf0c      	ite	eq
100160be:	2201      	moveq	r2, #1
100160c0:	2202      	movne	r2, #2
100160c2:	612a      	str	r2, [r5, #16]
100160c4:	2c00      	cmp	r4, #0
100160c6:	d1dc      	bne.n	10016082 <__d2b+0x3a>
100160c8:	eb05 0182 	add.w	r1, r5, r2, lsl #2
100160cc:	f2a0 4332 	subw	r3, r0, #1074	@ 0x432
100160d0:	6908      	ldr	r0, [r1, #16]
100160d2:	9908      	ldr	r1, [sp, #32]
100160d4:	600b      	str	r3, [r1, #0]
100160d6:	f7ff fcdd 	bl	10015a94 <__hi0bits>
100160da:	9b09      	ldr	r3, [sp, #36]	@ 0x24
100160dc:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
100160e0:	6018      	str	r0, [r3, #0]
100160e2:	4628      	mov	r0, r5
100160e4:	b003      	add	sp, #12
100160e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100160e8:	9a00      	ldr	r2, [sp, #0]
100160ea:	e7e4      	b.n	100160b6 <__d2b+0x6e>
100160ec:	4b03      	ldr	r3, [pc, #12]	@ (100160fc <__d2b+0xb4>)
100160ee:	4804      	ldr	r0, [pc, #16]	@ (10016100 <__d2b+0xb8>)
100160f0:	462a      	mov	r2, r5
100160f2:	f240 310f 	movw	r1, #783	@ 0x30f
100160f6:	f7ff fc2d 	bl	10015954 <__assert_func>
100160fa:	bf00      	nop
100160fc:	10017154 	.word	0x10017154
10016100:	10017308 	.word	0x10017308

10016104 <_calloc_r>:
10016104:	b538      	push	{r3, r4, r5, lr}
10016106:	fba1 1402 	umull	r1, r4, r1, r2
1001610a:	bb54      	cbnz	r4, 10016162 <_calloc_r+0x5e>
1001610c:	f7f9 fe42 	bl	1000fd94 <_malloc_r>
10016110:	4605      	mov	r5, r0
10016112:	b350      	cbz	r0, 1001616a <_calloc_r+0x66>
10016114:	f850 2c04 	ldr.w	r2, [r0, #-4]
10016118:	f022 0203 	bic.w	r2, r2, #3
1001611c:	3a04      	subs	r2, #4
1001611e:	2a24      	cmp	r2, #36	@ 0x24
10016120:	d810      	bhi.n	10016144 <_calloc_r+0x40>
10016122:	2a13      	cmp	r2, #19
10016124:	d913      	bls.n	1001614e <_calloc_r+0x4a>
10016126:	2a1b      	cmp	r2, #27
10016128:	6004      	str	r4, [r0, #0]
1001612a:	6044      	str	r4, [r0, #4]
1001612c:	d916      	bls.n	1001615c <_calloc_r+0x58>
1001612e:	2a24      	cmp	r2, #36	@ 0x24
10016130:	6084      	str	r4, [r0, #8]
10016132:	60c4      	str	r4, [r0, #12]
10016134:	bf11      	iteee	ne
10016136:	f100 0210 	addne.w	r2, r0, #16
1001613a:	f100 0218 	addeq.w	r2, r0, #24
1001613e:	6104      	streq	r4, [r0, #16]
10016140:	6144      	streq	r4, [r0, #20]
10016142:	e005      	b.n	10016150 <_calloc_r+0x4c>
10016144:	4621      	mov	r1, r4
10016146:	f7fa f8e9 	bl	1001031c <memset>
1001614a:	4628      	mov	r0, r5
1001614c:	bd38      	pop	{r3, r4, r5, pc}
1001614e:	4602      	mov	r2, r0
10016150:	2300      	movs	r3, #0
10016152:	6013      	str	r3, [r2, #0]
10016154:	6053      	str	r3, [r2, #4]
10016156:	6093      	str	r3, [r2, #8]
10016158:	4628      	mov	r0, r5
1001615a:	bd38      	pop	{r3, r4, r5, pc}
1001615c:	f100 0208 	add.w	r2, r0, #8
10016160:	e7f6      	b.n	10016150 <_calloc_r+0x4c>
10016162:	f7f9 fe11 	bl	1000fd88 <__errno>
10016166:	230c      	movs	r3, #12
10016168:	6003      	str	r3, [r0, #0]
1001616a:	2500      	movs	r5, #0
1001616c:	4628      	mov	r0, r5
1001616e:	bd38      	pop	{r3, r4, r5, pc}

10016170 <_wcsnrtombs_l>:
10016170:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10016174:	b089      	sub	sp, #36	@ 0x24
10016176:	e9dd 7a13 	ldrd	r7, sl, [sp, #76]	@ 0x4c
1001617a:	4686      	mov	lr, r0
1001617c:	461e      	mov	r6, r3
1001617e:	2f00      	cmp	r7, #0
10016180:	d053      	beq.n	1001622a <_wcsnrtombs_l+0xba>
10016182:	6815      	ldr	r5, [r2, #0]
10016184:	2900      	cmp	r1, #0
10016186:	d055      	beq.n	10016234 <_wcsnrtombs_l+0xc4>
10016188:	9b12      	ldr	r3, [sp, #72]	@ 0x48
1001618a:	2b00      	cmp	r3, #0
1001618c:	d062      	beq.n	10016254 <_wcsnrtombs_l+0xe4>
1001618e:	1e74      	subs	r4, r6, #1
10016190:	b32e      	cbz	r6, 100161de <_wcsnrtombs_l+0x6e>
10016192:	e9cd e100 	strd	lr, r1, [sp]
10016196:	f8dd b048 	ldr.w	fp, [sp, #72]	@ 0x48
1001619a:	9102      	str	r1, [sp, #8]
1001619c:	3d04      	subs	r5, #4
1001619e:	2600      	movs	r6, #0
100161a0:	9203      	str	r2, [sp, #12]
100161a2:	e00a      	b.n	100161ba <_wcsnrtombs_l+0x4a>
100161a4:	9b01      	ldr	r3, [sp, #4]
100161a6:	b9f3      	cbnz	r3, 100161e6 <_wcsnrtombs_l+0x76>
100161a8:	6828      	ldr	r0, [r5, #0]
100161aa:	2800      	cmp	r0, #0
100161ac:	d031      	beq.n	10016212 <_wcsnrtombs_l+0xa2>
100161ae:	45dc      	cmp	ip, fp
100161b0:	d252      	bcs.n	10016258 <_wcsnrtombs_l+0xe8>
100161b2:	3c01      	subs	r4, #1
100161b4:	1c63      	adds	r3, r4, #1
100161b6:	4666      	mov	r6, ip
100161b8:	d011      	beq.n	100161de <_wcsnrtombs_l+0x6e>
100161ba:	f855 2f04 	ldr.w	r2, [r5, #4]!
100161be:	9800      	ldr	r0, [sp, #0]
100161c0:	f8da c0e0 	ldr.w	ip, [sl, #224]	@ 0xe0
100161c4:	463b      	mov	r3, r7
100161c6:	a905      	add	r1, sp, #20
100161c8:	e9d7 9800 	ldrd	r9, r8, [r7]
100161cc:	47e0      	blx	ip
100161ce:	1c42      	adds	r2, r0, #1
100161d0:	d034      	beq.n	1001623c <_wcsnrtombs_l+0xcc>
100161d2:	eb00 0c06 	add.w	ip, r0, r6
100161d6:	45dc      	cmp	ip, fp
100161d8:	d9e4      	bls.n	100161a4 <_wcsnrtombs_l+0x34>
100161da:	e9c7 9800 	strd	r9, r8, [r7]
100161de:	4630      	mov	r0, r6
100161e0:	b009      	add	sp, #36	@ 0x24
100161e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100161e6:	2800      	cmp	r0, #0
100161e8:	dd0c      	ble.n	10016204 <_wcsnrtombs_l+0x94>
100161ea:	9b02      	ldr	r3, [sp, #8]
100161ec:	4418      	add	r0, r3
100161ee:	1e5a      	subs	r2, r3, #1
100161f0:	a905      	add	r1, sp, #20
100161f2:	f100 3eff 	add.w	lr, r0, #4294967295	@ 0xffffffff
100161f6:	f811 3b01 	ldrb.w	r3, [r1], #1
100161fa:	f802 3f01 	strb.w	r3, [r2, #1]!
100161fe:	4596      	cmp	lr, r2
10016200:	d1f9      	bne.n	100161f6 <_wcsnrtombs_l+0x86>
10016202:	9002      	str	r0, [sp, #8]
10016204:	9b03      	ldr	r3, [sp, #12]
10016206:	6828      	ldr	r0, [r5, #0]
10016208:	681a      	ldr	r2, [r3, #0]
1001620a:	3204      	adds	r2, #4
1001620c:	601a      	str	r2, [r3, #0]
1001620e:	2800      	cmp	r0, #0
10016210:	d1cd      	bne.n	100161ae <_wcsnrtombs_l+0x3e>
10016212:	9901      	ldr	r1, [sp, #4]
10016214:	9a03      	ldr	r2, [sp, #12]
10016216:	b101      	cbz	r1, 1001621a <_wcsnrtombs_l+0xaa>
10016218:	6010      	str	r0, [r2, #0]
1001621a:	f10c 36ff 	add.w	r6, ip, #4294967295	@ 0xffffffff
1001621e:	2200      	movs	r2, #0
10016220:	4630      	mov	r0, r6
10016222:	603a      	str	r2, [r7, #0]
10016224:	b009      	add	sp, #36	@ 0x24
10016226:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
1001622a:	6815      	ldr	r5, [r2, #0]
1001622c:	f500 7786 	add.w	r7, r0, #268	@ 0x10c
10016230:	2900      	cmp	r1, #0
10016232:	d1a9      	bne.n	10016188 <_wcsnrtombs_l+0x18>
10016234:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
10016238:	9312      	str	r3, [sp, #72]	@ 0x48
1001623a:	e7a8      	b.n	1001618e <_wcsnrtombs_l+0x1e>
1001623c:	f8dd e000 	ldr.w	lr, [sp]
10016240:	4606      	mov	r6, r0
10016242:	218a      	movs	r1, #138	@ 0x8a
10016244:	2200      	movs	r2, #0
10016246:	4630      	mov	r0, r6
10016248:	f8ce 1000 	str.w	r1, [lr]
1001624c:	603a      	str	r2, [r7, #0]
1001624e:	b009      	add	sp, #36	@ 0x24
10016250:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10016254:	9e12      	ldr	r6, [sp, #72]	@ 0x48
10016256:	e7c2      	b.n	100161de <_wcsnrtombs_l+0x6e>
10016258:	4666      	mov	r6, ip
1001625a:	e7c0      	b.n	100161de <_wcsnrtombs_l+0x6e>

1001625c <_wcsnrtombs_r>:
1001625c:	b510      	push	{r4, lr}
1001625e:	b084      	sub	sp, #16
10016260:	4c05      	ldr	r4, [pc, #20]	@ (10016278 <_wcsnrtombs_r+0x1c>)
10016262:	9806      	ldr	r0, [sp, #24]
10016264:	9000      	str	r0, [sp, #0]
10016266:	9807      	ldr	r0, [sp, #28]
10016268:	9001      	str	r0, [sp, #4]
1001626a:	4804      	ldr	r0, [pc, #16]	@ (1001627c <_wcsnrtombs_r+0x20>)
1001626c:	6800      	ldr	r0, [r0, #0]
1001626e:	9402      	str	r4, [sp, #8]
10016270:	f7ff ff7e 	bl	10016170 <_wcsnrtombs_l>
10016274:	b004      	add	sp, #16
10016276:	bd10      	pop	{r4, pc}
10016278:	2000054c 	.word	0x2000054c
1001627c:	2000041c 	.word	0x2000041c

10016280 <fiprintf>:
10016280:	b40e      	push	{r1, r2, r3}
10016282:	b510      	push	{r4, lr}
10016284:	b083      	sub	sp, #12
10016286:	ab05      	add	r3, sp, #20
10016288:	4c06      	ldr	r4, [pc, #24]	@ (100162a4 <fiprintf+0x24>)
1001628a:	f853 2b04 	ldr.w	r2, [r3], #4
1001628e:	9301      	str	r3, [sp, #4]
10016290:	4601      	mov	r1, r0
10016292:	6820      	ldr	r0, [r4, #0]
10016294:	f7fc fcf4 	bl	10012c80 <_vfiprintf_r>
10016298:	b003      	add	sp, #12
1001629a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1001629e:	b003      	add	sp, #12
100162a0:	4770      	bx	lr
100162a2:	bf00      	nop
100162a4:	2000041c 	.word	0x2000041c

100162a8 <abort>:
100162a8:	b508      	push	{r3, lr}
100162aa:	2006      	movs	r0, #6
100162ac:	f000 f804 	bl	100162b8 <raise>
100162b0:	2001      	movs	r0, #1
100162b2:	f000 f855 	bl	10016360 <_exit>
100162b6:	bf00      	nop

100162b8 <raise>:
100162b8:	b538      	push	{r3, r4, r5, lr}
100162ba:	4b14      	ldr	r3, [pc, #80]	@ (1001630c <raise+0x54>)
100162bc:	281f      	cmp	r0, #31
100162be:	681d      	ldr	r5, [r3, #0]
100162c0:	d81e      	bhi.n	10016300 <raise+0x48>
100162c2:	f8d5 2118 	ldr.w	r2, [r5, #280]	@ 0x118
100162c6:	4604      	mov	r4, r0
100162c8:	b162      	cbz	r2, 100162e4 <raise+0x2c>
100162ca:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
100162ce:	b14b      	cbz	r3, 100162e4 <raise+0x2c>
100162d0:	2b01      	cmp	r3, #1
100162d2:	d005      	beq.n	100162e0 <raise+0x28>
100162d4:	1c59      	adds	r1, r3, #1
100162d6:	d00f      	beq.n	100162f8 <raise+0x40>
100162d8:	2100      	movs	r1, #0
100162da:	f842 1020 	str.w	r1, [r2, r0, lsl #2]
100162de:	4798      	blx	r3
100162e0:	2000      	movs	r0, #0
100162e2:	bd38      	pop	{r3, r4, r5, pc}
100162e4:	4628      	mov	r0, r5
100162e6:	f000 f829 	bl	1001633c <_getpid_r>
100162ea:	4622      	mov	r2, r4
100162ec:	4601      	mov	r1, r0
100162ee:	4628      	mov	r0, r5
100162f0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100162f4:	f000 b80c 	b.w	10016310 <_kill_r>
100162f8:	2316      	movs	r3, #22
100162fa:	602b      	str	r3, [r5, #0]
100162fc:	2001      	movs	r0, #1
100162fe:	bd38      	pop	{r3, r4, r5, pc}
10016300:	2316      	movs	r3, #22
10016302:	602b      	str	r3, [r5, #0]
10016304:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
10016308:	bd38      	pop	{r3, r4, r5, pc}
1001630a:	bf00      	nop
1001630c:	2000041c 	.word	0x2000041c

10016310 <_kill_r>:
10016310:	b570      	push	{r4, r5, r6, lr}
10016312:	460c      	mov	r4, r1
10016314:	4d08      	ldr	r5, [pc, #32]	@ (10016338 <_kill_r+0x28>)
10016316:	4603      	mov	r3, r0
10016318:	2600      	movs	r6, #0
1001631a:	4620      	mov	r0, r4
1001631c:	4611      	mov	r1, r2
1001631e:	461c      	mov	r4, r3
10016320:	602e      	str	r6, [r5, #0]
10016322:	f000 f815 	bl	10016350 <_kill>
10016326:	1c43      	adds	r3, r0, #1
10016328:	d000      	beq.n	1001632c <_kill_r+0x1c>
1001632a:	bd70      	pop	{r4, r5, r6, pc}
1001632c:	682b      	ldr	r3, [r5, #0]
1001632e:	2b00      	cmp	r3, #0
10016330:	d0fb      	beq.n	1001632a <_kill_r+0x1a>
10016332:	6023      	str	r3, [r4, #0]
10016334:	bd70      	pop	{r4, r5, r6, pc}
10016336:	bf00      	nop
10016338:	20000e54 	.word	0x20000e54

1001633c <_getpid_r>:
1001633c:	f000 b800 	b.w	10016340 <_getpid>

10016340 <_getpid>:
10016340:	4b02      	ldr	r3, [pc, #8]	@ (1001634c <_getpid+0xc>)
10016342:	2258      	movs	r2, #88	@ 0x58
10016344:	601a      	str	r2, [r3, #0]
10016346:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001634a:	4770      	bx	lr
1001634c:	20000e54 	.word	0x20000e54

10016350 <_kill>:
10016350:	4b02      	ldr	r3, [pc, #8]	@ (1001635c <_kill+0xc>)
10016352:	2258      	movs	r2, #88	@ 0x58
10016354:	601a      	str	r2, [r3, #0]
10016356:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
1001635a:	4770      	bx	lr
1001635c:	20000e54 	.word	0x20000e54

10016360 <_exit>:
10016360:	e7fe      	b.n	10016360 <_exit>
10016362:	bf00      	nop

10016364 <__aeabi_drsub>:
10016364:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
10016368:	e002      	b.n	10016370 <__adddf3>
1001636a:	bf00      	nop

1001636c <__aeabi_dsub>:
1001636c:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

10016370 <__adddf3>:
10016370:	b530      	push	{r4, r5, lr}
10016372:	ea4f 0441 	mov.w	r4, r1, lsl #1
10016376:	ea4f 0543 	mov.w	r5, r3, lsl #1
1001637a:	ea94 0f05 	teq	r4, r5
1001637e:	bf08      	it	eq
10016380:	ea90 0f02 	teqeq	r0, r2
10016384:	bf1f      	itttt	ne
10016386:	ea54 0c00 	orrsne.w	ip, r4, r0
1001638a:	ea55 0c02 	orrsne.w	ip, r5, r2
1001638e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10016392:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10016396:	f000 80e2 	beq.w	1001655e <__adddf3+0x1ee>
1001639a:	ea4f 5454 	mov.w	r4, r4, lsr #21
1001639e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
100163a2:	bfb8      	it	lt
100163a4:	426d      	neglt	r5, r5
100163a6:	dd0c      	ble.n	100163c2 <__adddf3+0x52>
100163a8:	442c      	add	r4, r5
100163aa:	ea80 0202 	eor.w	r2, r0, r2
100163ae:	ea81 0303 	eor.w	r3, r1, r3
100163b2:	ea82 0000 	eor.w	r0, r2, r0
100163b6:	ea83 0101 	eor.w	r1, r3, r1
100163ba:	ea80 0202 	eor.w	r2, r0, r2
100163be:	ea81 0303 	eor.w	r3, r1, r3
100163c2:	2d36      	cmp	r5, #54	@ 0x36
100163c4:	bf88      	it	hi
100163c6:	bd30      	pophi	{r4, r5, pc}
100163c8:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
100163cc:	ea4f 3101 	mov.w	r1, r1, lsl #12
100163d0:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
100163d4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
100163d8:	d002      	beq.n	100163e0 <__adddf3+0x70>
100163da:	4240      	negs	r0, r0
100163dc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100163e0:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
100163e4:	ea4f 3303 	mov.w	r3, r3, lsl #12
100163e8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
100163ec:	d002      	beq.n	100163f4 <__adddf3+0x84>
100163ee:	4252      	negs	r2, r2
100163f0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
100163f4:	ea94 0f05 	teq	r4, r5
100163f8:	f000 80a7 	beq.w	1001654a <__adddf3+0x1da>
100163fc:	f1a4 0401 	sub.w	r4, r4, #1
10016400:	f1d5 0e20 	rsbs	lr, r5, #32
10016404:	db0d      	blt.n	10016422 <__adddf3+0xb2>
10016406:	fa02 fc0e 	lsl.w	ip, r2, lr
1001640a:	fa22 f205 	lsr.w	r2, r2, r5
1001640e:	1880      	adds	r0, r0, r2
10016410:	f141 0100 	adc.w	r1, r1, #0
10016414:	fa03 f20e 	lsl.w	r2, r3, lr
10016418:	1880      	adds	r0, r0, r2
1001641a:	fa43 f305 	asr.w	r3, r3, r5
1001641e:	4159      	adcs	r1, r3
10016420:	e00e      	b.n	10016440 <__adddf3+0xd0>
10016422:	f1a5 0520 	sub.w	r5, r5, #32
10016426:	f10e 0e20 	add.w	lr, lr, #32
1001642a:	2a01      	cmp	r2, #1
1001642c:	fa03 fc0e 	lsl.w	ip, r3, lr
10016430:	bf28      	it	cs
10016432:	f04c 0c02 	orrcs.w	ip, ip, #2
10016436:	fa43 f305 	asr.w	r3, r3, r5
1001643a:	18c0      	adds	r0, r0, r3
1001643c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10016440:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10016444:	d507      	bpl.n	10016456 <__adddf3+0xe6>
10016446:	f04f 0e00 	mov.w	lr, #0
1001644a:	f1dc 0c00 	rsbs	ip, ip, #0
1001644e:	eb7e 0000 	sbcs.w	r0, lr, r0
10016452:	eb6e 0101 	sbc.w	r1, lr, r1
10016456:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
1001645a:	d31b      	bcc.n	10016494 <__adddf3+0x124>
1001645c:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
10016460:	d30c      	bcc.n	1001647c <__adddf3+0x10c>
10016462:	0849      	lsrs	r1, r1, #1
10016464:	ea5f 0030 	movs.w	r0, r0, rrx
10016468:	ea4f 0c3c 	mov.w	ip, ip, rrx
1001646c:	f104 0401 	add.w	r4, r4, #1
10016470:	ea4f 5244 	mov.w	r2, r4, lsl #21
10016474:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
10016478:	f080 809a 	bcs.w	100165b0 <__adddf3+0x240>
1001647c:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
10016480:	bf08      	it	eq
10016482:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10016486:	f150 0000 	adcs.w	r0, r0, #0
1001648a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001648e:	ea41 0105 	orr.w	r1, r1, r5
10016492:	bd30      	pop	{r4, r5, pc}
10016494:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10016498:	4140      	adcs	r0, r0
1001649a:	eb41 0101 	adc.w	r1, r1, r1
1001649e:	3c01      	subs	r4, #1
100164a0:	bf28      	it	cs
100164a2:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
100164a6:	d2e9      	bcs.n	1001647c <__adddf3+0x10c>
100164a8:	f091 0f00 	teq	r1, #0
100164ac:	bf04      	itt	eq
100164ae:	4601      	moveq	r1, r0
100164b0:	2000      	moveq	r0, #0
100164b2:	fab1 f381 	clz	r3, r1
100164b6:	bf08      	it	eq
100164b8:	3320      	addeq	r3, #32
100164ba:	f1a3 030b 	sub.w	r3, r3, #11
100164be:	f1b3 0220 	subs.w	r2, r3, #32
100164c2:	da0c      	bge.n	100164de <__adddf3+0x16e>
100164c4:	320c      	adds	r2, #12
100164c6:	dd08      	ble.n	100164da <__adddf3+0x16a>
100164c8:	f102 0c14 	add.w	ip, r2, #20
100164cc:	f1c2 020c 	rsb	r2, r2, #12
100164d0:	fa01 f00c 	lsl.w	r0, r1, ip
100164d4:	fa21 f102 	lsr.w	r1, r1, r2
100164d8:	e00c      	b.n	100164f4 <__adddf3+0x184>
100164da:	f102 0214 	add.w	r2, r2, #20
100164de:	bfd8      	it	le
100164e0:	f1c2 0c20 	rsble	ip, r2, #32
100164e4:	fa01 f102 	lsl.w	r1, r1, r2
100164e8:	fa20 fc0c 	lsr.w	ip, r0, ip
100164ec:	bfdc      	itt	le
100164ee:	ea41 010c 	orrle.w	r1, r1, ip
100164f2:	4090      	lslle	r0, r2
100164f4:	1ae4      	subs	r4, r4, r3
100164f6:	bfa2      	ittt	ge
100164f8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100164fc:	4329      	orrge	r1, r5
100164fe:	bd30      	popge	{r4, r5, pc}
10016500:	ea6f 0404 	mvn.w	r4, r4
10016504:	3c1f      	subs	r4, #31
10016506:	da1c      	bge.n	10016542 <__adddf3+0x1d2>
10016508:	340c      	adds	r4, #12
1001650a:	dc0e      	bgt.n	1001652a <__adddf3+0x1ba>
1001650c:	f104 0414 	add.w	r4, r4, #20
10016510:	f1c4 0220 	rsb	r2, r4, #32
10016514:	fa20 f004 	lsr.w	r0, r0, r4
10016518:	fa01 f302 	lsl.w	r3, r1, r2
1001651c:	ea40 0003 	orr.w	r0, r0, r3
10016520:	fa21 f304 	lsr.w	r3, r1, r4
10016524:	ea45 0103 	orr.w	r1, r5, r3
10016528:	bd30      	pop	{r4, r5, pc}
1001652a:	f1c4 040c 	rsb	r4, r4, #12
1001652e:	f1c4 0220 	rsb	r2, r4, #32
10016532:	fa20 f002 	lsr.w	r0, r0, r2
10016536:	fa01 f304 	lsl.w	r3, r1, r4
1001653a:	ea40 0003 	orr.w	r0, r0, r3
1001653e:	4629      	mov	r1, r5
10016540:	bd30      	pop	{r4, r5, pc}
10016542:	fa21 f004 	lsr.w	r0, r1, r4
10016546:	4629      	mov	r1, r5
10016548:	bd30      	pop	{r4, r5, pc}
1001654a:	f094 0f00 	teq	r4, #0
1001654e:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
10016552:	bf06      	itte	eq
10016554:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
10016558:	3401      	addeq	r4, #1
1001655a:	3d01      	subne	r5, #1
1001655c:	e74e      	b.n	100163fc <__adddf3+0x8c>
1001655e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10016562:	bf18      	it	ne
10016564:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10016568:	d029      	beq.n	100165be <__adddf3+0x24e>
1001656a:	ea94 0f05 	teq	r4, r5
1001656e:	bf08      	it	eq
10016570:	ea90 0f02 	teqeq	r0, r2
10016574:	d005      	beq.n	10016582 <__adddf3+0x212>
10016576:	ea54 0c00 	orrs.w	ip, r4, r0
1001657a:	bf04      	itt	eq
1001657c:	4619      	moveq	r1, r3
1001657e:	4610      	moveq	r0, r2
10016580:	bd30      	pop	{r4, r5, pc}
10016582:	ea91 0f03 	teq	r1, r3
10016586:	bf1e      	ittt	ne
10016588:	2100      	movne	r1, #0
1001658a:	2000      	movne	r0, #0
1001658c:	bd30      	popne	{r4, r5, pc}
1001658e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10016592:	d105      	bne.n	100165a0 <__adddf3+0x230>
10016594:	0040      	lsls	r0, r0, #1
10016596:	4149      	adcs	r1, r1
10016598:	bf28      	it	cs
1001659a:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
1001659e:	bd30      	pop	{r4, r5, pc}
100165a0:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
100165a4:	bf3c      	itt	cc
100165a6:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
100165aa:	bd30      	popcc	{r4, r5, pc}
100165ac:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
100165b0:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
100165b4:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
100165b8:	f04f 0000 	mov.w	r0, #0
100165bc:	bd30      	pop	{r4, r5, pc}
100165be:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100165c2:	bf1a      	itte	ne
100165c4:	4619      	movne	r1, r3
100165c6:	4610      	movne	r0, r2
100165c8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
100165cc:	bf1c      	itt	ne
100165ce:	460b      	movne	r3, r1
100165d0:	4602      	movne	r2, r0
100165d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100165d6:	bf06      	itte	eq
100165d8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
100165dc:	ea91 0f03 	teqeq	r1, r3
100165e0:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
100165e4:	bd30      	pop	{r4, r5, pc}
100165e6:	bf00      	nop

100165e8 <__aeabi_ui2d>:
100165e8:	f090 0f00 	teq	r0, #0
100165ec:	bf04      	itt	eq
100165ee:	2100      	moveq	r1, #0
100165f0:	4770      	bxeq	lr
100165f2:	b530      	push	{r4, r5, lr}
100165f4:	f44f 6480 	mov.w	r4, #1024	@ 0x400
100165f8:	f104 0432 	add.w	r4, r4, #50	@ 0x32
100165fc:	f04f 0500 	mov.w	r5, #0
10016600:	f04f 0100 	mov.w	r1, #0
10016604:	e750      	b.n	100164a8 <__adddf3+0x138>
10016606:	bf00      	nop

10016608 <__aeabi_i2d>:
10016608:	f090 0f00 	teq	r0, #0
1001660c:	bf04      	itt	eq
1001660e:	2100      	moveq	r1, #0
10016610:	4770      	bxeq	lr
10016612:	b530      	push	{r4, r5, lr}
10016614:	f44f 6480 	mov.w	r4, #1024	@ 0x400
10016618:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001661c:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
10016620:	bf48      	it	mi
10016622:	4240      	negmi	r0, r0
10016624:	f04f 0100 	mov.w	r1, #0
10016628:	e73e      	b.n	100164a8 <__adddf3+0x138>
1001662a:	bf00      	nop

1001662c <__aeabi_f2d>:
1001662c:	0042      	lsls	r2, r0, #1
1001662e:	ea4f 01e2 	mov.w	r1, r2, asr #3
10016632:	ea4f 0131 	mov.w	r1, r1, rrx
10016636:	ea4f 7002 	mov.w	r0, r2, lsl #28
1001663a:	bf1f      	itttt	ne
1001663c:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
10016640:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
10016644:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
10016648:	4770      	bxne	lr
1001664a:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
1001664e:	bf08      	it	eq
10016650:	4770      	bxeq	lr
10016652:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
10016656:	bf04      	itt	eq
10016658:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
1001665c:	4770      	bxeq	lr
1001665e:	b530      	push	{r4, r5, lr}
10016660:	f44f 7460 	mov.w	r4, #896	@ 0x380
10016664:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
10016668:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
1001666c:	e71c      	b.n	100164a8 <__adddf3+0x138>
1001666e:	bf00      	nop

10016670 <__aeabi_ul2d>:
10016670:	ea50 0201 	orrs.w	r2, r0, r1
10016674:	bf08      	it	eq
10016676:	4770      	bxeq	lr
10016678:	b530      	push	{r4, r5, lr}
1001667a:	f04f 0500 	mov.w	r5, #0
1001667e:	e00a      	b.n	10016696 <__aeabi_l2d+0x16>

10016680 <__aeabi_l2d>:
10016680:	ea50 0201 	orrs.w	r2, r0, r1
10016684:	bf08      	it	eq
10016686:	4770      	bxeq	lr
10016688:	b530      	push	{r4, r5, lr}
1001668a:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
1001668e:	d502      	bpl.n	10016696 <__aeabi_l2d+0x16>
10016690:	4240      	negs	r0, r0
10016692:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10016696:	f44f 6480 	mov.w	r4, #1024	@ 0x400
1001669a:	f104 0432 	add.w	r4, r4, #50	@ 0x32
1001669e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
100166a2:	f43f aed8 	beq.w	10016456 <__adddf3+0xe6>
100166a6:	f04f 0203 	mov.w	r2, #3
100166aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100166ae:	bf18      	it	ne
100166b0:	3203      	addne	r2, #3
100166b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100166b6:	bf18      	it	ne
100166b8:	3203      	addne	r2, #3
100166ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
100166be:	f1c2 0320 	rsb	r3, r2, #32
100166c2:	fa00 fc03 	lsl.w	ip, r0, r3
100166c6:	fa20 f002 	lsr.w	r0, r0, r2
100166ca:	fa01 fe03 	lsl.w	lr, r1, r3
100166ce:	ea40 000e 	orr.w	r0, r0, lr
100166d2:	fa21 f102 	lsr.w	r1, r1, r2
100166d6:	4414      	add	r4, r2
100166d8:	e6bd      	b.n	10016456 <__adddf3+0xe6>
100166da:	bf00      	nop

100166dc <__aeabi_dmul>:
100166dc:	b570      	push	{r4, r5, r6, lr}
100166de:	f04f 0cff 	mov.w	ip, #255	@ 0xff
100166e2:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
100166e6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100166ea:	bf1d      	ittte	ne
100166ec:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100166f0:	ea94 0f0c 	teqne	r4, ip
100166f4:	ea95 0f0c 	teqne	r5, ip
100166f8:	f000 f8de 	bleq	100168b8 <__aeabi_dmul+0x1dc>
100166fc:	442c      	add	r4, r5
100166fe:	ea81 0603 	eor.w	r6, r1, r3
10016702:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10016706:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1001670a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1001670e:	bf18      	it	ne
10016710:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10016714:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10016718:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
1001671c:	d038      	beq.n	10016790 <__aeabi_dmul+0xb4>
1001671e:	fba0 ce02 	umull	ip, lr, r0, r2
10016722:	f04f 0500 	mov.w	r5, #0
10016726:	fbe1 e502 	umlal	lr, r5, r1, r2
1001672a:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
1001672e:	fbe0 e503 	umlal	lr, r5, r0, r3
10016732:	f04f 0600 	mov.w	r6, #0
10016736:	fbe1 5603 	umlal	r5, r6, r1, r3
1001673a:	f09c 0f00 	teq	ip, #0
1001673e:	bf18      	it	ne
10016740:	f04e 0e01 	orrne.w	lr, lr, #1
10016744:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
10016748:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
1001674c:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
10016750:	d204      	bcs.n	1001675c <__aeabi_dmul+0x80>
10016752:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
10016756:	416d      	adcs	r5, r5
10016758:	eb46 0606 	adc.w	r6, r6, r6
1001675c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10016760:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10016764:	ea4f 20c5 	mov.w	r0, r5, lsl #11
10016768:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
1001676c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10016770:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10016774:	bf88      	it	hi
10016776:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
1001677a:	d81e      	bhi.n	100167ba <__aeabi_dmul+0xde>
1001677c:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
10016780:	bf08      	it	eq
10016782:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10016786:	f150 0000 	adcs.w	r0, r0, #0
1001678a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1001678e:	bd70      	pop	{r4, r5, r6, pc}
10016790:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
10016794:	ea46 0101 	orr.w	r1, r6, r1
10016798:	ea40 0002 	orr.w	r0, r0, r2
1001679c:	ea81 0103 	eor.w	r1, r1, r3
100167a0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
100167a4:	bfc2      	ittt	gt
100167a6:	ebd4 050c 	rsbsgt	r5, r4, ip
100167aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100167ae:	bd70      	popgt	{r4, r5, r6, pc}
100167b0:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
100167b4:	f04f 0e00 	mov.w	lr, #0
100167b8:	3c01      	subs	r4, #1
100167ba:	f300 80ab 	bgt.w	10016914 <__aeabi_dmul+0x238>
100167be:	f114 0f36 	cmn.w	r4, #54	@ 0x36
100167c2:	bfde      	ittt	le
100167c4:	2000      	movle	r0, #0
100167c6:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
100167ca:	bd70      	pople	{r4, r5, r6, pc}
100167cc:	f1c4 0400 	rsb	r4, r4, #0
100167d0:	3c20      	subs	r4, #32
100167d2:	da35      	bge.n	10016840 <__aeabi_dmul+0x164>
100167d4:	340c      	adds	r4, #12
100167d6:	dc1b      	bgt.n	10016810 <__aeabi_dmul+0x134>
100167d8:	f104 0414 	add.w	r4, r4, #20
100167dc:	f1c4 0520 	rsb	r5, r4, #32
100167e0:	fa00 f305 	lsl.w	r3, r0, r5
100167e4:	fa20 f004 	lsr.w	r0, r0, r4
100167e8:	fa01 f205 	lsl.w	r2, r1, r5
100167ec:	ea40 0002 	orr.w	r0, r0, r2
100167f0:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
100167f4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
100167f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100167fc:	fa21 f604 	lsr.w	r6, r1, r4
10016800:	eb42 0106 	adc.w	r1, r2, r6
10016804:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10016808:	bf08      	it	eq
1001680a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001680e:	bd70      	pop	{r4, r5, r6, pc}
10016810:	f1c4 040c 	rsb	r4, r4, #12
10016814:	f1c4 0520 	rsb	r5, r4, #32
10016818:	fa00 f304 	lsl.w	r3, r0, r4
1001681c:	fa20 f005 	lsr.w	r0, r0, r5
10016820:	fa01 f204 	lsl.w	r2, r1, r4
10016824:	ea40 0002 	orr.w	r0, r0, r2
10016828:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
1001682c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10016830:	f141 0100 	adc.w	r1, r1, #0
10016834:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10016838:	bf08      	it	eq
1001683a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1001683e:	bd70      	pop	{r4, r5, r6, pc}
10016840:	f1c4 0520 	rsb	r5, r4, #32
10016844:	fa00 f205 	lsl.w	r2, r0, r5
10016848:	ea4e 0e02 	orr.w	lr, lr, r2
1001684c:	fa20 f304 	lsr.w	r3, r0, r4
10016850:	fa01 f205 	lsl.w	r2, r1, r5
10016854:	ea43 0302 	orr.w	r3, r3, r2
10016858:	fa21 f004 	lsr.w	r0, r1, r4
1001685c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10016860:	fa21 f204 	lsr.w	r2, r1, r4
10016864:	ea20 0002 	bic.w	r0, r0, r2
10016868:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
1001686c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10016870:	bf08      	it	eq
10016872:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10016876:	bd70      	pop	{r4, r5, r6, pc}
10016878:	f094 0f00 	teq	r4, #0
1001687c:	d10f      	bne.n	1001689e <__aeabi_dmul+0x1c2>
1001687e:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
10016882:	0040      	lsls	r0, r0, #1
10016884:	eb41 0101 	adc.w	r1, r1, r1
10016888:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
1001688c:	bf08      	it	eq
1001688e:	3c01      	subeq	r4, #1
10016890:	d0f7      	beq.n	10016882 <__aeabi_dmul+0x1a6>
10016892:	ea41 0106 	orr.w	r1, r1, r6
10016896:	f095 0f00 	teq	r5, #0
1001689a:	bf18      	it	ne
1001689c:	4770      	bxne	lr
1001689e:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
100168a2:	0052      	lsls	r2, r2, #1
100168a4:	eb43 0303 	adc.w	r3, r3, r3
100168a8:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
100168ac:	bf08      	it	eq
100168ae:	3d01      	subeq	r5, #1
100168b0:	d0f7      	beq.n	100168a2 <__aeabi_dmul+0x1c6>
100168b2:	ea43 0306 	orr.w	r3, r3, r6
100168b6:	4770      	bx	lr
100168b8:	ea94 0f0c 	teq	r4, ip
100168bc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100168c0:	bf18      	it	ne
100168c2:	ea95 0f0c 	teqne	r5, ip
100168c6:	d00c      	beq.n	100168e2 <__aeabi_dmul+0x206>
100168c8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100168cc:	bf18      	it	ne
100168ce:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100168d2:	d1d1      	bne.n	10016878 <__aeabi_dmul+0x19c>
100168d4:	ea81 0103 	eor.w	r1, r1, r3
100168d8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
100168dc:	f04f 0000 	mov.w	r0, #0
100168e0:	bd70      	pop	{r4, r5, r6, pc}
100168e2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100168e6:	bf06      	itte	eq
100168e8:	4610      	moveq	r0, r2
100168ea:	4619      	moveq	r1, r3
100168ec:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100168f0:	d019      	beq.n	10016926 <__aeabi_dmul+0x24a>
100168f2:	ea94 0f0c 	teq	r4, ip
100168f6:	d102      	bne.n	100168fe <__aeabi_dmul+0x222>
100168f8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
100168fc:	d113      	bne.n	10016926 <__aeabi_dmul+0x24a>
100168fe:	ea95 0f0c 	teq	r5, ip
10016902:	d105      	bne.n	10016910 <__aeabi_dmul+0x234>
10016904:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10016908:	bf1c      	itt	ne
1001690a:	4610      	movne	r0, r2
1001690c:	4619      	movne	r1, r3
1001690e:	d10a      	bne.n	10016926 <__aeabi_dmul+0x24a>
10016910:	ea81 0103 	eor.w	r1, r1, r3
10016914:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
10016918:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001691c:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
10016920:	f04f 0000 	mov.w	r0, #0
10016924:	bd70      	pop	{r4, r5, r6, pc}
10016926:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
1001692a:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
1001692e:	bd70      	pop	{r4, r5, r6, pc}

10016930 <__aeabi_ddiv>:
10016930:	b570      	push	{r4, r5, r6, lr}
10016932:	f04f 0cff 	mov.w	ip, #255	@ 0xff
10016936:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
1001693a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1001693e:	bf1d      	ittte	ne
10016940:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10016944:	ea94 0f0c 	teqne	r4, ip
10016948:	ea95 0f0c 	teqne	r5, ip
1001694c:	f000 f8a7 	bleq	10016a9e <__aeabi_ddiv+0x16e>
10016950:	eba4 0405 	sub.w	r4, r4, r5
10016954:	ea81 0e03 	eor.w	lr, r1, r3
10016958:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1001695c:	ea4f 3101 	mov.w	r1, r1, lsl #12
10016960:	f000 8088 	beq.w	10016a74 <__aeabi_ddiv+0x144>
10016964:	ea4f 3303 	mov.w	r3, r3, lsl #12
10016968:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
1001696c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10016970:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10016974:	ea4f 2202 	mov.w	r2, r2, lsl #8
10016978:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
1001697c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10016980:	ea4f 2600 	mov.w	r6, r0, lsl #8
10016984:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
10016988:	429d      	cmp	r5, r3
1001698a:	bf08      	it	eq
1001698c:	4296      	cmpeq	r6, r2
1001698e:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
10016992:	f504 7440 	add.w	r4, r4, #768	@ 0x300
10016996:	d202      	bcs.n	1001699e <__aeabi_ddiv+0x6e>
10016998:	085b      	lsrs	r3, r3, #1
1001699a:	ea4f 0232 	mov.w	r2, r2, rrx
1001699e:	1ab6      	subs	r6, r6, r2
100169a0:	eb65 0503 	sbc.w	r5, r5, r3
100169a4:	085b      	lsrs	r3, r3, #1
100169a6:	ea4f 0232 	mov.w	r2, r2, rrx
100169aa:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
100169ae:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
100169b2:	ebb6 0e02 	subs.w	lr, r6, r2
100169b6:	eb75 0e03 	sbcs.w	lr, r5, r3
100169ba:	bf22      	ittt	cs
100169bc:	1ab6      	subcs	r6, r6, r2
100169be:	4675      	movcs	r5, lr
100169c0:	ea40 000c 	orrcs.w	r0, r0, ip
100169c4:	085b      	lsrs	r3, r3, #1
100169c6:	ea4f 0232 	mov.w	r2, r2, rrx
100169ca:	ebb6 0e02 	subs.w	lr, r6, r2
100169ce:	eb75 0e03 	sbcs.w	lr, r5, r3
100169d2:	bf22      	ittt	cs
100169d4:	1ab6      	subcs	r6, r6, r2
100169d6:	4675      	movcs	r5, lr
100169d8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
100169dc:	085b      	lsrs	r3, r3, #1
100169de:	ea4f 0232 	mov.w	r2, r2, rrx
100169e2:	ebb6 0e02 	subs.w	lr, r6, r2
100169e6:	eb75 0e03 	sbcs.w	lr, r5, r3
100169ea:	bf22      	ittt	cs
100169ec:	1ab6      	subcs	r6, r6, r2
100169ee:	4675      	movcs	r5, lr
100169f0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
100169f4:	085b      	lsrs	r3, r3, #1
100169f6:	ea4f 0232 	mov.w	r2, r2, rrx
100169fa:	ebb6 0e02 	subs.w	lr, r6, r2
100169fe:	eb75 0e03 	sbcs.w	lr, r5, r3
10016a02:	bf22      	ittt	cs
10016a04:	1ab6      	subcs	r6, r6, r2
10016a06:	4675      	movcs	r5, lr
10016a08:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10016a0c:	ea55 0e06 	orrs.w	lr, r5, r6
10016a10:	d018      	beq.n	10016a44 <__aeabi_ddiv+0x114>
10016a12:	ea4f 1505 	mov.w	r5, r5, lsl #4
10016a16:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10016a1a:	ea4f 1606 	mov.w	r6, r6, lsl #4
10016a1e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10016a22:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10016a26:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10016a2a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10016a2e:	d1c0      	bne.n	100169b2 <__aeabi_ddiv+0x82>
10016a30:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10016a34:	d10b      	bne.n	10016a4e <__aeabi_ddiv+0x11e>
10016a36:	ea41 0100 	orr.w	r1, r1, r0
10016a3a:	f04f 0000 	mov.w	r0, #0
10016a3e:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
10016a42:	e7b6      	b.n	100169b2 <__aeabi_ddiv+0x82>
10016a44:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
10016a48:	bf04      	itt	eq
10016a4a:	4301      	orreq	r1, r0
10016a4c:	2000      	moveq	r0, #0
10016a4e:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
10016a52:	bf88      	it	hi
10016a54:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
10016a58:	f63f aeaf 	bhi.w	100167ba <__aeabi_dmul+0xde>
10016a5c:	ebb5 0c03 	subs.w	ip, r5, r3
10016a60:	bf04      	itt	eq
10016a62:	ebb6 0c02 	subseq.w	ip, r6, r2
10016a66:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10016a6a:	f150 0000 	adcs.w	r0, r0, #0
10016a6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10016a72:	bd70      	pop	{r4, r5, r6, pc}
10016a74:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
10016a78:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10016a7c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10016a80:	bfc2      	ittt	gt
10016a82:	ebd4 050c 	rsbsgt	r5, r4, ip
10016a86:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10016a8a:	bd70      	popgt	{r4, r5, r6, pc}
10016a8c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
10016a90:	f04f 0e00 	mov.w	lr, #0
10016a94:	3c01      	subs	r4, #1
10016a96:	e690      	b.n	100167ba <__aeabi_dmul+0xde>
10016a98:	ea45 0e06 	orr.w	lr, r5, r6
10016a9c:	e68d      	b.n	100167ba <__aeabi_dmul+0xde>
10016a9e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10016aa2:	ea94 0f0c 	teq	r4, ip
10016aa6:	bf08      	it	eq
10016aa8:	ea95 0f0c 	teqeq	r5, ip
10016aac:	f43f af3b 	beq.w	10016926 <__aeabi_dmul+0x24a>
10016ab0:	ea94 0f0c 	teq	r4, ip
10016ab4:	d10a      	bne.n	10016acc <__aeabi_ddiv+0x19c>
10016ab6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10016aba:	f47f af34 	bne.w	10016926 <__aeabi_dmul+0x24a>
10016abe:	ea95 0f0c 	teq	r5, ip
10016ac2:	f47f af25 	bne.w	10016910 <__aeabi_dmul+0x234>
10016ac6:	4610      	mov	r0, r2
10016ac8:	4619      	mov	r1, r3
10016aca:	e72c      	b.n	10016926 <__aeabi_dmul+0x24a>
10016acc:	ea95 0f0c 	teq	r5, ip
10016ad0:	d106      	bne.n	10016ae0 <__aeabi_ddiv+0x1b0>
10016ad2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10016ad6:	f43f aefd 	beq.w	100168d4 <__aeabi_dmul+0x1f8>
10016ada:	4610      	mov	r0, r2
10016adc:	4619      	mov	r1, r3
10016ade:	e722      	b.n	10016926 <__aeabi_dmul+0x24a>
10016ae0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10016ae4:	bf18      	it	ne
10016ae6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10016aea:	f47f aec5 	bne.w	10016878 <__aeabi_dmul+0x19c>
10016aee:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10016af2:	f47f af0d 	bne.w	10016910 <__aeabi_dmul+0x234>
10016af6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10016afa:	f47f aeeb 	bne.w	100168d4 <__aeabi_dmul+0x1f8>
10016afe:	e712      	b.n	10016926 <__aeabi_dmul+0x24a>

10016b00 <__gedf2>:
10016b00:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
10016b04:	e006      	b.n	10016b14 <__cmpdf2+0x4>
10016b06:	bf00      	nop

10016b08 <__ledf2>:
10016b08:	f04f 0c01 	mov.w	ip, #1
10016b0c:	e002      	b.n	10016b14 <__cmpdf2+0x4>
10016b0e:	bf00      	nop

10016b10 <__cmpdf2>:
10016b10:	f04f 0c01 	mov.w	ip, #1
10016b14:	f84d cd04 	str.w	ip, [sp, #-4]!
10016b18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10016b1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10016b20:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10016b24:	bf18      	it	ne
10016b26:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10016b2a:	d01b      	beq.n	10016b64 <__cmpdf2+0x54>
10016b2c:	b001      	add	sp, #4
10016b2e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10016b32:	bf0c      	ite	eq
10016b34:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10016b38:	ea91 0f03 	teqne	r1, r3
10016b3c:	bf02      	ittt	eq
10016b3e:	ea90 0f02 	teqeq	r0, r2
10016b42:	2000      	moveq	r0, #0
10016b44:	4770      	bxeq	lr
10016b46:	f110 0f00 	cmn.w	r0, #0
10016b4a:	ea91 0f03 	teq	r1, r3
10016b4e:	bf58      	it	pl
10016b50:	4299      	cmppl	r1, r3
10016b52:	bf08      	it	eq
10016b54:	4290      	cmpeq	r0, r2
10016b56:	bf2c      	ite	cs
10016b58:	17d8      	asrcs	r0, r3, #31
10016b5a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10016b5e:	f040 0001 	orr.w	r0, r0, #1
10016b62:	4770      	bx	lr
10016b64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10016b68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10016b6c:	d102      	bne.n	10016b74 <__cmpdf2+0x64>
10016b6e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10016b72:	d107      	bne.n	10016b84 <__cmpdf2+0x74>
10016b74:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10016b78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10016b7c:	d1d6      	bne.n	10016b2c <__cmpdf2+0x1c>
10016b7e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10016b82:	d0d3      	beq.n	10016b2c <__cmpdf2+0x1c>
10016b84:	f85d 0b04 	ldr.w	r0, [sp], #4
10016b88:	4770      	bx	lr
10016b8a:	bf00      	nop

10016b8c <__aeabi_cdrcmple>:
10016b8c:	4684      	mov	ip, r0
10016b8e:	4610      	mov	r0, r2
10016b90:	4662      	mov	r2, ip
10016b92:	468c      	mov	ip, r1
10016b94:	4619      	mov	r1, r3
10016b96:	4663      	mov	r3, ip
10016b98:	e000      	b.n	10016b9c <__aeabi_cdcmpeq>
10016b9a:	bf00      	nop

10016b9c <__aeabi_cdcmpeq>:
10016b9c:	b501      	push	{r0, lr}
10016b9e:	f7ff ffb7 	bl	10016b10 <__cmpdf2>
10016ba2:	2800      	cmp	r0, #0
10016ba4:	bf48      	it	mi
10016ba6:	f110 0f00 	cmnmi.w	r0, #0
10016baa:	bd01      	pop	{r0, pc}

10016bac <__aeabi_dcmpeq>:
10016bac:	f84d ed08 	str.w	lr, [sp, #-8]!
10016bb0:	f7ff fff4 	bl	10016b9c <__aeabi_cdcmpeq>
10016bb4:	bf0c      	ite	eq
10016bb6:	2001      	moveq	r0, #1
10016bb8:	2000      	movne	r0, #0
10016bba:	f85d fb08 	ldr.w	pc, [sp], #8
10016bbe:	bf00      	nop

10016bc0 <__aeabi_dcmplt>:
10016bc0:	f84d ed08 	str.w	lr, [sp, #-8]!
10016bc4:	f7ff ffea 	bl	10016b9c <__aeabi_cdcmpeq>
10016bc8:	bf34      	ite	cc
10016bca:	2001      	movcc	r0, #1
10016bcc:	2000      	movcs	r0, #0
10016bce:	f85d fb08 	ldr.w	pc, [sp], #8
10016bd2:	bf00      	nop

10016bd4 <__aeabi_dcmple>:
10016bd4:	f84d ed08 	str.w	lr, [sp, #-8]!
10016bd8:	f7ff ffe0 	bl	10016b9c <__aeabi_cdcmpeq>
10016bdc:	bf94      	ite	ls
10016bde:	2001      	movls	r0, #1
10016be0:	2000      	movhi	r0, #0
10016be2:	f85d fb08 	ldr.w	pc, [sp], #8
10016be6:	bf00      	nop

10016be8 <__aeabi_dcmpge>:
10016be8:	f84d ed08 	str.w	lr, [sp, #-8]!
10016bec:	f7ff ffce 	bl	10016b8c <__aeabi_cdrcmple>
10016bf0:	bf94      	ite	ls
10016bf2:	2001      	movls	r0, #1
10016bf4:	2000      	movhi	r0, #0
10016bf6:	f85d fb08 	ldr.w	pc, [sp], #8
10016bfa:	bf00      	nop

10016bfc <__aeabi_dcmpgt>:
10016bfc:	f84d ed08 	str.w	lr, [sp, #-8]!
10016c00:	f7ff ffc4 	bl	10016b8c <__aeabi_cdrcmple>
10016c04:	bf34      	ite	cc
10016c06:	2001      	movcc	r0, #1
10016c08:	2000      	movcs	r0, #0
10016c0a:	f85d fb08 	ldr.w	pc, [sp], #8
10016c0e:	bf00      	nop

10016c10 <__aeabi_dcmpun>:
10016c10:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10016c14:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10016c18:	d102      	bne.n	10016c20 <__aeabi_dcmpun+0x10>
10016c1a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10016c1e:	d10a      	bne.n	10016c36 <__aeabi_dcmpun+0x26>
10016c20:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10016c24:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10016c28:	d102      	bne.n	10016c30 <__aeabi_dcmpun+0x20>
10016c2a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10016c2e:	d102      	bne.n	10016c36 <__aeabi_dcmpun+0x26>
10016c30:	f04f 0000 	mov.w	r0, #0
10016c34:	4770      	bx	lr
10016c36:	f04f 0001 	mov.w	r0, #1
10016c3a:	4770      	bx	lr

10016c3c <__aeabi_d2iz>:
10016c3c:	ea4f 0241 	mov.w	r2, r1, lsl #1
10016c40:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
10016c44:	d215      	bcs.n	10016c72 <__aeabi_d2iz+0x36>
10016c46:	d511      	bpl.n	10016c6c <__aeabi_d2iz+0x30>
10016c48:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
10016c4c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10016c50:	d912      	bls.n	10016c78 <__aeabi_d2iz+0x3c>
10016c52:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10016c56:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
10016c5a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10016c5e:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
10016c62:	fa23 f002 	lsr.w	r0, r3, r2
10016c66:	bf18      	it	ne
10016c68:	4240      	negne	r0, r0
10016c6a:	4770      	bx	lr
10016c6c:	f04f 0000 	mov.w	r0, #0
10016c70:	4770      	bx	lr
10016c72:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10016c76:	d105      	bne.n	10016c84 <__aeabi_d2iz+0x48>
10016c78:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
10016c7c:	bf08      	it	eq
10016c7e:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
10016c82:	4770      	bx	lr
10016c84:	f04f 0000 	mov.w	r0, #0
10016c88:	4770      	bx	lr
10016c8a:	bf00      	nop

10016c8c <__aeabi_uldivmod>:
10016c8c:	b953      	cbnz	r3, 10016ca4 <__aeabi_uldivmod+0x18>
10016c8e:	b94a      	cbnz	r2, 10016ca4 <__aeabi_uldivmod+0x18>
10016c90:	2900      	cmp	r1, #0
10016c92:	bf08      	it	eq
10016c94:	2800      	cmpeq	r0, #0
10016c96:	bf1c      	itt	ne
10016c98:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
10016c9c:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
10016ca0:	f000 b96a 	b.w	10016f78 <__aeabi_idiv0>
10016ca4:	f1ad 0c08 	sub.w	ip, sp, #8
10016ca8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10016cac:	f000 f806 	bl	10016cbc <__udivmoddi4>
10016cb0:	f8dd e004 	ldr.w	lr, [sp, #4]
10016cb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10016cb8:	b004      	add	sp, #16
10016cba:	4770      	bx	lr

10016cbc <__udivmoddi4>:
10016cbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10016cc0:	9d08      	ldr	r5, [sp, #32]
10016cc2:	460c      	mov	r4, r1
10016cc4:	2b00      	cmp	r3, #0
10016cc6:	d14e      	bne.n	10016d66 <__udivmoddi4+0xaa>
10016cc8:	4694      	mov	ip, r2
10016cca:	458c      	cmp	ip, r1
10016ccc:	4686      	mov	lr, r0
10016cce:	fab2 f282 	clz	r2, r2
10016cd2:	d962      	bls.n	10016d9a <__udivmoddi4+0xde>
10016cd4:	b14a      	cbz	r2, 10016cea <__udivmoddi4+0x2e>
10016cd6:	f1c2 0320 	rsb	r3, r2, #32
10016cda:	4091      	lsls	r1, r2
10016cdc:	fa20 f303 	lsr.w	r3, r0, r3
10016ce0:	fa0c fc02 	lsl.w	ip, ip, r2
10016ce4:	4319      	orrs	r1, r3
10016ce6:	fa00 fe02 	lsl.w	lr, r0, r2
10016cea:	ea4f 471c 	mov.w	r7, ip, lsr #16
10016cee:	fa1f f68c 	uxth.w	r6, ip
10016cf2:	fbb1 f4f7 	udiv	r4, r1, r7
10016cf6:	ea4f 431e 	mov.w	r3, lr, lsr #16
10016cfa:	fb07 1114 	mls	r1, r7, r4, r1
10016cfe:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10016d02:	fb04 f106 	mul.w	r1, r4, r6
10016d06:	4299      	cmp	r1, r3
10016d08:	d90a      	bls.n	10016d20 <__udivmoddi4+0x64>
10016d0a:	eb1c 0303 	adds.w	r3, ip, r3
10016d0e:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
10016d12:	f080 8112 	bcs.w	10016f3a <__udivmoddi4+0x27e>
10016d16:	4299      	cmp	r1, r3
10016d18:	f240 810f 	bls.w	10016f3a <__udivmoddi4+0x27e>
10016d1c:	3c02      	subs	r4, #2
10016d1e:	4463      	add	r3, ip
10016d20:	1a59      	subs	r1, r3, r1
10016d22:	fa1f f38e 	uxth.w	r3, lr
10016d26:	fbb1 f0f7 	udiv	r0, r1, r7
10016d2a:	fb07 1110 	mls	r1, r7, r0, r1
10016d2e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10016d32:	fb00 f606 	mul.w	r6, r0, r6
10016d36:	429e      	cmp	r6, r3
10016d38:	d90a      	bls.n	10016d50 <__udivmoddi4+0x94>
10016d3a:	eb1c 0303 	adds.w	r3, ip, r3
10016d3e:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
10016d42:	f080 80fc 	bcs.w	10016f3e <__udivmoddi4+0x282>
10016d46:	429e      	cmp	r6, r3
10016d48:	f240 80f9 	bls.w	10016f3e <__udivmoddi4+0x282>
10016d4c:	4463      	add	r3, ip
10016d4e:	3802      	subs	r0, #2
10016d50:	1b9b      	subs	r3, r3, r6
10016d52:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
10016d56:	2100      	movs	r1, #0
10016d58:	b11d      	cbz	r5, 10016d62 <__udivmoddi4+0xa6>
10016d5a:	40d3      	lsrs	r3, r2
10016d5c:	2200      	movs	r2, #0
10016d5e:	e9c5 3200 	strd	r3, r2, [r5]
10016d62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10016d66:	428b      	cmp	r3, r1
10016d68:	d905      	bls.n	10016d76 <__udivmoddi4+0xba>
10016d6a:	b10d      	cbz	r5, 10016d70 <__udivmoddi4+0xb4>
10016d6c:	e9c5 0100 	strd	r0, r1, [r5]
10016d70:	2100      	movs	r1, #0
10016d72:	4608      	mov	r0, r1
10016d74:	e7f5      	b.n	10016d62 <__udivmoddi4+0xa6>
10016d76:	fab3 f183 	clz	r1, r3
10016d7a:	2900      	cmp	r1, #0
10016d7c:	d146      	bne.n	10016e0c <__udivmoddi4+0x150>
10016d7e:	42a3      	cmp	r3, r4
10016d80:	d302      	bcc.n	10016d88 <__udivmoddi4+0xcc>
10016d82:	4290      	cmp	r0, r2
10016d84:	f0c0 80f0 	bcc.w	10016f68 <__udivmoddi4+0x2ac>
10016d88:	1a86      	subs	r6, r0, r2
10016d8a:	eb64 0303 	sbc.w	r3, r4, r3
10016d8e:	2001      	movs	r0, #1
10016d90:	2d00      	cmp	r5, #0
10016d92:	d0e6      	beq.n	10016d62 <__udivmoddi4+0xa6>
10016d94:	e9c5 6300 	strd	r6, r3, [r5]
10016d98:	e7e3      	b.n	10016d62 <__udivmoddi4+0xa6>
10016d9a:	2a00      	cmp	r2, #0
10016d9c:	f040 8090 	bne.w	10016ec0 <__udivmoddi4+0x204>
10016da0:	eba1 040c 	sub.w	r4, r1, ip
10016da4:	ea4f 481c 	mov.w	r8, ip, lsr #16
10016da8:	fa1f f78c 	uxth.w	r7, ip
10016dac:	2101      	movs	r1, #1
10016dae:	fbb4 f6f8 	udiv	r6, r4, r8
10016db2:	ea4f 431e 	mov.w	r3, lr, lsr #16
10016db6:	fb08 4416 	mls	r4, r8, r6, r4
10016dba:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10016dbe:	fb07 f006 	mul.w	r0, r7, r6
10016dc2:	4298      	cmp	r0, r3
10016dc4:	d908      	bls.n	10016dd8 <__udivmoddi4+0x11c>
10016dc6:	eb1c 0303 	adds.w	r3, ip, r3
10016dca:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
10016dce:	d202      	bcs.n	10016dd6 <__udivmoddi4+0x11a>
10016dd0:	4298      	cmp	r0, r3
10016dd2:	f200 80cd 	bhi.w	10016f70 <__udivmoddi4+0x2b4>
10016dd6:	4626      	mov	r6, r4
10016dd8:	1a1c      	subs	r4, r3, r0
10016dda:	fa1f f38e 	uxth.w	r3, lr
10016dde:	fbb4 f0f8 	udiv	r0, r4, r8
10016de2:	fb08 4410 	mls	r4, r8, r0, r4
10016de6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
10016dea:	fb00 f707 	mul.w	r7, r0, r7
10016dee:	429f      	cmp	r7, r3
10016df0:	d908      	bls.n	10016e04 <__udivmoddi4+0x148>
10016df2:	eb1c 0303 	adds.w	r3, ip, r3
10016df6:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
10016dfa:	d202      	bcs.n	10016e02 <__udivmoddi4+0x146>
10016dfc:	429f      	cmp	r7, r3
10016dfe:	f200 80b0 	bhi.w	10016f62 <__udivmoddi4+0x2a6>
10016e02:	4620      	mov	r0, r4
10016e04:	1bdb      	subs	r3, r3, r7
10016e06:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10016e0a:	e7a5      	b.n	10016d58 <__udivmoddi4+0x9c>
10016e0c:	f1c1 0620 	rsb	r6, r1, #32
10016e10:	408b      	lsls	r3, r1
10016e12:	fa22 f706 	lsr.w	r7, r2, r6
10016e16:	431f      	orrs	r7, r3
10016e18:	fa20 fc06 	lsr.w	ip, r0, r6
10016e1c:	fa04 f301 	lsl.w	r3, r4, r1
10016e20:	ea43 030c 	orr.w	r3, r3, ip
10016e24:	40f4      	lsrs	r4, r6
10016e26:	fa00 f801 	lsl.w	r8, r0, r1
10016e2a:	0c38      	lsrs	r0, r7, #16
10016e2c:	ea4f 4913 	mov.w	r9, r3, lsr #16
10016e30:	fbb4 fef0 	udiv	lr, r4, r0
10016e34:	fa1f fc87 	uxth.w	ip, r7
10016e38:	fb00 441e 	mls	r4, r0, lr, r4
10016e3c:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10016e40:	fb0e f90c 	mul.w	r9, lr, ip
10016e44:	45a1      	cmp	r9, r4
10016e46:	fa02 f201 	lsl.w	r2, r2, r1
10016e4a:	d90a      	bls.n	10016e62 <__udivmoddi4+0x1a6>
10016e4c:	193c      	adds	r4, r7, r4
10016e4e:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
10016e52:	f080 8084 	bcs.w	10016f5e <__udivmoddi4+0x2a2>
10016e56:	45a1      	cmp	r9, r4
10016e58:	f240 8081 	bls.w	10016f5e <__udivmoddi4+0x2a2>
10016e5c:	f1ae 0e02 	sub.w	lr, lr, #2
10016e60:	443c      	add	r4, r7
10016e62:	eba4 0409 	sub.w	r4, r4, r9
10016e66:	fa1f f983 	uxth.w	r9, r3
10016e6a:	fbb4 f3f0 	udiv	r3, r4, r0
10016e6e:	fb00 4413 	mls	r4, r0, r3, r4
10016e72:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
10016e76:	fb03 fc0c 	mul.w	ip, r3, ip
10016e7a:	45a4      	cmp	ip, r4
10016e7c:	d907      	bls.n	10016e8e <__udivmoddi4+0x1d2>
10016e7e:	193c      	adds	r4, r7, r4
10016e80:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
10016e84:	d267      	bcs.n	10016f56 <__udivmoddi4+0x29a>
10016e86:	45a4      	cmp	ip, r4
10016e88:	d965      	bls.n	10016f56 <__udivmoddi4+0x29a>
10016e8a:	3b02      	subs	r3, #2
10016e8c:	443c      	add	r4, r7
10016e8e:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
10016e92:	fba0 9302 	umull	r9, r3, r0, r2
10016e96:	eba4 040c 	sub.w	r4, r4, ip
10016e9a:	429c      	cmp	r4, r3
10016e9c:	46ce      	mov	lr, r9
10016e9e:	469c      	mov	ip, r3
10016ea0:	d351      	bcc.n	10016f46 <__udivmoddi4+0x28a>
10016ea2:	d04e      	beq.n	10016f42 <__udivmoddi4+0x286>
10016ea4:	b155      	cbz	r5, 10016ebc <__udivmoddi4+0x200>
10016ea6:	ebb8 030e 	subs.w	r3, r8, lr
10016eaa:	eb64 040c 	sbc.w	r4, r4, ip
10016eae:	fa04 f606 	lsl.w	r6, r4, r6
10016eb2:	40cb      	lsrs	r3, r1
10016eb4:	431e      	orrs	r6, r3
10016eb6:	40cc      	lsrs	r4, r1
10016eb8:	e9c5 6400 	strd	r6, r4, [r5]
10016ebc:	2100      	movs	r1, #0
10016ebe:	e750      	b.n	10016d62 <__udivmoddi4+0xa6>
10016ec0:	f1c2 0320 	rsb	r3, r2, #32
10016ec4:	fa20 f103 	lsr.w	r1, r0, r3
10016ec8:	fa0c fc02 	lsl.w	ip, ip, r2
10016ecc:	fa24 f303 	lsr.w	r3, r4, r3
10016ed0:	4094      	lsls	r4, r2
10016ed2:	430c      	orrs	r4, r1
10016ed4:	ea4f 481c 	mov.w	r8, ip, lsr #16
10016ed8:	fa00 fe02 	lsl.w	lr, r0, r2
10016edc:	fa1f f78c 	uxth.w	r7, ip
10016ee0:	fbb3 f0f8 	udiv	r0, r3, r8
10016ee4:	fb08 3110 	mls	r1, r8, r0, r3
10016ee8:	0c23      	lsrs	r3, r4, #16
10016eea:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
10016eee:	fb00 f107 	mul.w	r1, r0, r7
10016ef2:	4299      	cmp	r1, r3
10016ef4:	d908      	bls.n	10016f08 <__udivmoddi4+0x24c>
10016ef6:	eb1c 0303 	adds.w	r3, ip, r3
10016efa:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
10016efe:	d22c      	bcs.n	10016f5a <__udivmoddi4+0x29e>
10016f00:	4299      	cmp	r1, r3
10016f02:	d92a      	bls.n	10016f5a <__udivmoddi4+0x29e>
10016f04:	3802      	subs	r0, #2
10016f06:	4463      	add	r3, ip
10016f08:	1a5b      	subs	r3, r3, r1
10016f0a:	b2a4      	uxth	r4, r4
10016f0c:	fbb3 f1f8 	udiv	r1, r3, r8
10016f10:	fb08 3311 	mls	r3, r8, r1, r3
10016f14:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
10016f18:	fb01 f307 	mul.w	r3, r1, r7
10016f1c:	42a3      	cmp	r3, r4
10016f1e:	d908      	bls.n	10016f32 <__udivmoddi4+0x276>
10016f20:	eb1c 0404 	adds.w	r4, ip, r4
10016f24:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
10016f28:	d213      	bcs.n	10016f52 <__udivmoddi4+0x296>
10016f2a:	42a3      	cmp	r3, r4
10016f2c:	d911      	bls.n	10016f52 <__udivmoddi4+0x296>
10016f2e:	3902      	subs	r1, #2
10016f30:	4464      	add	r4, ip
10016f32:	1ae4      	subs	r4, r4, r3
10016f34:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
10016f38:	e739      	b.n	10016dae <__udivmoddi4+0xf2>
10016f3a:	4604      	mov	r4, r0
10016f3c:	e6f0      	b.n	10016d20 <__udivmoddi4+0x64>
10016f3e:	4608      	mov	r0, r1
10016f40:	e706      	b.n	10016d50 <__udivmoddi4+0x94>
10016f42:	45c8      	cmp	r8, r9
10016f44:	d2ae      	bcs.n	10016ea4 <__udivmoddi4+0x1e8>
10016f46:	ebb9 0e02 	subs.w	lr, r9, r2
10016f4a:	eb63 0c07 	sbc.w	ip, r3, r7
10016f4e:	3801      	subs	r0, #1
10016f50:	e7a8      	b.n	10016ea4 <__udivmoddi4+0x1e8>
10016f52:	4631      	mov	r1, r6
10016f54:	e7ed      	b.n	10016f32 <__udivmoddi4+0x276>
10016f56:	4603      	mov	r3, r0
10016f58:	e799      	b.n	10016e8e <__udivmoddi4+0x1d2>
10016f5a:	4630      	mov	r0, r6
10016f5c:	e7d4      	b.n	10016f08 <__udivmoddi4+0x24c>
10016f5e:	46d6      	mov	lr, sl
10016f60:	e77f      	b.n	10016e62 <__udivmoddi4+0x1a6>
10016f62:	4463      	add	r3, ip
10016f64:	3802      	subs	r0, #2
10016f66:	e74d      	b.n	10016e04 <__udivmoddi4+0x148>
10016f68:	4606      	mov	r6, r0
10016f6a:	4623      	mov	r3, r4
10016f6c:	4608      	mov	r0, r1
10016f6e:	e70f      	b.n	10016d90 <__udivmoddi4+0xd4>
10016f70:	3e02      	subs	r6, #2
10016f72:	4463      	add	r3, ip
10016f74:	e730      	b.n	10016dd8 <__udivmoddi4+0x11c>
10016f76:	bf00      	nop

10016f78 <__aeabi_idiv0>:
10016f78:	4770      	bx	lr
10016f7a:	bf00      	nop
10016f7c:	7272455b 	.word	0x7272455b
10016f80:	205d726f 	.word	0x205d726f
10016f84:	000a6425 	.word	0x000a6425
10016f88:	20433249 	.word	0x20433249
10016f8c:	6c696166 	.word	0x6c696166
10016f90:	74206465 	.word	0x74206465
10016f94:	6e69206f 	.word	0x6e69206f
10016f98:	61697469 	.word	0x61697469
10016f9c:	657a696c 	.word	0x657a696c
10016fa0:	455b0a2e 	.word	0x455b0a2e
10016fa4:	726f7272 	.word	0x726f7272
10016fa8:	6425205d 	.word	0x6425205d
10016fac:	0000000a 	.word	0x0000000a
10016fb0:	74697277 	.word	0x74697277
10016fb4:	75732065 	.word	0x75732065
10016fb8:	73656363 	.word	0x73656363
10016fbc:	25203a73 	.word	0x25203a73
10016fc0:	00000a64 	.word	0x00000a64

10016fc4 <num_leds>:
10016fc4:	00000003                                ....

10016fc8 <led_pin>:
10016fc8:	40080400 00000001 00010001 40080400     ...@...........@
10016fd8:	00000002 00010001 40080400 00000004     ...........@....
10016fe8:	00010001                                ....

10016fec <num_pbs>:
10016fec:	00000002                                ....

10016ff0 <pb_pin>:
10016ff0:	40008000 00000004 00010100 40009000     ...@...........@
10017000:	00000080 00010100                       ........

10017008 <gpio_cfg_uart3>:
10017008:	40080400 000000c0 00000003              ...@........

10017014 <gpio_cfg_uart2>:
10017014:	40009000 00000003 00000002              ...@........

10017020 <gpio_cfg_uart1>:
10017020:	40008000 00003000 00000002              ...@.0......

1001702c <gpio_cfg_uart0>:
1001702c:	40008000 00000003 00000002              ...@........

10017038 <gpio_cfg_i2c2>:
10017038:	40008000 c0000000 00000002              ...@........

10017044 <gpio_cfg_i2c1>:
10017044:	40008000 00030000 00000002              ...@........

10017050 <gpio_cfg_i2c0>:
10017050:	40008000 00000c00 00000002              ...@........

1001705c <gpio_cfg_extclk>:
1001705c:	40008000 00000008 00000002              ...@........

10017068 <CSWTCH.16>:
10017068:	40008000 40009000 40080400 40080600     ...@...@...@...@
10017078:	00464e49 00666e69 004e414e 006e616e     INF.inf.NAN.nan.
10017088:	33323130 37363534 62613938 66656463     0123456789abcdef
10017098:	00000000 33323130 37363534 42413938     ....0123456789AB
100170a8:	46454443 00000000 6c756e28 0000296c     CDEF....(null)..
100170b8:	00000030                                0...

100170bc <zeroes.0>:
100170bc:	30303030 30303030 30303030 30303030     0000000000000000

100170cc <blanks.1>:
100170cc:	20202020 20202020 20202020 20202020                     

100170dc <zeroes.0>:
100170dc:	30303030 30303030 30303030 30303030     0000000000000000

100170ec <blanks.1>:
100170ec:	20202020 20202020 20202020 20202020                     
100170fc:	0000002e 435f434c 414c4c4f 00004554     ....LC_COLLATE..
1001710c:	435f434c 45505954 00000000 4d5f434c     LC_CTYPE....LC_M
1001711c:	54454e4f 00595241 4e5f434c 52454d55     ONETARY.LC_NUMER
1001712c:	00004349 545f434c 00454d49 4d5f434c     IC..LC_TIME.LC_M
1001713c:	41535345 00534547 69666e49 7974696e     ESSAGES.Infinity
1001714c:	00000000 004e614e 6c6c6142 7320636f     ....NaN.Balloc s
1001715c:	65636375 64656465 00000000 7461642f     ucceeded..../dat
1001716c:	656a2f61 6e696b6e 6f772f73 70736b72     a/jenkins/worksp
1001717c:	2f656361 2d554e47 6c6f6f74 69616863     ace/GNU-toolchai
1001718c:	72612f6e 32312d6d 6372732f 77656e2f     n/arm-12/src/new
1001719c:	2d62696c 77677963 6e2f6e69 696c7765     lib-cygwin/newli
100171ac:	696c2f62 732f6362 696c6474 74642f62     b/libc/stdlib/dt
100171bc:	632e616f 00000000                       oa.c....

100171c4 <_ctype_>:
100171c4:	20202000 20202020 28282020 20282828     .         ((((( 
100171d4:	20202020 20202020 20202020 20202020                     
100171e4:	10108820 10101010 10101010 10101010      ...............
100171f4:	04040410 04040404 10040404 10101010     ................
10017204:	41411010 41414141 01010101 01010101     ..AAAAAA........
10017214:	01010101 01010101 01010101 10101010     ................
10017224:	42421010 42424242 02020202 02020202     ..BBBBBB........
10017234:	02020202 02020202 02020202 10101010     ................
10017244:	00000020 00000000 00000000 00000000      ...............
	...
100172c8:	7566202c 6974636e 203a6e6f 00000000     , function: ....
100172d8:	65737361 6f697472 2522206e 66202273     assertion "%s" f
100172e8:	656c6961 66203a64 20656c69 22732522     ailed: file "%s"
100172f8:	696c202c 2520656e 25732564 00000a73     , line %d%s%s...
10017308:	7461642f 656a2f61 6e696b6e 6f772f73     /data/jenkins/wo
10017318:	70736b72 2f656361 2d554e47 6c6f6f74     rkspace/GNU-tool
10017328:	69616863 72612f6e 32312d6d 6372732f     chain/arm-12/src
10017338:	77656e2f 2d62696c 77677963 6e2f6e69     /newlib-cygwin/n
10017348:	696c7765 696c2f62 732f6362 696c6474     ewlib/libc/stdli
10017358:	706d2f62 2e636572 00000063              b/mprec.c...

10017364 <p05.0>:
10017364:	00000005 00000019 0000007d              ........}...

10017370 <__mprec_bigtens>:
10017370:	37e08000 4341c379 b5056e17 4693b8b5     ...7y.AC.n.....F
10017380:	e93ff9f5 4d384f03 f9301d32 5a827748     ..?..O8M2.0.Hw.Z
10017390:	7f73bf3c 75154fdd                       <.s..O.u

10017398 <__mprec_tens>:
10017398:	00000000 3ff00000 00000000 40240000     .......?......$@
100173a8:	00000000 40590000 00000000 408f4000     ......Y@.....@.@
100173b8:	00000000 40c38800 00000000 40f86a00     .......@.....j.@
100173c8:	00000000 412e8480 00000000 416312d0     .......A......cA
100173d8:	00000000 4197d784 00000000 41cdcd65     .......A....e..A
100173e8:	20000000 4202a05f e8000000 42374876     ... _..B....vH7B
100173f8:	a2000000 426d1a94 e5400000 42a2309c     ......mB..@..0.B
10017408:	1e900000 42d6bcc4 26340000 430c6bf5     .......B..4&.k.C
10017418:	37e08000 4341c379 85d8a000 43763457     ...7y.AC....W4vC
10017428:	674ec800 43abc16d 60913d00 43e158e4     ..Ngm..C.=.`.X.C
10017438:	78b58c40 4415af1d d6e2ef50 444b1ae4     @..x...DP.....KD
10017448:	064dd592 4480f0cf c7e14af6 44b52d02     ..M....D.J...-.D
10017458:	79d99db4 44ea7843                       ...yCx.D

10017460 <_init>:
10017460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10017462:	bf00      	nop
10017464:	bcf8      	pop	{r3, r4, r5, r6, r7}
10017466:	bc08      	pop	{r3}
10017468:	469e      	mov	lr, r3
1001746a:	4770      	bx	lr

1001746c <_fini>:
1001746c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1001746e:	bf00      	nop
10017470:	bcf8      	pop	{r3, r4, r5, r6, r7}
10017472:	bc08      	pop	{r3}
10017474:	469e      	mov	lr, r3
10017476:	4770      	bx	lr

10017478 <__EH_FRAME_BEGIN__>:
10017478:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
10017488:	0c1b 000d 0014 0000 0018 0000 91b8 ffff     ................
10017498:	0134 0000 0200 0a71 0b43 0000 0010 0000     4.....q.C.......
100174a8:	0000 0000 7a01 0052 7c02 010e 0c1b 000d     .....zR..|......
100174b8:	001c 0000 0018 0000 92c0 ffff 00d8 0000     ................
100174c8:	4100 080e 0185 0284 4902 4a0a c4c5 0b41     .A.......I.J..A.
100174d8:	0010 0000 0000 0000 7a01 0052 7c02 010e     .........zR..|..
100174e8:	0c1b 000d 0038 0000 0018 0000 dd2c ffff     ....8.......,...
100174f8:	009e 0000 5100 100e 0484 0385 0286 0187     .....Q..........
10017508:	c75b c5c6 0ec4 4c00 420a 0a0b 0b42 100e     [......L.B..B...
10017518:	0484 0385 0286 0187 c751 c5c6 0ec4 0000     ........Q.......

10017528 <__FRAME_END__>:
10017528:	0000 0000                                   ....
